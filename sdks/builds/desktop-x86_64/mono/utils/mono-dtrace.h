/*
 * Generated by dtrace(1M).
 */

#ifndef	_MONO_DTRACE_H
#define	_MONO_DTRACE_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define MONO_STABILITY "___dtrace_stability$mono$v1$5_5_5_1_1_0_1_1_0_5_5_5_5_5_5"

#define MONO_TYPEDEFS "___dtrace_typedefs$mono$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	MONO_GC_BEGIN(arg0) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__begin$v1$696e74(arg0); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_CONCURRENT_START_BEGIN(arg0) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__concurrent__start__begin$v1$696e74(arg0); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_CONCURRENT_START_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__concurrent__start__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_CONCURRENT_UPDATE_FINISH_BEGIN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__concurrent__update__finish__begin$v1$696e74$6c6f6e67206c6f6e67(arg0, arg1); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_CONCURRENT_UPDATE_FINISH_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__concurrent__update__finish__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_END(arg0) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__end$v1$696e74(arg0); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_END_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__end$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_FINALIZE_ENQUEUE(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__finalize__enqueue$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a$696e74$696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_FINALIZE_ENQUEUE_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__finalize__enqueue$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_FINALIZE_INVOKE(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__finalize__invoke$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_FINALIZE_INVOKE_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__finalize__invoke$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_GLOBAL_REMSET_ADD(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__global__remset__add$v1$75696e747074725f74$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_GLOBAL_REMSET_ADD_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__global__remset__add$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_MAJOR_OBJ_ALLOC_DEGRADED(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__major__obj__alloc__degraded$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_MAJOR_OBJ_ALLOC_DEGRADED_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__major__obj__alloc__degraded$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_MAJOR_OBJ_ALLOC_LARGE(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__major__obj__alloc__large$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_MAJOR_OBJ_ALLOC_LARGE_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__major__obj__alloc__large$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_MAJOR_OBJ_ALLOC_PINNED(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__major__obj__alloc__pinned$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_MAJOR_OBJ_ALLOC_PINNED_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__major__obj__alloc__pinned$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_MAJOR_SWEPT(arg0, arg1) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__major__swept$v1$75696e747074725f74$75696e747074725f74(arg0, arg1); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_MAJOR_SWEPT_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__major__swept$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_NURSERY_OBJ_ALLOC(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__nursery__obj__alloc$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_NURSERY_OBJ_ALLOC_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__nursery__obj__alloc$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_NURSERY_SWEPT(arg0, arg1) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__nursery__swept$v1$75696e747074725f74$75696e747074725f74(arg0, arg1); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_NURSERY_SWEPT_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__nursery__swept$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_NURSERY_TLAB_ALLOC(arg0, arg1) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__nursery__tlab__alloc$v1$75696e747074725f74$75696e747074725f74(arg0, arg1); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_NURSERY_TLAB_ALLOC_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__nursery__tlab__alloc$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_OBJ_CEMENTED(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__obj__cemented$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_OBJ_CEMENTED_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__obj__cemented$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_OBJ_MOVED(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__obj__moved$v1$75696e747074725f74$75696e747074725f74$696e74$696e74$75696e747074725f74$63686172202a$63686172202a(arg0, arg1, arg2, arg3, arg4, arg5, arg6); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_OBJ_MOVED_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__obj__moved$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_OBJ_PINNED(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__obj__pinned$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a$696e74(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_OBJ_PINNED_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__obj__pinned$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_REQUESTED(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__requested$v1$696e74$75696e747074725f74$696e74(arg0, arg1, arg2); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_REQUESTED_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__requested$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_SWEEP_BEGIN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__sweep__begin$v1$696e74$696e74(arg0, arg1); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_SWEEP_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__sweep__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_SWEEP_END(arg0, arg1) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__sweep__end$v1$696e74$696e74(arg0, arg1); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_SWEEP_END_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__sweep__end$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_WEAK_UPDATE(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__weak__update$v1$75696e747074725f74$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a$696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_WEAK_UPDATE_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__weak__update$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_WORLD_RESTART_BEGIN(arg0) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__world__restart__begin$v1$696e74(arg0); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_WORLD_RESTART_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__world__restart__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_WORLD_RESTART_END(arg0) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__world__restart__end$v1$696e74(arg0); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_WORLD_RESTART_END_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__world__restart__end$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_WORLD_STOP_BEGIN() \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__world__stop__begin$v1(); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_WORLD_STOP_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__world__stop__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_GC_WORLD_STOP_END() \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$gc__world__stop__end$v1(); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_GC_WORLD_STOP_END_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$gc__world__stop__end$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_METHOD_COMPILE_BEGIN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$method__compile__begin$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_METHOD_COMPILE_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$method__compile__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_METHOD_COMPILE_END(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$method__compile__end$v1$63686172202a$63686172202a$63686172202a$696e74(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_METHOD_COMPILE_END_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$method__compile__end$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_VES_INIT_BEGIN() \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$ves__init__begin$v1(); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_VES_INIT_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$ves__init__begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	MONO_VES_INIT_END() \
do { \
	__asm__ volatile(".reference " MONO_TYPEDEFS); \
	__dtrace_probe$mono$ves__init__end$v1(); \
	__asm__ volatile(".reference " MONO_STABILITY); \
} while (0)
#define	MONO_VES_INIT_END_ENABLED() \
	({ int _r = __dtrace_isenabled$mono$ves__init__end$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$mono$gc__begin$v1$696e74(int);
extern int __dtrace_isenabled$mono$gc__begin$v1(void);
extern void __dtrace_probe$mono$gc__concurrent__start__begin$v1$696e74(int);
extern int __dtrace_isenabled$mono$gc__concurrent__start__begin$v1(void);
extern void __dtrace_probe$mono$gc__concurrent__update__finish__begin$v1$696e74$6c6f6e67206c6f6e67(int, long long);
extern int __dtrace_isenabled$mono$gc__concurrent__update__finish__begin$v1(void);
extern void __dtrace_probe$mono$gc__end$v1$696e74(int);
extern int __dtrace_isenabled$mono$gc__end$v1(void);
extern void __dtrace_probe$mono$gc__finalize__enqueue$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a$696e74$696e74(uintptr_t, uintptr_t, const char *, const char *, int, int);
extern int __dtrace_isenabled$mono$gc__finalize__enqueue$v1(void);
extern void __dtrace_probe$mono$gc__finalize__invoke$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(uintptr_t, uintptr_t, const char *, const char *);
extern int __dtrace_isenabled$mono$gc__finalize__invoke$v1(void);
extern void __dtrace_probe$mono$gc__global__remset__add$v1$75696e747074725f74$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(uintptr_t, uintptr_t, uintptr_t, const char *, const char *);
extern int __dtrace_isenabled$mono$gc__global__remset__add$v1(void);
extern void __dtrace_probe$mono$gc__major__obj__alloc__degraded$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(uintptr_t, uintptr_t, const char *, const char *);
extern int __dtrace_isenabled$mono$gc__major__obj__alloc__degraded$v1(void);
extern void __dtrace_probe$mono$gc__major__obj__alloc__large$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(uintptr_t, uintptr_t, const char *, const char *);
extern int __dtrace_isenabled$mono$gc__major__obj__alloc__large$v1(void);
extern void __dtrace_probe$mono$gc__major__obj__alloc__pinned$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(uintptr_t, uintptr_t, const char *, const char *);
extern int __dtrace_isenabled$mono$gc__major__obj__alloc__pinned$v1(void);
extern void __dtrace_probe$mono$gc__major__swept$v1$75696e747074725f74$75696e747074725f74(uintptr_t, uintptr_t);
extern int __dtrace_isenabled$mono$gc__major__swept$v1(void);
extern void __dtrace_probe$mono$gc__nursery__obj__alloc$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(uintptr_t, uintptr_t, const char *, const char *);
extern int __dtrace_isenabled$mono$gc__nursery__obj__alloc$v1(void);
extern void __dtrace_probe$mono$gc__nursery__swept$v1$75696e747074725f74$75696e747074725f74(uintptr_t, uintptr_t);
extern int __dtrace_isenabled$mono$gc__nursery__swept$v1(void);
extern void __dtrace_probe$mono$gc__nursery__tlab__alloc$v1$75696e747074725f74$75696e747074725f74(uintptr_t, uintptr_t);
extern int __dtrace_isenabled$mono$gc__nursery__tlab__alloc$v1(void);
extern void __dtrace_probe$mono$gc__obj__cemented$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a(uintptr_t, uintptr_t, const char *, const char *);
extern int __dtrace_isenabled$mono$gc__obj__cemented$v1(void);
extern void __dtrace_probe$mono$gc__obj__moved$v1$75696e747074725f74$75696e747074725f74$696e74$696e74$75696e747074725f74$63686172202a$63686172202a(uintptr_t, uintptr_t, int, int, uintptr_t, const char *, const char *);
extern int __dtrace_isenabled$mono$gc__obj__moved$v1(void);
extern void __dtrace_probe$mono$gc__obj__pinned$v1$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a$696e74(uintptr_t, uintptr_t, const char *, const char *, int);
extern int __dtrace_isenabled$mono$gc__obj__pinned$v1(void);
extern void __dtrace_probe$mono$gc__requested$v1$696e74$75696e747074725f74$696e74(int, uintptr_t, int);
extern int __dtrace_isenabled$mono$gc__requested$v1(void);
extern void __dtrace_probe$mono$gc__sweep__begin$v1$696e74$696e74(int, int);
extern int __dtrace_isenabled$mono$gc__sweep__begin$v1(void);
extern void __dtrace_probe$mono$gc__sweep__end$v1$696e74$696e74(int, int);
extern int __dtrace_isenabled$mono$gc__sweep__end$v1(void);
extern void __dtrace_probe$mono$gc__weak__update$v1$75696e747074725f74$75696e747074725f74$75696e747074725f74$63686172202a$63686172202a$696e74(uintptr_t, uintptr_t, uintptr_t, const char *, const char *, int);
extern int __dtrace_isenabled$mono$gc__weak__update$v1(void);
extern void __dtrace_probe$mono$gc__world__restart__begin$v1$696e74(int);
extern int __dtrace_isenabled$mono$gc__world__restart__begin$v1(void);
extern void __dtrace_probe$mono$gc__world__restart__end$v1$696e74(int);
extern int __dtrace_isenabled$mono$gc__world__restart__end$v1(void);
extern void __dtrace_probe$mono$gc__world__stop__begin$v1(void);
extern int __dtrace_isenabled$mono$gc__world__stop__begin$v1(void);
extern void __dtrace_probe$mono$gc__world__stop__end$v1(void);
extern int __dtrace_isenabled$mono$gc__world__stop__end$v1(void);
extern void __dtrace_probe$mono$method__compile__begin$v1$63686172202a$63686172202a$63686172202a(const char *, const char *, const char *);
extern int __dtrace_isenabled$mono$method__compile__begin$v1(void);
extern void __dtrace_probe$mono$method__compile__end$v1$63686172202a$63686172202a$63686172202a$696e74(const char *, const char *, const char *, int);
extern int __dtrace_isenabled$mono$method__compile__end$v1(void);
extern void __dtrace_probe$mono$ves__init__begin$v1(void);
extern int __dtrace_isenabled$mono$ves__init__begin$v1(void);
extern void __dtrace_probe$mono$ves__init__end$v1(void);
extern int __dtrace_isenabled$mono$ves__init__end$v1(void);

#else

#define	MONO_GC_BEGIN(arg0) \
do { \
	} while (0)
#define	MONO_GC_BEGIN_ENABLED() (0)
#define	MONO_GC_CONCURRENT_START_BEGIN(arg0) \
do { \
	} while (0)
#define	MONO_GC_CONCURRENT_START_BEGIN_ENABLED() (0)
#define	MONO_GC_CONCURRENT_UPDATE_FINISH_BEGIN(arg0, arg1) \
do { \
	} while (0)
#define	MONO_GC_CONCURRENT_UPDATE_FINISH_BEGIN_ENABLED() (0)
#define	MONO_GC_END(arg0) \
do { \
	} while (0)
#define	MONO_GC_END_ENABLED() (0)
#define	MONO_GC_FINALIZE_ENQUEUE(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	} while (0)
#define	MONO_GC_FINALIZE_ENQUEUE_ENABLED() (0)
#define	MONO_GC_FINALIZE_INVOKE(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	MONO_GC_FINALIZE_INVOKE_ENABLED() (0)
#define	MONO_GC_GLOBAL_REMSET_ADD(arg0, arg1, arg2, arg3, arg4) \
do { \
	} while (0)
#define	MONO_GC_GLOBAL_REMSET_ADD_ENABLED() (0)
#define	MONO_GC_MAJOR_OBJ_ALLOC_DEGRADED(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	MONO_GC_MAJOR_OBJ_ALLOC_DEGRADED_ENABLED() (0)
#define	MONO_GC_MAJOR_OBJ_ALLOC_LARGE(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	MONO_GC_MAJOR_OBJ_ALLOC_LARGE_ENABLED() (0)
#define	MONO_GC_MAJOR_OBJ_ALLOC_PINNED(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	MONO_GC_MAJOR_OBJ_ALLOC_PINNED_ENABLED() (0)
#define	MONO_GC_MAJOR_SWEPT(arg0, arg1) \
do { \
	} while (0)
#define	MONO_GC_MAJOR_SWEPT_ENABLED() (0)
#define	MONO_GC_NURSERY_OBJ_ALLOC(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	MONO_GC_NURSERY_OBJ_ALLOC_ENABLED() (0)
#define	MONO_GC_NURSERY_SWEPT(arg0, arg1) \
do { \
	} while (0)
#define	MONO_GC_NURSERY_SWEPT_ENABLED() (0)
#define	MONO_GC_NURSERY_TLAB_ALLOC(arg0, arg1) \
do { \
	} while (0)
#define	MONO_GC_NURSERY_TLAB_ALLOC_ENABLED() (0)
#define	MONO_GC_OBJ_CEMENTED(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	MONO_GC_OBJ_CEMENTED_ENABLED() (0)
#define	MONO_GC_OBJ_MOVED(arg0, arg1, arg2, arg3, arg4, arg5, arg6) \
do { \
	} while (0)
#define	MONO_GC_OBJ_MOVED_ENABLED() (0)
#define	MONO_GC_OBJ_PINNED(arg0, arg1, arg2, arg3, arg4) \
do { \
	} while (0)
#define	MONO_GC_OBJ_PINNED_ENABLED() (0)
#define	MONO_GC_REQUESTED(arg0, arg1, arg2) \
do { \
	} while (0)
#define	MONO_GC_REQUESTED_ENABLED() (0)
#define	MONO_GC_SWEEP_BEGIN(arg0, arg1) \
do { \
	} while (0)
#define	MONO_GC_SWEEP_BEGIN_ENABLED() (0)
#define	MONO_GC_SWEEP_END(arg0, arg1) \
do { \
	} while (0)
#define	MONO_GC_SWEEP_END_ENABLED() (0)
#define	MONO_GC_WEAK_UPDATE(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	} while (0)
#define	MONO_GC_WEAK_UPDATE_ENABLED() (0)
#define	MONO_GC_WORLD_RESTART_BEGIN(arg0) \
do { \
	} while (0)
#define	MONO_GC_WORLD_RESTART_BEGIN_ENABLED() (0)
#define	MONO_GC_WORLD_RESTART_END(arg0) \
do { \
	} while (0)
#define	MONO_GC_WORLD_RESTART_END_ENABLED() (0)
#define	MONO_GC_WORLD_STOP_BEGIN() \
do { \
	} while (0)
#define	MONO_GC_WORLD_STOP_BEGIN_ENABLED() (0)
#define	MONO_GC_WORLD_STOP_END() \
do { \
	} while (0)
#define	MONO_GC_WORLD_STOP_END_ENABLED() (0)
#define	MONO_METHOD_COMPILE_BEGIN(arg0, arg1, arg2) \
do { \
	} while (0)
#define	MONO_METHOD_COMPILE_BEGIN_ENABLED() (0)
#define	MONO_METHOD_COMPILE_END(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	MONO_METHOD_COMPILE_END_ENABLED() (0)
#define	MONO_VES_INIT_BEGIN() \
do { \
	} while (0)
#define	MONO_VES_INIT_BEGIN_ENABLED() (0)
#define	MONO_VES_INIT_END() \
do { \
	} while (0)
#define	MONO_VES_INIT_END_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _MONO_DTRACE_H */
