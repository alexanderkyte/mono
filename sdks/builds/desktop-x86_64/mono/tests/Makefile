# Makefile.in generated by automake 1.15.1 from Makefile.am.
# mono/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



VPATH = /Users/akyte/mono/mono/tests
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/mono
pkgincludedir = $(includedir)/mono
pkglibdir = $(libdir)/mono
pkglibexecdir = $(libexecdir)/mono
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin17.2.0
host_triplet = x86_64-apple-darwin17.2.0
target_triplet = x86_64-apple-darwin17.2.0
#am__append_1 = --runtime-args "$(TEST_AOT_RUN_FLAGS)"
#am__append_2 = --runtime-args "$(TEST_AOT_RUN_FLAGS)"
#am__append_3 = --config tests-config --runtime $(if $(MONO_EXECUTABLE),$(shell cygpath -w -a $(MONO_EXECUTABLE) | sed 's/\\/\\\\/g'),mono)
am__append_4 = --config tests-config --runtime $(if $(MONO_EXECUTABLE),$(MONO_EXECUTABLE),mono)
am__append_5 = async-exc-compilation.cs finally_guard.cs finally_block_ending_in_dead_bb.cs
#am__append_6 = async-exc-compilation.cs finally_guard.cs finally_block_ending_in_dead_bb.cs
#am__append_7 = bug-58782-plain-throw.exe bug-58782-capture-and-throw.exe

# #651684
am__append_8 = finally_guard.exe
#am__append_9 = w32message.exe
##am__append_10 = async-exc-compilation.exe finally_guard.exe finally_block_ending_in_dead_bb.exe \
##	bug-18026.exe monitor.exe threadpool-exceptions5.exe process-unref-race.exe w32message.exe \
##	unhandled-exception-1.exe unhandled-exception-2.exe unhandled-exception-3.exe unhandled-exception-4.exe \
##	unhandled-exception-5.exe unhandled-exception-6.exe unhandled-exception-7.exe unhandled-exception-8.exe


# bug #71274
#am__append_11 = finalizer-abort.exe finalizer-exception.exe finalizer-exit.exe

# FIXME: These tests hang/fail for unknown reasons
#am__append_12 = monitor.exe threadpool-exceptions5.exe appdomain-unload.exe \
#	pinvoke2.exe pinvoke3.exe pinvoke11.exe threadpool-exceptions7.exe winx64structs.exe bug-10127.exe pinvoke_ppcc.exe \
#	pinvoke_ppcs.exe pinvoke_ppci.exe pinvoke_ppcf.exe pinvoke_ppcd.exe abort-cctor.exe load-exceptions.exe \
#	sgen-domain-unload-2.exe sgen-weakref-stress.exe sgen-cementing-stress.exe sgen-new-threads-dont-join-stw.exe \
#	sgen-new-threads-dont-join-stw-2.exe sgen-new-threads-collect.exe sgen-bridge.exe

#am__append_13 = filter-stack.exe

# monitor.exe is racy
#am__append_14 = filter-stack.exe monitor.exe
#PLATFORM_DISABLED_TESTS=dynamic-method-resurrection.exe exception17.exe
#am__append_15 = dynamic-method-resurrection.exe \
#	sgen-toggleref.exe sgen-bridge.exe \
#	sgen-bridge-major-fragmentation.exe \
#	sgen-bridge-xref.exe

# Tests which rely on TypeLoadExceptions
# In full-aot mode, these cause the relevant methods to be not AOTed.

# Tests which rely on remoting

# Tests which use unsupported pinvoke+full aot
# functionality

# Tests which load assemblies which are not
# in the testing_aot_full profile

# Test which needs remoting support

# Tests which needs AppDomain support

# Tests which needs System.Reflection.Emit support

# Test which needs System.Web support

# Tests which needs named Mutex support

# ThreadAbortException doesn't have necessary field for this test

# can't AOT the TestingReferenceAssembly.dll which is a dependency
# of reference-loader.exe because it contains the [ReferenceAssemblyAttribute]
# and the runtime errors out with "File does not contain a valid CIL image."

# constraints-load.il: 
# Failed to load method 0x6000007 from '..../mono/tests/constraints-load.exe' due to 
# Could not resolve type with token 01000002 assembly:mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 type:System.BrokenIComparable`1 member:<none>.
#am__append_16 = typeload-unaligned.exe \
#	field-access.exe \
#	invalid_generic_instantiation.exe \
#	bug-481403.exe array_ldelema.exe \
#	array_load_exception.exe bug445361.exe \
#	generic-type-load-exception.2.exe \
#	invalid-token.exe call_missing_method.exe \
#	call_missing_class.exe \
#	ldfld_missing_field.exe \
#	ldfld_missing_class.exe \
#	vt-sync-method.exe \
#	resolve_method_bug.2.exe \
#	resolve_field_bug.2.exe \
#	resolve_type_bug.2.exe bug-81691.exe \
#	bug-327438.2.exe context-static.exe \
#	bug-415577.exe generic-marshalbyref.2.exe \
#	unhandled-exception-7.exe marshal.exe \
#	marshal2.exe marshal6.exe marshal7.exe \
#	marshal8.exe pinvoke-2.2.exe pinvoke3.exe \
#	thunks.exe bug-58782-plain-throw.exe \
#	bug-58782-capture-and-throw.exe \
#	assembly-load-remap.exe remoting4.exe \
#	remoting1.exe remoting2.exe remoting3.exe \
#	remoting5.exe appdomain.exe \
#	appdomain-client.exe appdomain-unload.exe \
#	appdomain-async-invoke.exe \
#	appdomain-thread-abort.exe appdomain1.exe \
#	appdomain2.exe appdomain-exit.exe \
#	appdomain-unload-asmload.exe \
#	appdomain-unload-callback.exe \
#	appdomain-unload-doesnot-raise-pending-events.exe \
#	unload-appdomain-on-shutdown.exe \
#	appdomain-marshalbyref-assemblyload.exe \
#	assemblyresolve_event2.2.exe \
#	assemblyresolve_event6.exe bug-544446.exe \
#	bug-36848.exe generic-marshalbyref.2.exe \
#	stackframes-async.2.exe \
#	transparentproxy.exe bug-48015.exe \
#	delegate9.exe marshal-valuetypes.exe \
#	xdomain-threads.exe monitor.exe \
#	generic-xdomain.2.exe \
#	threadpool-exceptions7.exe \
#	cross-domain.exe generic-unloading.2.exe \
#	appdomain-threadpool-unload.exe \
#	bug-47295.exe loader.exe pinvoke2.exe \
#	generic-type-builder.2.exe \
#	dynamic-generic-size.exe cominterop.exe \
#	dynamic-method-access.2.exe \
#	dynamic-method-finalize.2.exe \
#	dynamic-method-stack-traces.exe \
#	generic_type_definition.2.exe \
#	bug-333798-tb.2.exe bug-335131.2.exe \
#	bug-322722_patch_bx.2.exe \
#	bug-322722_dyn_method_throw.2.exe \
#	bug-389886-2.exe bug-349190.2.exe \
#	bug-389886-sre-generic-interface-instances.exe \
#	bug-462592.exe bug-575941.exe \
#	bug-389886-3.exe constant-division.exe \
#	dynamic-method-resurrection.exe \
#	assembly_append_ordering.exe \
#	assemblyresolve_event5.exe bug-80307.exe \
#	namedmutex-destroy-race.exe thread6.exe \
#	reference-loader.exe constraints-load.exe \
#	bug-515884.exe generic-type-builder.2.exe \
#	sgen-domain-unload.exe \
#	sgen-domain-unload-2.exe \
#	appdomain-loader.exe \
#	assemblyresolve_event3.exe \
#	appdomain-serialize-exception.exe
#am__append_17 = \
#	bug-80307.exe \
#	namedmutex-destroy-race.exe

subdir = mono/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = tests-config
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libtest_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_libtest_la_OBJECTS = libtest_la-libtest.lo
libtest_la_OBJECTS = $(am_libtest_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libtest_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libtest_la_CFLAGS) \
	$(CFLAGS) $(libtest_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libtest_la_SOURCES)
DIST_SOURCES = $(libtest_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/tests-config.in \
	$(top_srcdir)/depcomp $(top_srcdir)/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /Users/akyte/mono/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AOT_BUILD_FLAGS = 
AOT_RUN_FLAGS = 
API_VER = 2.0
AR = ar
AS = as
AUTOCONF = ${SHELL} /Users/akyte/mono/missing autoconf
AUTOHEADER = ${SHELL} /Users/akyte/mono/missing autoheader
AUTOMAKE = ${SHELL} /Users/akyte/mono/missing automake-1.15
AWK = awk
BOEHM_DEFINES = 
BREAKPOINT = G_STMT_START { __asm__ ("int $03"); } G_STMT_END
BTLS_ARCH = 
BTLS_CFLAGS =  
BTLS_CMAKE_ARGS =  -DBTLS_ARCH="x86_64"
BTLS_PLATFORM = x86_64
BTLS_ROOT = /Users/akyte/mono/external/boringssl
BUILD_EXEEXT = 
CC = cc
CCAS = cc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = cc
CFLAGS =  -std=gnu99 -fno-strict-aliasing -fwrapv -DMONO_DLL_EXPORT -g -Wall -Wunused -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes  -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-cast-qual -Wwrite-strings -Wno-switch -Wno-switch-enum -Wno-unused-value -Wno-attributes -Wno-format-zero-length -Qunused-arguments -Wno-unused-function -Wno-tautological-compare -Wno-parentheses-equality -Wno-self-assign -Wno-return-stack-address -Wno-constant-logical-operand -Wno-zero-length-array -Werror-implicit-function-declaration
CFLAGS_FOR_BUILD = 
CMAKE = /usr/local/bin/cmake
CPP = cc -E
CPPFLAGS =  -D_THREAD_SAFE -DGC_MACOSX_THREADS -DUSE_MMAP -DUSE_MUNMAP -g -Wall -Wunused -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes  -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-cast-qual -Wwrite-strings -Wno-switch -Wno-switch-enum -Wno-unused-value -Wno-attributes -Wno-format-zero-length -Qunused-arguments -Wno-unused-function -Wno-tautological-compare -Wno-parentheses-equality -Wno-self-assign -Wno-return-stack-address -Wno-constant-logical-operand -Wno-zero-length-array 
CSC = /Users/akyte/mono/external/roslyn-binaries/Microsoft.Net.Compilers/Microsoft.Net.Compilers.2.6.0/tools/csc.exe
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =   -fvisibility=hidden
CYGPATH_W = echo
DEFAULT_PROFILE = net_4_x
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOLT_BASH = /bin/bash
DSYMUTIL = dsymutil
DTRACE = /usr/sbin/dtrace
DTRACEFLAGS = -64
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GDKX11 = libgdk-x11-2.0.dylib
GETTEXT_MACRO_VERSION = 0.18
GINT_TO_POINTER = ((gpointer)(glong) (v))
GLIB_CFLAGS = -I$(top_srcdir)/mono/eglib -I$(top_builddir)/mono/eglib
GLIB_LIBS = $(top_builddir)/mono/eglib/libeglib.la -lm
GMSGFMT = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgfmt
GMSGFMT_015 = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgfmt
GNUC_NORETURN = __attribute__((__noreturn__))
GNUC_PRETTY = 
GNUC_UNUSED = __attribute__((__unused__))
GPOINTER_TO_INT = ((gint)(long) (ptr))
GPOINTER_TO_UINT = ((guint)(long) (ptr))
GREP = /usr/bin/grep
GSIZE = long
GSIZE_FORMAT = "lu"
GTKX11 = libgtk-x11-2.0.dylib
GUINT_TO_POINTER = ((gpointer)(gulong) (v))
G_GINT32_FORMAT = 
G_GINT64_FORMAT = 
G_GUINT32_FORMAT = 
G_GUINT64_FORMAT = 
G_HAVE_ISO_VARARGS = 0
HAVE_ALLOCA_H = 1
HAVE_MSGFMT = 
HOST_CC = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTL = libintl.dylib
INVARIANT_AOT_OPTIONS = nimt-trampolines=2000,ntrampolines=9000,nrgctx-fetch-trampolines=256,ngsharedvt-trampolines=4000
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBC = libc.dylib
LIBGC_CPPFLAGS = 
LIBGC_LIBS = 
LIBGC_STATIC_LIBS = 
LIBICONV = -liconv
LIBMONO_LA = libmonosgen-2.0.la
LIBOBJS = 
LIBS = -liconv   -lpthread
LIBTOOL = $(top_builddir)/doltlibtool
LIPO = lipo
LLVM_CFLAGS = 
LLVM_CONFIG = 
LLVM_CXXFLAGS = 
LLVM_LDFLAGS = 
LLVM_LIBS = 
LN_S = ln -s
LTCOMPILE = $(top_builddir)/doltcompile $(COMPILE)
LTCXXCOMPILE = $(top_builddir)/doltcompile $(CXXCOMPILE)
LTLIBICONV = -liconv
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /Users/akyte/mono/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /Users/akyte/mono/install-sh -c -d
MONO_CORLIB_VERSION = 1050900001
MONO_DL_NEED_USCORE = 0
MSGFMT = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgfmt
MSGFMT_015 = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgfmt
MSGMERGE = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgmerge
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
ORDER = G_LITTLE_ENDIAN
OS = UNIX
OTOOL = otool
OTOOL64 = :
PACKAGE = mono
PACKAGE_BUGREPORT = http://bugzilla.xamarin.com/enter_bug.cgi?classification=Mono
PACKAGE_NAME = mono
PACKAGE_STRING = mono 5.9.0
PACKAGE_TARNAME = mono
PACKAGE_URL = 
PACKAGE_VERSION = 5.9.0
PATHSEP = /
PATH_SEPARATOR = :
PIDTYPE = int
PKG_CONFIG = /Library/Frameworks/Mono.framework/Versions/Current/bin//pkg-config
PLATFORM_AOT_SUFFIX = .dylib
RANLIB = ranlib -no_warning_for_no_symbols
SEARCHSEP = :
SED = /usr/bin/sed
SET_MAKE = 
SGEN_DEFINES = -DHAVE_SGEN_GC
SHARED_CFLAGS = -fvisibility=hidden
SHELL = /bin/sh
SIZEOF_VOID_P = 8
SQLITE = libsqlite.0.dylib
SQLITE3 = libsqlite3.0.dylib
STRIP = strip
TEST_PROFILE = default
USE_NLS = no
VERSION = 5.9.0
VTUNE_CFLAGS = 
VTUNE_LIBS = 
WERROR_CFLAGS = 
X11 = libX11.dylib
XATTR_LIB = 
XGETTEXT = /Library/Frameworks/Mono.framework/Versions/Current/bin//xgettext
XGETTEXT_015 = /Library/Frameworks/Mono.framework/Versions/Current/bin//xgettext
XGETTEXT_EXTRA_OPTIONS = 
XINERAMA = libXinerama.so.1
XMKMF = 
abs_builddir = /Users/akyte/mono/sdks/builds/desktop-x86_64/mono/tests
abs_srcdir = /Users/akyte/mono/mono/tests
abs_top_builddir = /Users/akyte/mono/sdks/builds/desktop-x86_64
abs_top_srcdir = /Users/akyte/mono
ac_ct_AR = ar
ac_ct_CC = 
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
arch_target = amd64
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin17.2.0
build_alias = 
build_cpu = x86_64
build_os = darwin17.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
docs_dir = 
dvidir = ${docdir}
exec_prefix = ${prefix}
export_ldflags = 
extra_runtime_ldflags = 
host = x86_64-apple-darwin17.2.0
host_alias = x86_64-apple-darwin17.2.0
host_cpu = x86_64
host_os = darwin17.2.0
host_vendor = apple
htmldir = ${docdir}
ikvm_native_dir = 
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/akyte/mono/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libgc_dir = 
libgdiplus_install_loc = libgdiplus.dylib
libgdiplus_loc = 
libmono_cflags = -D_THREAD_SAFE
libmono_ldflags =  -liconv   -lpthread
libsuffix = .dylib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mcs_topdir = /Users/akyte/mono/mcs
mcs_topdir_from_srcdir = $(top_builddir)/mcs
mkdir_p = $(MKDIR_P)
mono_build_root = /Users/akyte/mono/sdks/builds/desktop-x86_64
mono_cfg_dir = /Users/akyte/mono/sdks/builds/desktop-x86_64/runtime/etc
mono_runtime = mono/mini/mono
ninja = no
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/akyte/mono/sdks/out/desktop-x86_64
program_transform_name = s,x,x,
psdir = ${docdir}
reloc_libdir = lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /Users/akyte/mono/mono/tests
subdirs = 
sysconfdir = ${prefix}/etc
target = x86_64-apple-darwin17.2.0
target_alias = 
target_cpu = x86_64
target_os = darwin17.2.0
target_vendor = apple
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = /Users/akyte/mono
SUBDIRS = gc-descriptors . testing_gac
JITTEST_PROG = $(if $(VALGRIND), valgrind $(VALGRIND_ARGS),) $(if $(SGEN),$(top_builddir)/mono/mini/mono-sgen,$(top_builddir)/mono/mini/mono)
JITTEST_PROG_RUN = MONO_CFG_DIR=$(mono_build_root)/runtime/etc $(LIBTOOL) --mode=execute $(JITTEST_PROG)
RUNTIME_ARGS = --config tests-config --optimize=all --debug
CLASS = $(mcs_topdir)/class/lib/$(DEFAULT_PROFILE)
with_mono_path = MONO_PATH=$(CLASS)
RUNTIME = $(with_mono_path) $(top_builddir)/runtime/mono-wrapper
TOOLS_RUNTIME = MONO_PATH=$(mcs_topdir)/class/lib/build $(top_builddir)/runtime/mono-wrapper --aot-path=$(mcs_topdir)/class/lib/build
MKBUNDLE = \
	PKG_CONFIG_PATH=$(top_builddir):$(PKG_CONFIG_PATH) \
	$(RUNTIME) $(CLASS)/mkbundle.exe

#PROFILE_MCS_FLAGS = -d:MOBILE,MOBILE_LEGACY,FULL_AOT_DESKTOP 
#PROFILE_MCS_FLAGS = -d:MOBILE,MOBILE_LEGACY 
MCS_NO_UNSAFE = $(TOOLS_RUNTIME) $(CSC) -debug:portable \
	-noconfig -nologo \
	-nowarn:0162 -nowarn:0168 -nowarn:0219 -nowarn:0414 -nowarn:0618 \
	-nowarn:0169 -nowarn:1690 -nowarn:0649 -nowarn:0612 -nowarn:3021 \
	-nowarn:0197 $(PROFILE_MCS_FLAGS)

MCS_NO_LIB = $(MCS_NO_UNSAFE) -unsafe
MCS = $(MCS_NO_LIB)
ILASM = $(TOOLS_RUNTIME) $(mcs_topdir)/class/lib/build/ilasm.exe
TEST_RUNNER = ./test-runner.exe --runtime \
	$(top_builddir)/runtime/mono-wrapper --mono-path "$(CLASS)" \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(if $(V), --verbose,)
TESTS_BENCH_SRC = fib.cs random.cs nested-loops.cs ackermann.cs tight-loop.cs sieve.cs
TESTS_STRESS_SRC = \
	abort-stress-1.cs	\
	abort-stress-2.cs	\
	abort-stress-3.cs	\
	domain-stress.cs	\
	gchandle-stress.cs	\
	monitor-stress.cs	\
	thread-stress.cs	\
	gc-stress.cs		\
	gc-copy-stress.cs	\
	gc-graystack-stress.cs		\
	exit-stress.cs		\
	process-stress.cs	\
	assembly-load-stress.cs


# Disabled until ?mcs is fixed
#	bug-331958.cs
TESTS_CS_SRC = generic-unloading-sub.2.cs create-instance.cs \
	bug-2907.cs array-init.cs arraylist.cs assembly-load-remap.cs \
	assemblyresolve_event.cs assemblyresolve_event3.cs \
	assemblyresolve_event4.cs assemblyresolve_event5.cs \
	assemblyresolve_event6.cs checked.cs char-isnumber.cs \
	field-layout.cs pack-layout.cs pack-bug.cs hash-table.cs \
	test-ops.cs obj.cs test-dup-mp.cs string.cs stringbuilder.cs \
	switch.cs outparm.cs delegate.cs bitconverter.cs exception.cs \
	exception2.cs exception3.cs exception4.cs exception5.cs \
	exception6.cs exception7.cs exception8.cs exception10.cs \
	exception11.cs exception12.cs exception13.cs exception14.cs \
	exception15.cs exception16.cs exception17.cs exception18.cs \
	typeload-unaligned.cs struct.cs valuetype-gettype.cs \
	typeof-ptr.cs static-constructor.cs pinvoke.cs pinvoke-utf8.cs \
	pinvoke3.cs pinvoke11.cs pinvoke13.cs pinvoke17.cs invoke.cs \
	invoke2.cs runtime-invoke.cs invoke-string-ctors.cs reinit.cs \
	box.cs array.cs enum.cs enum2.cs enum-intrins.cs property.cs \
	enumcast.cs assignable-tests.cs array-cast.cs \
	array-subtype-attr.cs cattr-compile.cs cattr-field.cs \
	cattr-object.cs custom-attr.cs double-cast.cs \
	newobj-valuetype.cs arraylist-clone.cs setenv.cs vtype.cs \
	isvaluetype.cs iface6.cs iface7.cs ipaddress.cs array-vt.cs \
	interface1.cs reflection-enum.cs reflection-prop.cs \
	reflection4.cs reflection5.cs reflection-const-field.cs \
	many-locals.cs string-compare.cs test-prime.cs test-tls.cs \
	params.cs reflection.cs interface.cs iface.cs iface2.cs \
	iface3.cs iface4.cs iface-large.cs virtual-method.cs \
	intptrcast.cs indexer.cs stream.cs console.cs shift.cs \
	jit-int.cs jit-uint.cs jit-long.cs long.cs jit-ulong.cs \
	jit-float.cs pop.cs time.cs pointer.cs hashcode.cs \
	delegate1.cs delegate2.cs delegate3.cs delegate5.cs \
	delegate6.cs delegate7.cs delegate8.cs delegate10.cs \
	delegate11.cs delegate12.cs delegate13.cs delegate14.cs \
	delegate15.cs largeexp.cs largeexp2.cs marshalbyref1.cs \
	static-ctor.cs inctest.cs bound.cs array-invoke.cs test-arr.cs \
	decimal.cs decimal-array.cs marshal.cs marshal1.cs marshal2.cs \
	marshal3.cs marshal5.cs marshal6.cs marshal7.cs marshal8.cs \
	marshal9.cs marshalbool.cs test-byval-in-struct.cs thread.cs \
	thread5.cs thread-static.cs thread-static-init.cs \
	context-static.cs float-pop.cs interfacecast.cs array3.cs \
	classinit.cs classinit2.cs classinit3.cs synchronized.cs \
	async_read.cs threadpool.cs threadpool1.cs \
	threadpool-exceptions1.cs threadpool-exceptions2.cs \
	threadpool-exceptions3.cs threadpool-exceptions4.cs \
	threadpool-exceptions5.cs threadpool-exceptions6.cs \
	base-definition.cs bug-27420.cs bug-46781.cs bug-42136.cs \
	bug-59286.cs bug-70561.cs bug-78311.cs bug-78653.cs \
	bug-78656.cs bug-77127.cs bug-323114.cs bug-Xamarin-5278.cs \
	interlocked.cs delegate-async-exit.cs \
	delegate-delegate-exit.cs delegate-exit.cs \
	delegate-disposed-hashcode.cs finalizer-abort.cs \
	finalizer-exception.cs finalizer-exit.cs finalizer-thread.cs \
	main-exit.cs main-returns-abort-resetabort.cs \
	main-returns-background-abort-resetabort.cs \
	main-returns-background-resetabort.cs \
	main-returns-background.cs main-returns-background-change.cs \
	main-returns.cs subthread-exit.cs desweak.cs exists.cs \
	handleref.cs dbnull-missing.cs test-type-ctor.cs \
	soft-float-tests.cs thread-exit.cs finalize-parent.cs \
	interlocked-2.2.cs pinvoke-2.2.cs bug-78431.2.cs \
	bug-79684.2.cs catch-generics.2.cs event-get.2.cs \
	safehandle.2.cs module-cctor-loader.2.cs \
	generics-invoke-byref.2.cs generic-signature-compare.2.cs \
	generics-sharing.2.cs shared-generic-methods.2.cs \
	shared-generic-synchronized.2.cs generic-inlining.2.cs \
	generic-initobj.2.cs generic-delegate.2.cs generic-sizeof.2.cs \
	generic-virtual.2.cs generic-interface-methods.2.cs \
	generic-array-type.2.cs generic-method-patching.2.cs \
	generic-static-methods.2.cs generic-null-call.2.cs \
	generic-special.2.cs generic-special2.2.cs \
	generic-exceptions.2.cs generic-virtual2.2.cs \
	generic-valuetype-interface.2.cs \
	generic-getgenericarguments.2.cs generic-synchronized.2.cs \
	generic-delegate-ctor.2.cs generic-array-iface-set.2.cs \
	generic-typedef.2.cs bug-431413.2.cs bug-459285.2.cs \
	generic-virtual-invoke.2.cs bug-461198.2.cs \
	generic-sealed-virtual.2.cs generic-system-arrays.2.cs \
	generic-stack-traces.2.cs generic-stack-traces2.2.cs \
	bug-472600.2.cs recursive-generics.2.cs bug-473482.2.cs \
	bug-473999.2.cs bug-479763.2.cs bug-616463.cs bug-80392.2.cs \
	bug-82194.2.cs anonarray.2.cs ienumerator-interfaces.2.cs \
	array-enumerator-ifaces.2.cs \
	generic_type_definition_encoding.2.cs bug-333798.2.cs \
	bug-348522.2.cs bug-340662_bug.cs bug-325283.2.cs thunks.cs \
	winx64structs.cs nullable_boxing.2.cs valuetype-equals.cs \
	custom-modifiers.2.cs bug-382986.cs test-inline-call-stack.cs \
	bug-324535.cs modules.cs bug-81673.cs bug-81691.cs \
	bug-415577.cs filter-stack.cs vararg.cs vararg2.cs \
	bug-461867.cs bug-461941.cs bug-461261.cs bug-400716.cs \
	bug-459094.cs bug-467456.cs bug-508538.cs bug-472692.2.cs \
	gchandles.cs interlocked-3.cs interlocked-4.2.cs w32message.cs \
	gc-altstack.cs large-gc-bitmap.cs bug-561239.cs bug-562150.cs \
	bug-599469.cs monitor-resurrection.cs monitor-wait-abort.cs \
	monitor-abort.cs bug-666008.cs bug-685908.cs \
	sgen-long-vtype.cs delegate-invoke.cs bug-696593.cs \
	bug-705140.cs bug-1147.cs mono-path.cs bug-bxc-795.cs \
	bug-3903.cs async-with-cb-throws.cs bug-6148.cs bug-10127.cs \
	bug-18026.cs allow-synchronous-major.cs \
	block_guard_restore_aligment_on_exit.cs \
	thread_static_gc_layout.cs sleep.cs bug-27147.cs bug-30085.cs \
	bug-17537.cs pinvoke_ppcc.cs pinvoke_ppcs.cs pinvoke_ppci.cs \
	pinvoke_ppcf.cs pinvoke_ppcd.cs bug-29585.cs priority.cs \
	abort-cctor.cs thread-native-exit.cs reference-loader.cs \
	thread-suspend-suspended.cs thread-suspend-selfsuspended.cs \
	remoting4.cs remoting1.cs remoting2.cs remoting3.cs \
	remoting5.cs appdomain.cs appdomain-client.cs \
	appdomain-unload.cs appdomain-async-invoke.cs \
	appdomain-thread-abort.cs appdomain1.cs appdomain2.cs \
	appdomain-exit.cs appdomain-serialize-exception.cs \
	assemblyresolve_event2.2.cs appdomain-unload-callback.cs \
	appdomain-unload-doesnot-raise-pending-events.cs \
	appdomain-unload-asmload.cs appdomain-unload-exception.cs \
	unload-appdomain-on-shutdown.cs \
	appdomain-marshalbyref-assemblyload.cs bug-47295.cs loader.cs \
	pinvoke2.cs generic-type-builder.2.cs dynamic-generic-size.cs \
	cominterop.cs dynamic-method-access.2.cs \
	dynamic-method-finalize.2.cs dynamic-method-stack-traces.cs \
	generic_type_definition.2.cs bug-333798-tb.2.cs \
	bug-335131.2.cs bug-322722_patch_bx.2.cs \
	bug-322722_dyn_method_throw.2.cs bug-389886-2.cs \
	bug-349190.2.cs bug-389886-sre-generic-interface-instances.cs \
	bug-462592.cs bug-575941.cs bug-389886-3.cs \
	constant-division.cs dynamic-method-resurrection.cs \
	bug-80307.cs assembly_append_ordering.cs bug-544446.cs \
	bug-36848.cs generic-marshalbyref.2.cs stackframes-async.2.cs \
	transparentproxy.cs bug-48015.cs delegate9.cs \
	marshal-valuetypes.cs xdomain-threads.cs monitor.cs \
	generic-xdomain.2.cs threadpool-exceptions7.cs cross-domain.cs \
	generic-unloading.2.cs namedmutex-destroy-race.cs thread6.cs \
	appdomain-threadpool-unload.cs process-unref-race.cs \
	bug-46661.cs w32message.cs runtime-invoke.gen.cs \
	imt_big_iface_test.cs bug-58782-plain-throw.cs \
	bug-58782-capture-and-throw.cs recursive-struct-arrays.cs \
	bug-59281.cs init_array_with_lazy_type.cs $(am__append_5) \
	$(am__append_6)
TESTS_IL_SRC = \
	field-access.il		\
	method-access.il	\
	ldftn-access.il		\
	cpblkTest.il		\
	vbinterface.il		\
	calliTest.il		\
	calliGenericTest.il		\
	ckfiniteTest.il		\
	fault-handler.il		\
	locallocTest.il		\
	initblkTest.il		\
	qt-instance.il		\
	vararg.il		\
	bug-29859.il		\
	bug-78549.il		\
	static-fields-nonconst.il	\
	reload-at-bb-end.il	\
	test-enum-indstoreil.il	\
	filter-bug.il		\
	even-odd.il		\
	bug-82022.il	\
	vt-sync-method.il	\
	enum_types.il	\
	invalid-token.il	\
	call_missing_method.il	\
	call_missing_class.il	\
	ldfld_missing_field.il	\
	ldfld_missing_class.il	\
	find-method.2.il	\
	bug-79215.2.il	\
	bug-79956.2.il	\
	bug-327438.2.il \
	bug-387274.2.il	\
	bug-426309.2.il	\
	ldtoken_with_byref_typespec.2.il \
	resolve_method_bug.2.il \
	resolve_field_bug.2.il \
	resolve_type_bug.2.il	\
	generics-sharing-other-exc.2.il	\
	generic-ldobj.2.il	\
	generic-mkrefany.2.il	\
	generic-refanyval.2.il	\
	generic-ldtoken.2.il	\
	generic-ldtoken-method.2.il	\
	generic-ldtoken-field.2.il	\
	generic-tailcall.2.il	\
	generic-tailcall2.2.il	\
	generic-array-exc.2.il	\
	generic-valuetype-newobj2.2.il	\
	generic-valuetype-newobj.2.il	\
	generic-constrained.2.il	\
	generic-type-load-exception.2.il	\
	bug-81466.il	\
	bug457574.il	\
	bug445361.il	\
	bug-463303.il	\
	bug469742.2.il	\
	bug-528055.il	\
	array_load_exception.il \
	bug-481403.il	\
	interface-with-static-method.il	\
	bug-633291.il	\
	delegate-with-null-target.il	\
	bug-318677.il	\
	gsharing-valuetype-layout.il	\
	invalid_generic_instantiation.il \
	bug-45841-fpstack-exceptions.il \
	instance_tailrec.il

TESTS_GSHARED_SRC = \
	generics-sharing.2.cs	\
	shared-generic-methods.2.cs	\
	shared-generic-synchronized.2.cs	\
	generic-initobj.2.cs		\
	generics-sharing-other-exc.2.cs	\
	generic-box.2.cs		\
	generic-unbox.2.cs	\
	generic-delegate.2.cs	\
	generic-sizeof.2.cs	\
	generic-ldobj.2.cs	\
	generic-mkrefany.2.cs			\
	generic-refanyval.2.cs	\
	generic-ldtoken.2.cs			\
	generic-ldtoken-method.2.cs	\
	generic-ldtoken-field.2.cs	\
	generic-virtual.2.cs	\
	generic-tailcall.2.cs			\
	generic-interface-methods.2.cs	\
	generic-array-type.2.cs	\
	generic-method-patching.2.cs	\
	generic-static-methods.2.cs	\
	generic-null-call.2.cs	\
	generic-tailcall2.2.cs			\
	generic-array-exc.2.cs	\
	generic-special.2.cs			\
	generic-special2.2.cs	\
	generic-exceptions.2.cs	\
	generic-delegate2.2.cs		\
	generic-virtual2.2.cs	\
	generic-valuetype-interface.2.cs	\
	generic-valuetype-newobj.2.cs	\
	generic-valuetype-newobj2.2.cs	\
	generic-getgenericarguments.2.cs	\
	generic-synchronized.2.cs	\
	generic-delegate-ctor.2.cs		\
	generic-constrained.2.cs	\
	bug-431413.2.cs			\
	generic-virtual-invoke.2.cs	\
	generic-typedef.2.cs		\
	generic-marshalbyref.2.cs	\
	bug-459285.2.cs	\
	bug-461198.2.cs	\
	generic-sealed-virtual.2.cs	\
	generic-system-arrays.2.cs	\
	generic-stack-traces.2.cs	\
	generic-stack-traces2.2.cs		\
	bug-472600.2.cs	\
	bug-473482.2.cs	\
	bug-473999.2.cs		\
	bug-479763.2.cs				\
	generic-type-load-exception.2.cs	\
	bug-616463.cs	\
	bug-1147.cs	\
	generic-type-builder.2.cs

PLATFORM_DISABLED_TESTS = $(am__append_7) $(am__append_8) \
	$(am__append_9) $(am__append_10) $(am__append_11) \
	$(am__append_12) $(am__append_13) $(am__append_14) \
	$(am__append_15)
#INTERP_PLATFORM_DISABLED_TESTS = \
#	assemblyresolve_event6.exe \
#	finalizer-exception.exe

#INTERP_PLATFORM_DISABLED_TESTS = \
#	assemblyresolve_event6.exe \
#	delegate-async-exit.exe \
#	delegate-delegate-exit.exe \
#	delegate-exit.exe \
#	delegate1.exe \
#	delegate3.exe \
#	finalizer-exception.exe \
#	monitor-abort.exe

COOP_DISABLED_TESTS = 
#COOP_DISABLED_TESTS = thunks.exe
PROFILE_DISABLED_TESTS = $(am__append_16) $(am__append_17)
AOT_DISABLED_TESTS = \
	constraints-load.exe

CI_DISABLED_TESTS = \
	main-returns-background-resetabort.exe \
	main-returns-background-abort-resetabort.exe	\
	assemblyresolve_event3.exe \
	delegate2.exe	\
	finally_guard.exe \
	generic-xdomain.2.exe


# failing tests which we temporarily disable for PRs
# so they don't interfere with other people's work
CI_PR_DISABLED_TESTS = \
	appdomain-threadpool-unload.exe


# appdomain-threadpool-unload.exe creates 100 appdomains, takes too long with llvm
LLVM_DISABLED_TESTS = \
	finally_block_ending_in_dead_bb.exe \
	appdomain-threadpool-unload.exe

LLVM = $(filter --llvm, $(MONO_ENV_OPTIONS))

# The two finalizer tests only work under sgen
# gc-altstack.exe fails under boehm because it has no support for altstack
# bug-459094.exe creates an extremely deep directory tree
# delegate-invoke.exe depends on 929c6bc9b6d76a273f251e6f5dfacac36e9c38bd which was
# reverted.
# bug-Xamarin-5278.exe got broken by 5d26590e79da139a284459299aee95c25f4cd835
# appdomain-thread-abort.exe: https://bugzilla.xamarin.com/show_bug.cgi?id=47054
# appdomain-marshalbyref-assemblyload.exe: https://bugzilla.xamarin.com/show_bug.cgi?id=49308
KNOWN_FAILING_TESTS = \
	delegate-async-exception.exe	\
	bug-348522.2.exe	\
	bug-459094.exe \
	delegate-invoke.exe \
	bug-Xamarin-5278.exe \
	appdomain-marshalbyref-assemblyload.exe

DISABLED_TESTS = \
	$(KNOWN_FAILING_TESTS) \
	$(PLATFORM_DISABLED_TESTS) \
	$(EXTRA_DISABLED_TESTS) \
	$(COOP_DISABLED_TESTS) \
	$(PROFILE_DISABLED_TESTS) \
	$(if $(AOT),$(AOT_DISABLED_TESTS)) \
	$(if $(CI),$(CI_DISABLED_TESTS)) \
	$(if $(CI_PR),$(CI_PR_DISABLED_TESTS)) \
	$(if $(LLVM),$(LLVM_DISABLED_TESTS))


# bug-48015.exe: be careful when re-enabling, it happens that it returns with
#                exit code 0, but doesn't actually execute the test.
# block_guard_restore_aligment_on_exit.exe: flaky (10% of the time it hangs and thus times out)
INTERP_DISABLED_TESTS = \
	$(KNOWN_FAILING_TESTS) \
	$(INTERP_PLATFORM_DISABLED_TESTS) \
	$(COOP_DISABLED_TESTS) \
	$(if $(CI),$(CI_DISABLED_TESTS)) \
	$(if $(CI_PR),$(CI_PR_DISABLED_TESTS)) \
	abort-cctor.exe \
	appdomain-unload.exe \
	array_load_exception.exe \
	async-exc-compilation.exe \
	async-with-cb-throws.exe \
	block_guard_restore_aligment_on_exit.exe \
	bug-335131.2.exe \
	bug-415577.exe \
	bug-45841-fpstack-exceptions.exe \
	bug-48015.exe \
	bug-58782-capture-and-throw.exe \
	bug-58782-plain-throw.exe \
	bug-81673.exe \
	bug445361.exe \
	calliGenericTest.exe \
	cominterop.exe \
	context-static.exe \
	delegate-with-null-target.exe \
	delegate9.exe \
	dynamic-method-stack-traces.exe \
	even-odd.exe \
	exception18.exe \
	field-access.exe \
	finally_block_ending_in_dead_bb.exe \
	handleref.exe \
	invalid_generic_instantiation.exe \
	ldftn-access.exe \
	marshal.exe \
	marshal8.exe \
	method-access.exe \
	nullable_boxing.2.exe \
	pinvoke-2.2.exe \
	pinvoke-utf8.exe \
	pinvoke.exe \
	pinvoke11.exe \
	pinvoke2.exe \
	pinvoke3.exe \
	pinvoke_ppcc.exe \
	pinvoke_ppcd.exe \
	pinvoke_ppcf.exe \
	pinvoke_ppci.exe \
	pinvoke_ppcs.exe \
	safehandle.2.exe \
	stackframes-async.2.exe \
	static-constructor.exe \
	test-type-ctor.exe \
	thread6.exe \
	threadpool-exceptions2.exe \
	threadpool-exceptions4.exe \
	threadpool-exceptions5.exe \
	thunks.exe \
	typeload-unaligned.exe \
	vararg.exe \
	vararg2.exe \
	winx64structs.exe

TESTS_CS = $(filter-out $(DISABLED_TESTS),$(TESTS_CS_SRC:.cs=.exe))
TESTS_IL = $(filter-out $(DISABLED_TESTS),$(TESTS_IL_SRC:.il=.exe))
TESTS_BENCH = $(filter-out $(DISABLED_TESTS),$(TESTS_BENCH_SRC:.cs=.exe))
TESTS_STRESS = $(filter-out $(DISABLED_TESTS),$(TESTS_STRESS_SRC:.cs=.exe))
TESTS_GSHARED = $(filter-out $(DISABLED_TESTS),$(TESTS_GSHARED_SRC:.cs=.exe))
#TESTSAOT_CS = $(TESTS_CS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_CS = $(TESTS_CS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_IL = $(TESTS_IL:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_IL = $(TESTS_IL:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_BENCH = $(TESTS_BENCH:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_BENCH = $(TESTS_BENCH:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_STRESS = $(TESTS_STRESS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_STRESS = $(TESTS_STRESS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_GSHARED = $(TESTS_GSHARED:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_GSHARED = $(TESTS_GSHARED:.exe=.exe$(PLATFORM_AOT_SUFFIX))

# Generated tests for runtime invoke

# Tests for the Mono lldb plugin
EXTRA_DIST = test-driver test-runner.cs $(TESTS_CS_SRC) \
	$(TESTS_IL_SRC) $(TESTS_BENCH_SRC) $(TESTS_STRESS_SRC) \
	stress-runner.pl load-missing.il t-missing.cs \
	load-exceptions.cs test-multi-netmodule-1-netmodule.cs \
	test-multi-netmodule-2-dll1.cs test-multi-netmodule-3-dll2.cs \
	test-multi-netmodule-4-exe.cs custom-attr-errors.cs \
	custom-attr-errors-lib.cs reflection-load-with-context-lib.cs \
	reflection-load-with-context-second-lib.cs \
	reflection-load-with-context.cs debug-casts.cs sgen-bridge.cs \
	sgen-descriptors.cs sgen-gshared-vtype.cs \
	sgen-bridge-major-fragmentation.cs sgen-domain-unload.cs \
	sgen-weakref-stress.cs sgen-cementing-stress.cs \
	sgen-case-23400.cs finalizer-wait.cs critical-finalizers.cs \
	sgen-domain-unload-2.cs sgen-suspend.cs \
	sgen-new-threads-dont-join-stw.cs \
	sgen-new-threads-dont-join-stw-2.cs \
	sgen-new-threads-collect.cs sgen-bridge-xref.cs bug-17590.cs \
	sgen-toggleref.cs sgen-bridge-gchandle.cs \
	gen-runtime-invoke.cs make-imt-test.cs \
	test-inline-call-stack-library.cs test-inline-call-stack.cs \
	unhandled-exception-base-configuration.config \
	unhandled-exception-legacy-configuration.config \
	appdomain-unload.exe.config unhandled-exception-test-case.2.cs \
	unhandled-exception-test-runner.2.cs \
	assemblyresolve_TestBase.cs assemblyresolve_Test.cs \
	assemblyresolve_asm.cs assemblyresolve_event5_label.cs \
	assemblyresolve_event5_helper.cs bug-81673-interface.cs \
	bug-36848-a.cs bug-81691-a.cs bug-81691-b.cs bug-81466-lib.il \
	bug-324535-il.il custom-modifiers.2.cs custom-modifiers-lib.il \
	bug-382986-lib.cs bug-17537-helper.cs coreclr-security.cs \
	generic-unboxing.2.il generic-boxing.2.il generic-unbox.2.cs \
	generic-box.2.cs generic-delegate2.2.cs \
	generic-delegate2-lib.2.il \
	appdomain-marshalbyref-assemblyload-MidAssembly.cs \
	appdomain-marshalbyref-assemblyload-LeafAssembly.cs \
	async-exceptions.cs modules.cs modules-m1.cs \
	threadpool-in-processexit.cs \
	threadpool-in-processexit.exe.stdout.expected \
	appdomain-loader.cs appdomain-tester.cs console-output.cs \
	console-output.exe.stderr.expected \
	console-output.exe.stdout.expected test_lldb.py test-lldb.cs \
	$(INTERNALSVISIBLETO_TEST_SRC) \
	$(INTERNALSVISIBLETO_TEST_LIB_SRC)
TEST_DRIVER_HARD_KILL_FEATURE = -r:$(CLASS)/Mono.Posix.dll
TEST_DRIVER_DEPEND = TestDriver.dll
#TEST_DRIVER_DEPEND = TestDriver.dll$(PLATFORM_AOT_SUFFIX)
#TEST_DRIVER_DEPEND = TestDriver.dll$(PLATFORM_AOT_SUFFIX)
# The following regexp describes all symbols that start with "g_" but are not part of eglibc.
# The optional underscore prepending symbol names may or may not appear depending on the
# system and the state of the leading-underscore compiler flag.
OK_G_SYMBOLS = '\<_?g_(s?list_(pre|ap)pend_(image|mempool)|concat_dir_and_file|Ctoc)\>'
TESTS_SGEN_REGULAR_SRC = \
	finalizer-wait.cs	\
	critical-finalizers.cs	\
	sgen-descriptors.cs	\
	sgen-gshared-vtype.cs	\
	sgen-weakref-stress.cs	\
	sgen-cementing-stress.cs	\
	sgen-case-23400.cs	\
	sgen-new-threads-dont-join-stw.cs	\
	sgen-new-threads-dont-join-stw-2.cs	\
	sgen-new-threads-collect.cs	\
	gc-graystack-stress.cs	\
	bug-17590.cs	\
	sgen-domain-unload.cs	\
	sgen-domain-unload-2.cs

TESTS_SGEN_REGULAR = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_REGULAR_SRC:.cs=.exe))
#TESTSAOT_SGEN_REGULAR = $(TESTS_SGEN_REGULAR:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_SGEN_REGULAR = $(TESTS_SGEN_REGULAR:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_SGEN_TOGGLEREF_SRC = \
	sgen-toggleref.cs

TESTS_SGEN_TOGGLEREF = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_TOGGLEREF_SRC:.cs=.exe))
#TESTSAOT_SGEN_TOGGLEREF = $(TESTS_SGEN_TOGGLEREF:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_SGEN_TOGGLEREF = $(TESTS_SGEN_TOGGLEREF:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_SGEN_BRIDGE_SRC = \
	sgen-bridge.cs	\
	sgen-bridge-major-fragmentation.cs

TESTS_SGEN_BRIDGE = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_BRIDGE_SRC:.cs=.exe))
#TESTSAOT_SGEN_BRIDGE = $(TESTS_SGEN_BRIDGE:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_SGEN_BRIDGE = $(TESTS_SGEN_BRIDGE:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_SGEN_BRIDGE2_SRC = \
	sgen-bridge-xref.cs

TESTS_SGEN_BRIDGE2 = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_BRIDGE2_SRC:.cs=.exe))
#TESTSAOT_SGEN_BRIDGE2 = $(TESTS_SGEN_BRIDGE2:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_SGEN_BRIDGE2 = $(TESTS_SGEN_BRIDGE2:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_SGEN_BRIDGE3_SRC = \
	sgen-bridge-gchandle.cs

TESTS_SGEN_BRIDGE3 = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_BRIDGE3_SRC:.cs=.exe))
#TESTSAOT_SGEN_BRIDGE3 = $(TESTS_SGEN_BRIDGE3:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_SGEN_BRIDGE3 = $(TESTS_SGEN_BRIDGE3:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_SGEN_OOM_SRC = \
	sgen-oom-cementing-stress.cs	\
	sgen-oom-new-threads-dont-join-stw-2.cs	\
	sgen-oom-bridge-major-fragmentation.cs \
	gc-oom-handling.cs	\
	gc-oom-handling2.cs

TESTS_SGEN_OOM = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_OOM_SRC:.cs=.exe))
#TESTSAOT_SGEN_OOM = $(TESTS_SGEN_OOM:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_SGEN_OOM = $(TESTS_SGEN_OOM:.exe=.exe$(PLATFORM_AOT_SUFFIX))
AOT_CONFIGURATIONS = \
	"|regular"	\
	"--gc=boehm|boehm"


# tests that expect a 1 exit code
TESTS_UNHANDLED_EXCEPTION_1_SRC = \
	unhandled-exception-1.cs	\
	unhandled-exception-9.cs


# tests that expect a 255 exit code
TESTS_UNHANDLED_EXCEPTION_255_SRC = \
	unhandled-exception-2.cs	\
	unhandled-exception-3.cs	\
	unhandled-exception-4.cs	\
	unhandled-exception-5.cs	\
	unhandled-exception-6.cs	\
	unhandled-exception-7.cs	\
	unhandled-exception-8.cs

TESTS_UNHANDLED_EXCEPTION_1 = $(filter-out $(DISABLED_TESTS),$(TESTS_UNHANDLED_EXCEPTION_1_SRC:.cs=.exe))
TESTS_UNHANDLED_EXCEPTION_255 = $(filter-out $(DISABLED_TESTS),$(TESTS_UNHANDLED_EXCEPTION_255_SRC:.cs=.exe))
#TESTSAOT_UNHANDLED_EXCEPTION_1 = $(TESTS_UNHANDLED_EXCEPTION_1:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_UNHANDLED_EXCEPTION_1 = $(TESTS_UNHANDLED_EXCEPTION_1:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_UNHANDLED_EXCEPTION_255 = $(TESTS_UNHANDLED_EXCEPTION_255:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_UNHANDLED_EXCEPTION_255 = $(TESTS_UNHANDLED_EXCEPTION_255:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_STRESS_PROCESS_SRC = \
		process-stress-1.cs	\
		process-stress-2.cs	\
		process-stress-3.cs	\
		process-leak.cs

TESTS_STRESS_PROCESS = $(filter-out $(DISABLED_TESTS),$(TESTS_STRESS_PROCESS_SRC:.cs=.exe))
#TESTSAOT_STRESS_PROCESS = $(TESTS_STRESS_PROCESS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
#TESTSAOT_STRESS_PROCESS = $(TESTS_STRESS_PROCESS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
noinst_LTLIBRARIES = libtest.la
AM_CPPFLAGS = $(GLIB_CFLAGS)

# gcc-3.4.4 emits incorrect code when making indirect calls to stdcall functions using a tail call
# This shows up when compiling mono_test_marshal_delegate ()
#libtest_la_CFLAGS = -fno-optimize-sibling-calls
libtest_la_LDFLAGS = -rpath `pwd`
# the exported names created by gcc for stdcall functions are missing the leading _, so MS.NET
# can't find them. So we use --kill-at to remove the @ suffix as well.
#libtest_la_LDFLAGS = -no-undefined -rpath `pwd` -Wl,--kill-at
libtest_la_SOURCES = libtest.c
libtest_la_LIBADD = $(GLIB_LIBS) $(LIBICONV)
INTERNALSVISIBLETO_TEST_SRC = \
	internalsvisibleto-runtimetest.cs \
	internalsvisibleto-compilertest.cs

INTERNALSVISIBLETO_TEST_LIB_SRC = \
	internalsvisibleto-library.cs

INTERNALSVISIBLETO_TEST_LIBS = \
	internalsvisibleto-correctcase.dll \
	internalsvisibleto-wrongcase.dll \
	internalsvisibleto-correctcase-2.dll \
	internalsvisibleto-wrongcase-2.dll \
	internalsvisibleto-correctcase-sign2048.dll \
	internalsvisibleto-wrongcase-sign2048.dll \
	internalsvisibleto-correctcase-2-sign2048.dll \
	internalsvisibleto-wrongcase-2-sign2048.dll

INTERNALSVISIBLETO_TEST = \
	$(INTERNALSVISIBLETO_TEST_SRC:.cs=.exe) \
	$(INTERNALSVISIBLETO_TEST_SRC:.cs=-sign2048.exe)

#INTERNALSVISIBLETO_TESTAOT = \
#	$(INTERNALSVISIBLETO_TEST:.exe=.exe$(PLATFORM_AOT_SUFFIX))

#INTERNALSVISIBLETO_TESTAOT = \
#	$(INTERNALSVISIBLETO_TEST:.exe=.exe$(PLATFORM_AOT_SUFFIX))

#INTERNALSVISIBLETO_TESTAOT_LIBS = \
#	$(INTERNALSVISIBLETO_TEST_LIBS:.dll=.dll$(PLATFORM_AOT_SUFFIX))

#INTERNALSVISIBLETO_TESTAOT_LIBS = \
#	$(INTERNALSVISIBLETO_TEST_LIBS:.dll=.dll$(PLATFORM_AOT_SUFFIX))

CLEANFILES = $(TESTS_CS) $(TESTS_IL) $(TESTS_BENCH) $(TESTS_STRESS) $(TESTSAOT_CS) $(TESTSAOT_IL) $(TESTSAOT_BENCH) $(TESTSAOT_STRESS) *.dll *.stdout *.aotlog *.exe stest.dat LeafAssembly.dll MidAssembly.dll appdomain-marshalbyref-assemblyload2/*.dll 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign mono/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign mono/tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
tests-config: $(top_builddir)/config.status $(srcdir)/tests-config.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libtest.la: $(libtest_la_OBJECTS) $(libtest_la_DEPENDENCIES) $(EXTRA_libtest_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libtest_la_LINK)  $(libtest_la_OBJECTS) $(libtest_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libtest_la-libtest.Plo

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libtest_la-libtest.lo: libtest.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtest_la_CFLAGS) $(CFLAGS) -MT libtest_la-libtest.lo -MD -MP -MF $(DEPDIR)/libtest_la-libtest.Tpo -c -o libtest_la-libtest.lo `test -f 'libtest.c' || echo '$(srcdir)/'`libtest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtest_la-libtest.Tpo $(DEPDIR)/libtest_la-libtest.Plo
#	$(AM_V_CC)source='libtest.c' object='libtest_la-libtest.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtest_la_CFLAGS) $(CFLAGS) -c -o libtest_la-libtest.lo `test -f 'libtest.c' || echo '$(srcdir)/'`libtest.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am check-local clean clean-generic clean-libtool \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


check-local:
	ok=:; \
	$(MAKE) test-jit || ok=false; \
	$(MAKE) test-generic-sharing || ok=false; \
	$(MAKE) test-type-load || ok=false; \
	$(MAKE) test-multi-netmodule || ok=false; \
	$(MAKE) test-cattr-type-load || ok=false; \
	$(MAKE) test-reflection-load-with-context || ok=false; \
	$(MAKE) test-platform || ok=false; \
	$(MAKE) test-console-output || ok=false; \
	$(MAKE) test-env-options || ok=false; \
	$(MAKE) test-unhandled-exception-2 || ok=false; \
	$(MAKE) test-appdomain-unload || ok=false; \
	$(MAKE) test-process-stress || ok=false; \
	$(MAKE) test-pedump || ok=false; \
	$(MAKE) test-internalsvisibleto || ok=false; \
	$(MAKE) rm-empty-logs || ok=false; \
	$(MAKE) runtest-gac-loading || ok=false; \
	$$ok

check-full:
	ok=; \
	$(MAKE) test-sgen || ok=false; \
	$(MAKE) check-local || ok=false; \
	$$ok

check-parallel:
	ok=; \
	$(MAKE) compile-tests; \
	$(MAKE) check-full || ok=false; \
	$$ok

check-coreclr:
	$(MAKE) -C $(mono_build_root)/acceptance-tests check-coreclr

check-stress:
	$(MAKE) test-stress-sgen

# for backwards compatibility on Wrench
test-wrench: check-parallel

aotcheck: testaot gshared-aot
TEST_RUNTIME_ARGS ?= $(RUNTIME_ARGS)
TEST_AOT_BUILD_FLAGS ?= $(AOT_BUILD_FLAGS)
TEST_AOT_RUN_FLAGS ?= $(AOT_RUN_FLAGS)

%.exe: %.il
	$(ILASM) -out:$@ $<

%.exe: %.cs $(TEST_DRIVER_DEPEND)
	$(MCS) -r:$(CLASS)/System.dll -r:$(CLASS)/System.Xml.dll -r:$(CLASS)/System.Core.dll -r:TestDriver.dll $(TEST_DRIVER_HARD_KILL_FEATURE) -out:$@ $<

# N.B. test-runner.exe references the TOOLS_RUNTIME versions of the framework assemblies
test-runner.exe: test-runner.cs $(TEST_DRIVER_DEPEND)
	$(MCS) -r:System.dll -r:System.Xml.dll -r:System.Core.dll -r:TestDriver.dll $(TEST_DRIVER_HARD_KILL_FEATURE) -out:$@ $<

%.dll: %.cs
	$(MCS) -r:$(CLASS)/System.dll -target:library -out:$@ $<
%.dll: %.il
	$(ILASM) /dll /output:$@ $<

reference-loader.exe: reference-loader.cs TestingReferenceAssembly.dll TestingReferenceReferenceAssembly.dll $(TEST_DRIVER_DEPEND)
	$(MCS) -r:$(CLASS)/System.dll -r:TestDriver.dll -r:TestingReferenceAssembly.dll -r:TestingReferenceReferenceAssembly.dll $(TEST_DRIVER_HARD_KILL_FEATURE) -out:$@ $(srcdir)/reference-loader.cs

TestingReferenceAssembly.dll: TestingReferenceAssembly.cs
	$(MCS) -target:library -out:$@ $<

TestingReferenceReferenceAssembly.dll: TestingReferenceReferenceAssembly.cs TestingReferenceAssembly.dll
	$(MCS) -r:TestingReferenceAssembly.dll -target:library -out:$@ $<

%.exe$(PLATFORM_AOT_SUFFIX): %.exe 
	$(RUNTIME) $(TEST_AOT_BUILD_FLAGS) $<

%.dll$(PLATFORM_AOT_SUFFIX): %.dll 
	$(RUNTIME) $(TEST_AOT_BUILD_FLAGS) $<

# mkbundle works on ppc, but the pkg-config POC doesn't when run with make test
#test-platform:
# Can't use mkbundle on win32 since there is no static build there
# Can't run test-unhandled-exception on Windows because of all the debug popups...
#test-platform:
# mkbundle uses the installed mono-2.pc so it won't work if there is no system mono
#test-platform:	testbundle test-iomap-regression
test-platform:	test-iomap-regression

# Target to precompile the test executables
tests: compile-tests

#
# Test that no symbols are missed in eglib-remap.h
#
#test-platform: test-eglib-remap
test-platform: test-eglib-remap
test-eglib-remap:
	@echo "Testing eglib remap..."
	@if which nm > /dev/null; then if nm $(top_builddir)/mono/mini/mono | grep -Ev $(OK_G_SYMBOLS) | grep -E 't _?g_'; then exit 1; else exit 0; fi; fi

test-env-options:
	MONO_ENV_OPTIONS="--version" $(RUNTIME) array-init.exe | grep -q Architecture:

# Precompile the test assemblies in parallel
compile-tests:
	$(MAKE) -j4 $(TESTS_CS) $(TESTS_IL) $(TESTS_BENCH) $(TESTS_STRESS) $(TESTS_GSHARED) $(TESTSAOT_CS) $(TESTSAOT_IL) $(TESTSAOT_BENCH) $(TESTSAOT_STRESS) $(TESTSAOT_GSHARED) compile-gac-loading

# Remove empty .stdout and .stderr files for wrench
rm-empty-logs:
	@echo "Removing empty logs..."
	find . '(' -name "*.stdout" -o -name "*.stderr" ')' -size 0 -exec rm {} \;

TestDriver.dll:
	$(MCS) -target:library -out:$@ $(srcdir)/../mini/TestDriver.cs $(srcdir)/../mini/TestHelpers.cs

runtest: compile-tests
	@failed=0; \
	passed=0; \
	failed_tests="";\
	if [ "x$$V" = "x1" ]; then dump_action="dump-output"; else dump_action="no-dump"; fi; \
	rm -f testlist testlist.sorted; \
	for i in $(TESTS_CS) $(TESTS_IL) $(TESTS_BENCH); do echo $${i} >> testlist; sort testlist > testlist.sorted; done; \
	for i in `cat testlist.sorted`; do \
		rm -f $${i}.so; \
		$(with_mono_path) $(JITTEST_PROG_RUN) --aot $(TEST_AOT_BUILD_FLAGS) --debug $${i} > $${i}.aotlog 2>&1 || exit 1; \
		if $(srcdir)/test-driver '$(with_mono_path) $(JITTEST_PROG_RUN)' $$i "$(DISABLED_TESTS)" "$${dump_action}" $(TEST_RUNTIME_ARGS) $(TEST_AOT_RUN_FLAGS) ; \
		then \
			passed=`expr $${passed} + 1`; \
		else \
			if [ $$? = 2 ]; then break; fi; \
			failed=`expr $${failed} + 1`; \
			failed_tests="$${failed_tests} $$i"; \
		fi \
	done; \
	echo "$${passed} test(s) passed. $${failed} test(s) did not pass."; \
	rm -f testlist testlist.sorted; \
	if [ $${failed} != 0 ]; then \
	  echo -e "\nFailed tests:\n"; \
	  for i in $${failed_tests}; do \
	    echo $${i}; \
	    if [ "x$$V" = "x1" ]; then \
	      cat $${i}.stdout; \
	      cat $${i}.stderr; \
	    fi; \
	  done; \
	  exit 1; \
	fi

runtest-managed: test-runner.exe compile-tests
	$(TOOLS_RUNTIME) --debug $(TEST_RUNNER) -j a --testsuite-name "runtime" --timeout 300 --disabled "$(DISABLED_TESTS)" --runtime-args "$(TEST_RUNTIME_FLAGS)" $(TESTS_CS) $(TESTS_IL) $(TESTS_BENCH)

runtest-managed-serial: test-runner.exe compile-tests
	$(TOOLS_RUNTIME) --debug $(TEST_RUNNER) -j 1 --testsuite-name "runtime" --disabled "$(DISABLED_TESTS)" $(TESTS_CS) $(TESTS_IL) $(TESTS_BENCH)

test-jit:
	@if test x$(M) != x0; then $(MAKE) runtest-managed; else $(MAKE) runtest; fi

testaot:
	@$(MAKE) AOT=1 runtest

testtrace:
	@$(MAKE) TEST_RUNTIME_ARGS="$${TEST_RUNTIME_ARGS} --trace" runtest

testinterp: test-runner.exe compile-tests
	$(TOOLS_RUNTIME) --debug $(TEST_RUNNER) -j a --runtime-args "--interpreter" --testsuite-name "runtime-interp" --timeout 300 --disabled "$(INTERP_DISABLED_TESTS)" $(TESTS_CS) $(TESTS_IL) $(TESTS_BENCH)

testjitspeed: $(JITTEST_PROG) compile-tests
	for i in $(TESTS_BENCH); do	\
		echo $$i;	\
		time $(JITTEST_PROG) $$i;	\
	done

test-iomap-regression: exists.exe
	@echo "Testing exists.exe..."
	@MONO_IOMAP=all $(RUNTIME) exists.exe

stresstest: compile-tests
	@failed=0; \
	passed=0; \
	failed_tests="";\
	for i in $(TESTS_STRESS); do	\
		if $(srcdir)/stress-runner.pl $$i ../mini/mono $(TEST_RUNTIME_ARGS); \
		then \
			passed=`expr $${passed} + 1`; \
		else \
			if [ $$? = 2 ]; then break; fi; \
			failed=`expr $${failed} + 1`; \
			failed_tests="$${failed_tests} $$i"; \
		fi \
	done; \
	echo "$${passed} test(s) passed. $${failed} test(s) did not pass."; \
	if [ $${failed} != 0 ]; then echo -e "\nFailed tests:\n"; \
	  for i in $${failed_tests}; do echo $${i}; done; exit 1; fi

testbundle: console.exe
	@echo "Testing mkbundle..."
	@$(MKBUNDLE) --static console.exe > mkbundle.stdout
	@$(with_mono_path) MONO_CFG_DIR=$(mono_cfg_dir) ./a.out >> mkbundle.stdout
	@- rm -rf a.out

load-missing.dll: load-missing.il
	$(Q) $(ILASM) /dll /output:$@ $<

load-exceptions.exe t.dll: load-exceptions.cs t-missing.cs load-missing.dll $(TEST_DRIVER_DEPEND)
	$(Q) $(MCS) -t:library -out:t.dll -d:FOUND t-missing.cs
	$(Q) $(MCS) -r:TestDriver.dll -r:load-missing.dll -r:t.dll -out:$@ $<
	$(Q) $(MCS) -t:library -out:t.dll t-missing.cs

test-type-load: load-exceptions.exe
	$(Q) $(RUNTIME) load-exceptions.exe > load-exceptions.exe.stdout 2> load-exceptions.exe.stderr

test-multi-netmodule-1-netmodule.netmodule: test-multi-netmodule-1-netmodule.cs
	$(Q) $(MCS) -t:module -out:$@ $<
test-multi-netmodule-2-dll1.dll: test-multi-netmodule-2-dll1.cs test-multi-netmodule-1-netmodule.netmodule
	$(Q) $(MCS) -addmodule:test-multi-netmodule-1-netmodule.netmodule -t:library  -out:$@ $<
test-multi-netmodule-3-dll2.dll: test-multi-netmodule-3-dll2.cs test-multi-netmodule-1-netmodule.netmodule
	$(Q) $(MCS) -addmodule:test-multi-netmodule-1-netmodule.netmodule -t:library -out:$@ $<
test-multi-netmodule-4-exe.exe: test-multi-netmodule-4-exe.cs test-multi-netmodule-2-dll1.dll test-multi-netmodule-3-dll2.dll
	$(Q) $(MCS) -r:test-multi-netmodule-2-dll1.dll -out:$@ $<

test-multi-netmodule: test-multi-netmodule-4-exe.exe
	$(Q) $(RUNTIME) test-multi-netmodule-4-exe.exe > test-multi-netmodule-4-exe.exe.stdout 2> test-multi-netmodule-4-exe.exe.stderr

custom-attr-errors.exe custom-attr-errors-lib.dll: custom-attr-errors.cs custom-attr-errors-lib.cs $(TEST_DRIVER_DEPEND)
	$(Q) $(MCS) /t:library -D:WITH_MEMBERS custom-attr-errors-lib.cs
	$(Q) $(MCS) -r:TestDriver.dll -r:custom-attr-errors-lib.dll custom-attr-errors.cs
	$(Q) $(MCS) /t:library custom-attr-errors-lib.cs

test-cattr-type-load: custom-attr-errors.exe
	$(Q) $(RUNTIME) custom-attr-errors.exe > custom-attr-errors.exe.stdout 2> custom-attr-errors.exe.stderr

reflection-load-with-context-second-lib.dll: reflection-load-with-context-second-lib.cs
	$(Q) $(MCS) /t:library -out:$@ $<
reflection-load-with-context-lib.dll: reflection-load-with-context-lib.cs reflection-load-with-context-second-lib.dll
	$(Q) $(MCS) /t:library -r:reflection-load-with-context-second-lib.dll -out:$@ $<
reflection-load-with-context.exe: reflection-load-with-context-lib.dll

test-reflection-load-with-context: reflection-load-with-context.exe
	$(Q) $(RUNTIME) reflection-load-with-context.exe > reflection-load-with-context.exe.stdout 2> reflection-load-with-context.exe.stderr
# This depends on TLS, so its not ran by default
debug-casts: debug-casts.exe
	$(Q) $(RUNTIME) --debug=casts debug-casts.exe

test-sgen:
	ok=; \
	$(MAKE) test-sgen-regular || ok=false; \
	$(MAKE) test-sgen-toggleref || ok=false; \
	$(MAKE) test-sgen-bridge || ok=false; \
	$(MAKE) test-sgen-bridge2 || ok=false; \
	$(MAKE) test-sgen-bridge3 || ok=false; \
	$$ok

test-stress-sgen:
	ok=; \
	$(MAKE) test-stress-sgen-regular || ok=false; \
	$(MAKE) test-stress-sgen-toggleref || ok=false; \
	$(MAKE) test-stress-sgen-bridge || ok=false; \
	$(MAKE) test-stress-sgen-bridge2 || ok=false; \
	$(MAKE) test-stress-sgen-bridge3 || ok=false; \
	$$ok

test-sgen-regular: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR)
	ok=; \
	$(MAKE) test-sgen-regular-ms-simple || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-simple || ok=false; \
	$$ok

test-stress-sgen-regular: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR)
	ok=; \
	$(MAKE) test-sgen-regular-ms-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-split MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-split-95-clear-at-gc MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple-par-dyn MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple-par-512k MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple-par-32m MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple-par-dyn-clear-at-gc MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-regular-ms-simple: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-simple: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc-par,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-split: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc,minor=split" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-split-95-clear-at-gc: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=clear-at-gc --gc-params=major=marksweep-conc,minor=split,alloc-ratio=95" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple-par-dyn: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple-par-512k: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=512k" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple-par-32m: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=32m" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple-par-dyn-clear-at-gc: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=clear-at-gc --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)

test-sgen-toggleref: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF)
	ok=; \
	$(MAKE) test-sgen-toggleref-ms-simple || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-simple || ok=false; \
	$$ok

test-stress-sgen-toggleref: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF)
	ok=; \
	$(MAKE) test-sgen-toggleref-ms-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-split MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-split-95-clear-at-gc MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple-par-dyn MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple-par-512k MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple-par-32m MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple-par-dyn-clear-at-gc MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-toggleref-ms-simple: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-simple: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-split: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc,minor=split" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-split-95-clear-at-gc: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=clear-at-gc --gc-params=toggleref-test,major=marksweep-conc,minor=split,alloc-ratio=95" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple-par-dyn: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple-par,dynamic-nursery" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple-par-512k: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple-par,nursery-size=512k" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple-par-32m: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple-par,nursery-size=32m" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple-par-dyn-clear-at-gc: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=clear-at-gc --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple-par,dynamic-nursery" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)

test-sgen-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE)
	ok=; \
	$(MAKE) test-sgen-bridge-ms-simple-tarjan-bridge || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-simple-tarjan-bridge || ok=false; \
	$$ok

test-stress-sgen-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE)
	ok=; \
	$(MAKE) test-sgen-bridge-ms-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-split-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-simple-new-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-simple-old-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-par-simple-par-dyn-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-par-simple-par-512k-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-par-simple-par-32m-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-bridge-ms-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-split-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc,minor=split,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-simple-new-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=new" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-simple-old-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=old" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-par-simple-par-dyn-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-par-simple-par-512k-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=512k,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-par-simple-par-32m-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=32m,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)

test-sgen-bridge2: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2)
	ok=; \
	$(MAKE) test-sgen-bridge2-ms-simple-tarjan-bridge || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-simple-tarjan-bridge || ok=false; \
	$$ok

test-stress-sgen-bridge2: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2)
	ok=; \
	$(MAKE) test-sgen-bridge2-ms-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-split-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-simple-new-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-simple-old-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-par-simple-par-dyn-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-par-simple-par-512k-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-par-simple-par-32m-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-bridge2-ms-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-split-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc,minor=split,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-simple-new-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=new" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-simple-old-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=old" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-par-simple-par-dyn-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-par-simple-par-512k-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=512k,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-par-simple-par-32m-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=32m,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)

test-sgen-bridge3: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3)
	ok=; \
	$(MAKE) test-sgen-bridge3-ms-simple-tarjan-bridge || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-simple-tarjan-bridge || ok=false; \
	$$ok

test-stress-sgen-bridge3: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3)
	ok=; \
	$(MAKE) test-sgen-bridge3-ms-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-split-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-simple-new-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-simple-old-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-par-simple-par-dyn-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-par-simple-par-512k-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-par-simple-par-32m-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-bridge3-ms-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-split-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc,minor=split,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-simple-new-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=new" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-simple-old-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=old" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-par-simple-par-dyn-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-par-simple-par-512k-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=512k,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-par-simple-par-32m-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=32m,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)

tests-sgen-oom: $(TESTS_SGEN_OOM) $(TESTSAOT_SGEN_OOM) test-runner.exe sgen-cementing-stress.exe sgen-new-threads-dont-join-stw-2.exe sgen-bridge-major-fragmentation.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) $(TEST_RUNNER_ARGS) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=max-valloc-size=50M,bridge=Bridge" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_OOM)

#LLVM crashes, got to fix it first.
#	"--llvm|llvm"	\
#	"--llvm --gc=boehm|llvm+boehm"

test-aot:
	@failed=0; \
	passed=0; \
	failed_tests="";\
	profile=$(DEFAULT_PROFILE);	\
	tmpfile=`mktemp -t mono_aot_outputXXXXXX` || exit 1;	\
	rm -f test-aot-$${name}.stdout test-aot-$${name}.stderr; \
	for assembly in $(mcs_topdir)/class/lib/$$profile/*.dll	; do	\
		asm_name=`basename $$assembly`;	\
		echo "... $$asm_name";	\
		for conf in $(AOT_CONFIGURATIONS); do	\
			name=`echo $$conf | cut -d\| -f 2`;	\
			params=`echo $$conf | cut -d\| -f 1`;	\
			test_name="$${asm_name}|$${name}";	\
			echo "  $$test_name";	\
			if MONO_PATH=$(mcs_topdir)/class/lib/$$profile $(JITTEST_PROG_RUN) $$params --aot=outfile=$$tmpfile $$assembly >> test-aot-$${name}.stdout 2>> test-aot-$${name}.stderr;	\
			then \
				passed=`expr $${passed} + 1`; \
			else \
				failed=`expr $${failed} + 1`; \
				failed_tests="$${failed_tests} $$test_name"; \
			fi \
		done;	\
	done;	\
	rm	$$tmpfile;	\
	echo "$${passed} test(s) passed. $${failed} test(s) did not pass."; \
	if [ $${failed} != 0 ]; then echo -e "\nFailed tests:\n"; \
	for i in $${failed_tests}; do echo $${i}; done; exit 1; fi

runtime-invoke.gen.cs: gen-runtime-invoke.exe
	$(Q) $(RUNTIME) gen-runtime-invoke.exe > runtime-invoke.gen.cs

imt_big_iface_test.cs: make-imt-test.exe
	$(Q) $(RUNTIME) make-imt-test.exe > imt_big_iface_test.cs

test-inline-call-stack-library.dll: $(srcdir)/test-inline-call-stack-library.cs
	$(MCS) -t:library -out:$@ $<

test-inline-call-stack.exe$(PLATFORM_AOT_SUFFIX): test-inline-call-stack-library.dll$(PLATFORM_AOT_SUFFIX)
test-inline-call-stack.exe: test-inline-call-stack.cs test-inline-call-stack-library.dll $(TEST_DRIVER_DEPEND)
	$(MCS) -r:TestDriver.dll -r:test-inline-call-stack-library.dll -out:$@ $<
unhandled-exception-test-case.1.cs: unhandled-exception-test-case.2.cs
	cp unhandled-exception-test-case.2.cs unhandled-exception-test-case.1.cs
unhandled-exception-test-case-legacy.1.cs: unhandled-exception-test-case.1.cs
	cp unhandled-exception-test-case.1.cs unhandled-exception-test-case-legacy.1.cs
unhandled-exception-test-case-legacy.2.cs: unhandled-exception-test-case.2.cs
	cp unhandled-exception-test-case.2.cs unhandled-exception-test-case-legacy.2.cs
unhandled-exception-config_files: unhandled-exception-base-configuration.config unhandled-exception-legacy-configuration.config
	cp unhandled-exception-base-configuration.config unhandled-exception-test-case.1.exe.config
	cp unhandled-exception-base-configuration.config unhandled-exception-test-case.2.exe.config
	cp unhandled-exception-legacy-configuration.config unhandled-exception-test-case-legacy.1.exe.config
	cp unhandled-exception-legacy-configuration.config unhandled-exception-test-case-legacy.2.exe.config

unhandled-exception-test-runner.2.exe: unhandled-exception-config_files unhandled-exception-test-case.1.exe unhandled-exception-test-case-legacy.1.exe  unhandled-exception-test-case.2.exe unhandled-exception-test-case-legacy.2.exe

test-unhandled-exception: unhandled-exception-test-runner.2.exe
	$(Q) $(RUNTIME) unhandled-exception-test-runner.2.exe RUNTIME:../mini/mono,GTC:F

safehandle.2.exe winx64structs.exe thunks.exe pinvoke3.exe pinvoke2.exe pinvoke-2.2.exe pinvoke17.exe pinvoke13.exe \
	pinvoke11.exe pinvoke_ppcs.exe pinvoke_ppci.exe pinvoke_ppcf.exe pinvoke_ppcd.exe pinvoke_ppcc.exe pinvoke.exe \
	marshalbool.exe marshal9.exe marshal5.exe marshal.exe handleref.exe cominterop.exe bug-Xamarin-5278.exe \
	bug-58782-plain-throw.exe bug-58782-capture-and-throw.exe: libtest.la

event-get.2.exe$(PLATFORM_AOT_SUFFIX): event-il.exe$(PLATFORM_AOT_SUFFIX)
event-get.2.exe: event-il.exe

module-cctor-loader.2.exe$(PLATFORM_AOT_SUFFIX): module-cctor.exe$(PLATFORM_AOT_SUFFIX)
module-cctor-loader.2.exe: module-cctor.exe

reference-loader.exe$(PLATFORM_AOT_SUFFIX): TestingReferenceAssembly.dll$(PLATFORM_AOT_SUFFIX) TestingReferenceReferenceAssembly.dll$(PLATFORM_AOT_SUFFIX)
reference-loader.exe: TestingReferenceAssembly.dll TestingReferenceReferenceAssembly.dll

assemblyresolve_asm.dll$(PLATFORM_AOT_SUFFIX): assemblyresolve_asm.dll assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX)
	MONO_PATH="assemblyresolve_deps:$(CLASS)" $(top_builddir)/runtime/mono-wrapper $(TEST_AOT_BUILD_FLAGS) assemblyresolve_asm.dll
assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX): assemblyresolve_deps/Test.dll assemblyresolve_deps/TestBase.dll$(PLATFORM_AOT_SUFFIX)
assemblyresolve_deps:
	mkdir -p assemblyresolve_deps
assemblyresolve_deps/TestBase.dll: assemblyresolve_deps $(srcdir)/assemblyresolve_TestBase.cs
	$(MCS) -target:library -out:assemblyresolve_deps/TestBase.dll $(srcdir)/assemblyresolve_TestBase.cs
assemblyresolve_deps/Test.dll: assemblyresolve_deps assemblyresolve_deps/TestBase.dll $(srcdir)/assemblyresolve_Test.cs
	$(MCS) -target:library -r:assemblyresolve_deps/TestBase.dll -out:assemblyresolve_deps/Test.dll $(srcdir)/assemblyresolve_Test.cs
assemblyresolve_asm.dll: assemblyresolve_deps/Test.dll $(srcdir)/assemblyresolve_asm.cs
	$(MCS) -target:library -r:assemblyresolve_deps/TestBase.dll -r:assemblyresolve_deps/Test.dll -out:assemblyresolve_asm.dll $(srcdir)/assemblyresolve_asm.cs

assemblyresolve_event3.exe$(PLATFORM_AOT_SUFFIX): assemblyresolve_asm.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/TestBase.dll$(PLATFORM_AOT_SUFFIX)
assemblyresolve_event3.exe: assemblyresolve_asm.dll assemblyresolve_deps/Test.dll assemblyresolve_deps/TestBase.dll

assemblyresolve_event4.exe$(PLATFORM_AOT_SUFFIX): assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/TestBase.dll$(PLATFORM_AOT_SUFFIX)
assemblyresolve_event4.exe: assemblyresolve_deps/Test.dll assemblyresolve_deps/TestBase.dll
assemblyresolve_deps/assemblyresolve_event5_label.dll: assemblyresolve_event5_label.cs assemblyresolve_deps 
	$(MCS) -target:library -out:assemblyresolve_deps/assemblyresolve_event5_label.dll $(srcdir)/assemblyresolve_event5_label.cs
assemblyresolve_event5_helper.dll: assemblyresolve_event5_helper.cs assemblyresolve_deps/assemblyresolve_event5_label.dll
	$(MCS) -target:library -out:assemblyresolve_event5_helper.dll -r:assemblyresolve_deps/assemblyresolve_event5_label.dll $(srcdir)/assemblyresolve_event5_helper.cs
assemblyresolve_event5.exe: assemblyresolve_event5_helper.dll

assemblyresolve_event6.exe$(PLATFORM_AOT_SUFFIX): assemblyresolve_asm.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/TestBase.dll$(PLATFORM_AOT_SUFFIX)
assemblyresolve_event6.exe: assemblyresolve_asm.dll assemblyresolve_deps/Test.dll assemblyresolve_deps/TestBase.dll

# We use 'test-support-files' to handle an ordering issue between the 'mono/' and 'runtime/' directories
bug-80307.exe: $(srcdir)/bug-80307.cs
	$(MCS) -r:$(CLASS)/System.Web.dll -out:$@ $(srcdir)/bug-80307.cs
	cd $(top_builddir)/runtime && $(MAKE) test-support-files

bug-81673.exe$(PLATFORM_AOT_SUFFIX): bug-81673-interface.dll$(PLATFORM_AOT_SUFFIX)
bug-81673.exe bug-81673-interface.dll: $(srcdir)/bug-81673.cs $(srcdir)/bug-81673-interface.cs
	$(MCS) -target:library -out:bug-81673-interface.dll $(srcdir)/bug-81673-interface.cs
	$(MCS) -r:bug-81673-interface.dll -out:bug-81673.exe $(srcdir)/bug-81673.cs
	$(MCS) -define:WITH_STOP -target:library -out:bug-81673-interface.dll $(srcdir)/bug-81673-interface.cs

bug-36848.exe$(PLATFORM_AOT_SUFFIX): bug-36848-a.dll$(PLATFORM_AOT_SUFFIX)
bug-36848.exe bug-36848-a.dll: $(srcdir)/bug-36848.cs $(srcdir)/bug-36848-a.cs
	$(MCS) -target:library -out:bug-36848-a.dll $(srcdir)/bug-36848-a.cs
	$(MCS) -r:bug-36848-a.dll -out:bug-36848.exe $(srcdir)/bug-36848.cs
	$(MCS) -define:WITH_STOP -target:library -out:bug-36848-a.dll $(srcdir)/bug-36848-a.cs

bug-81691.exe$(PLATFORM_AOT_SUFFIX): bug-81691-b.dll$(PLATFORM_AOT_SUFFIX)
bug-81691.exe bug-81691-a.dll bug-81691-b.dll: $(srcdir)/bug-81691.cs $(srcdir)/bug-81691-a.cs $(srcdir)/bug-81691-b.cs
	$(MCS) -target:library -out:bug-81691-a.dll $(srcdir)/bug-81691-a.cs 
	$(MCS) -r:bug-81691-a.dll -target:library -out:bug-81691-b.dll $(srcdir)/bug-81691-b.cs
	$(MCS) -r:bug-81691-b.dll -out:bug-81691.exe $(srcdir)/bug-81691.cs
	rm -f bug-81691-a.dll

bug-81466.exe$(PLATFORM_AOT_SUFFIX): bug-81466-lib.dll$(PLATFORM_AOT_SUFFIX)
bug-81466.exe bug-81466-lib.dll: $(srcdir)/bug-81466.il $(srcdir)/bug-81466-lib.il
	$(ILASM) /dll /output:bug-81466-lib.dll $(srcdir)/bug-81466-lib.il
	$(ILASM) /exe /output:bug-81466.exe $(srcdir)/bug-81466.il

bug-324535.exe$(PLATFORM_AOT_SUFFIX): bug-324535-il.dll$(PLATFORM_AOT_SUFFIX)
bug-324535.exe bug-324535-il.dll: $(srcdir)/bug-324535.cs $(srcdir)/bug-324535-il.il
	$(ILASM) /dll /output:bug-324535-il.dll $(srcdir)/bug-324535-il.il
	$(MCS) -r:bug-324535-il.dll -out:bug-324535.exe $(srcdir)/bug-324535.cs

custom-modifiers.2.exe$(PLATFORM_AOT_SUFFIX): custom-modifiers-lib.dll$(PLATFORM_AOT_SUFFIX)
custom-modifiers.2.exe custom-modifiers-lib.dll: $(srcdir)/custom-modifiers.2.cs $(srcdir)/custom-modifiers-lib.il
	$(ILASM) /dll /output:custom-modifiers-lib.dll $(srcdir)/custom-modifiers-lib.il
	$(MCS) -r:custom-modifiers-lib.dll -out:custom-modifiers.2.exe $(srcdir)/custom-modifiers.2.cs

bug-382986.exe$(PLATFORM_AOT_SUFFIX): bug-382986-lib.dll$(PLATFORM_AOT_SUFFIX)
bug-382986.exe bug-382986-lib.dll: $(srcdir)/bug-382986.cs $(srcdir)/bug-382986-lib.cs
	$(MCS) -target:library -out:bug-382986-lib.dll $(srcdir)/bug-382986-lib.cs
	$(MCS) -r:bug-382986-lib.dll -out:bug-382986.exe $(srcdir)/bug-382986.cs

bug-17537.exe$(PLATFORM_AOT_SUFFIX): bug-17537-helper.exe$(PLATFORM_AOT_SUFFIX)
bug-17537-helper.exe: $(srcdir)/bug-17537-helper.cs
	$(MCS) -out:$@ $<
	chmod -x $@
bug-17537.exe: bug-17537-helper.exe

test-coreclr-security : coreclr-security.exe
	@$(RUNTIME_MOONLIGHT) --security=core-clr-test coreclr-security.exe

generic-unboxing.2.dll: $(srcdir)/generic-unboxing.2.il
	$(ILASM) /dll /output:$@ $<
generic-boxing.2.dll: $(srcdir)/generic-boxing.2.il generic-unboxing.2.dll
	$(ILASM) /dll /output:$@ $<

generic-unbox.2.exe$(PLATFORM_AOT_SUFFIX): generic-unboxing.2.dll$(PLATFORM_AOT_SUFFIX)
generic-unbox.2.exe: $(srcdir)/generic-unbox.2.cs generic-unboxing.2.dll
	$(MCS) -r:generic-unboxing.2.dll -out:$@ $<

generic-box.2.exe$(PLATFORM_AOT_SUFFIX): generic-unboxing.2.dll$(PLATFORM_AOT_SUFFIX) generic-boxing.2.dll$(PLATFORM_AOT_SUFFIX)
generic-box.2.exe : $(srcdir)/generic-box.2.cs generic-unboxing.2.dll generic-boxing.2.dll
	$(MCS) -r:generic-unboxing.2.dll,generic-boxing.2.dll -out:$@ $<

generic-delegate2-lib.2.dll: $(srcdir)/generic-delegate2-lib.2.il
	$(ILASM) /dll /output:$@ $<

generic-delegate2.2.exe$(PLATFORM_AOT_SUFFIX): generic-delegate2-lib.2.dll$(PLATFORM_AOT_SUFFIX)
generic-delegate2.2.exe: $(srcdir)/generic-delegate2.2.cs generic-delegate2-lib.2.dll
	$(MCS) -r:generic-delegate2-lib.2.dll -out:$@ $<

bug-3903.exe: bug-3903.cs
	$(MCS_NO_LIB)  $(srcdir)/bug-3903.cs -nostdlib -r:$(srcdir)/../../external/binary-reference-assemblies/v2.0/mscorlib.dll -r:$(srcdir)/../../external/binary-reference-assemblies/v2.0/System.Core.dll -out:$@

LeafAssembly.dll: appdomain-marshalbyref-assemblyload-LeafAssembly.cs
	mkdir -p appdomain-marshalbyref-assemblyload1
	$(MCS) -target:library -out:$@ $<

appdomain-marshalbyref-assemblyload2/LeafAssembly.dll: appdomain-marshalbyref-assemblyload-LeafAssembly.cs
	mkdir -p appdomain-marshalbyref-assemblyload2
	$(MCS) -target:library -out:$@ $< -define:UNDEFINE_OTHER_METHOD

MidAssembly.dll: appdomain-marshalbyref-assemblyload-MidAssembly.cs LeafAssembly.dll
	mkdir -p appdomain-marshalbyref-assemblyload1
	$(MCS) -target:library -out:$@ $< -r:LeafAssembly.dll

appdomain-marshalbyref-assemblyload.exe: appdomain-marshalbyref-assemblyload.cs MidAssembly.dll LeafAssembly.dll appdomain-marshalbyref-assemblyload2/LeafAssembly.dll
	$(MCS) -out:$@ $< -r:MidAssembly.dll -r:LeafAssembly.dll

gshared:
	$(MAKE) test-generic-sharing

gshared-aot:
	@$(MAKE) AOT=1 gshared

test-generic-sharing-normal: $(TESTS_GSHARED) $(TESTSAOT_GSHARED)
	@for fn in $+ ; do	\
		echo "Testing $$fn ...";	\
		$(RUNTIME) -O=gshared                $$fn > $$fn.stdout || exit 1;	\
		$(RUNTIME) -O=gshared,shared         $$fn > $$fn.stdout || exit 1;	\
		$(RUNTIME) -O=gshared,-inline        $$fn > $$fn.stdout || exit 1;	\
		$(RUNTIME) -O=gshared,-inline,shared $$fn > $fn.stdout || exit 1;	\
		if [ x$(AOT) = x1 ]; then $(with_mono_path) $(JITTEST_PROG_RUN) --aot --debug $$fn > /dev/null || exit 1; $(RUNTIME) $$fn > $$fn.stdout || exit 1; fi; \
	done

test-generic-sharing-managed: test-runner.exe $(TESTS_GSHARED) $(TESTSAOT_GSHARED) 
	$(Q) $(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name "gshared" --disabled "$(DISABLED_TESTS)" --opt-sets "gshared gshared,shared gshared,-inline gshared,-inline,shared" $(TESTS_GSHARED)

test-generic-sharing:
	@if test x$(M) != x0; then $(MAKE) test-generic-sharing-managed; else $(MAKE) test-generic-sharing-normal; fi
async-exceptions.exe : async-exceptions.cs
	$(MCS) -out:async-exceptions.exe $(srcdir)/async-exceptions.cs
test-async-exceptions : async-exceptions.exe
	for i in `echo 0 1 2 3 4 5 6 7 8 9 10`; do $(RUNTIME) --inject-async-exc Tests:foo $$i async-exceptions.exe || exit 1; done
	for i in `echo 0 1 2 3 4 5 6 7 8 9 10`; do $(RUNTIME) --inject-async-exc Tests:bar $$i async-exceptions.exe || exit 1; done
modules-m1.netmodule: modules-m1.cs
	$(MCS) -out:$@ /target:module $(srcdir)/modules-m1.cs
modules.exe: modules.cs modules-m1.netmodule $(TEST_DRIVER_DEPEND) 
	$(MCS) -out:$@ /addmodule:modules-m1.netmodule -r:TestDriver.dll $(srcdir)/modules.cs

# Useful if mono is compiled with --enable-shared=no
patch-libtool:
	cp "../../libtool" .
	sed -e 's,build_libtool_libs=no,build_libtool_libs=yes,g' libtool > 2; mv 2 libtool
	sed -e 's,LIBTOOL =,LIBTOOL2 =,g' Makefile > 2 && echo "LIBTOOL = bash ./libtool" > 1 && cat 1 2 > Makefile
	touch libtest.c
test-process-exit:
	@$(MCS) $(srcdir)/threadpool-in-processexit.cs -out:threadpool-in-processexit.exe
	@echo "Testing threadpool-in-processexit.exe..."
	@$(RUNTIME) threadpool-in-processexit.exe > threadpool-in-processexit.exe.stdout
	@diff -w threadpool-in-processexit.exe.stdout $(srcdir)/threadpool-in-processexit.exe.stdout.expected

test-unhandled-exception-2: $(TESTS_UNHANDLED_EXCEPTION_1) $(TESTS_UNHANDLED_EXCEPTION_255) $(TESTSAOT_UNHANDLED_EXCEPTION_1) $(TESTSAOT_UNHANDLED_EXCEPTION_255)
	ok=; \
	$(MAKE) test-unhandled-exception-2-1-with-managed-handler || ok=false; \
	$(MAKE) test-unhandled-exception-2-1-without-managed-handler || ok=false; \
	$(MAKE) test-unhandled-exception-2-255-with-managed-handler || ok=false; \
	$(MAKE) test-unhandled-exception-2-255-without-managed-handler || ok=false; \
	$$ok

test-unhandled-exception-2-1-with-managed-handler: $(TESTS_UNHANDLED_EXCEPTION_1) $(TESTSAOT_UNHANDLED_EXCEPTION_1) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --expected-exit-code 1 $(TESTS_UNHANDLED_EXCEPTION_1)
test-unhandled-exception-2-1-without-managed-handler: $(TESTS_UNHANDLED_EXCEPTION_1) $(TESTSAOT_UNHANDLED_EXCEPTION_1) test-runner.exe
	TEST_UNHANDLED_EXCEPTION_HANDLER=1 $(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --expected-exit-code 1 $(TESTS_UNHANDLED_EXCEPTION_1)
test-unhandled-exception-2-255-with-managed-handler: $(TESTS_UNHANDLED_EXCEPTION_255) $(TESTSAOT_UNHANDLED_EXCEPTION_255) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --expected-exit-code 255 $(TESTS_UNHANDLED_EXCEPTION_255)
test-unhandled-exception-2-255-without-managed-handler: $(TESTS_UNHANDLED_EXCEPTION_255) $(TESTSAOT_UNHANDLED_EXCEPTION_255) test-runner.exe
	TEST_UNHANDLED_EXCEPTION_HANDLER=1 $(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --expected-exit-code 255 $(TESTS_UNHANDLED_EXCEPTION_255)

#test-appdomain-unload:
appdomain-loader.exe: appdomain-tester.exe

test-appdomain-unload: appdomain-loader.exe appdomain-tester.exe
	$(RUNTIME) -O=gshared appdomain-loader.exe > appdomain-loader.exe.1.stdout || exit 1;
	$(RUNTIME) appdomain-loader.exe > appdomain-loader.exe.2.stdout || exit 1;
	MONO_DEBUG_ASSEMBLY_UNLOAD=1 $(RUNTIME) -O=gshared appdomain-loader.exe > appdomain-loader.exe.3.stdout || exit 1;
	MONO_DEBUG_ASSEMBLY_UNLOAD=1 $(RUNTIME) appdomain-loader.exe > appdomain-loader.exe.4.stdout || exit 1;
test-console-output: console-output.exe
	@$(RUNTIME) console-output.exe 1>console-output.exe.stdout
	@$(RUNTIME) console-output.exe 2>console-output.exe.stderr
	@diff -w console-output.exe.stdout $(srcdir)/console-output.exe.stdout.expected \
		&& diff -w console-output.exe.stderr $(srcdir)/console-output.exe.stderr.expected

test-pedump: test-runner.exe
	$(with_mono_path) $(mono_build_root)/tools/pedump/pedump --verify error test-runner.exe

.PHONY: test-gac-loading test-eglib-remap

runtest-gac-loading: test-runner.exe
	$(MAKE) -C testing_gac runtest

compile-gac-loading:
	$(MAKE) -C testing_gac compile-tests

test-process-stress: $(TESTS_STRESS_PROCESS) $(TESTSAOT_STRESS_PROCESS) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --timeout 600 $(TESTS_STRESS_PROCESS)

coreclr-gcstress:
	$(MAKE) -C $(mono_build_root)/acceptance-tests coreclr-gcstress
test-lldb: test-lldb.exe
	python test_lldb.py $(JITTEST_PROG)

test-internalsvisibleto: test-runner.exe $(INTERNALSVISIBLETO_TEST) $(INTERNALSVISIBLETO_TESTAOT) $(INTERNALSVISIBLETO_TESTAOT_LIBS)
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ $(INTERNALSVISIBLETO_TEST)

internalsvisibleto-correctcase.dll internalsvisibleto-wrongcase.dll internalsvisibleto-runtimetest.exe: internalsvisibleto-runtimetest.cs internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase.dll -target:library -d:CORRECT_CASE -d:PERMISSIVE internalsvisibleto-library.cs	
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase.dll -target:library -d:WRONG_CASE -d:PERMISSIVE internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-runtimetest.exe -warn:0 -r:internalsvisibleto-correctcase.dll -r:internalsvisibleto-wrongcase.dll internalsvisibleto-runtimetest.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase.dll -target:library -d:CORRECT_CASE internalsvisibleto-library.cs	
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase.dll -target:library -d:WRONG_CASE internalsvisibleto-library.cs

internalsvisibleto-correctcase-2.dll internalsvisibleto-wrongcase-2.dll  internalsvisibleto-compilertest.exe: internalsvisibleto-compilertest.cs internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase-2.dll -target:library -d:CORRECT_CASE internalsvisibleto-library.cs	
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase-2.dll -target:library -d:WRONG_CASE internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-compilertest.exe -warn:0 -r:internalsvisibleto-correctcase-2.dll -r:internalsvisibleto-wrongcase-2.dll internalsvisibleto-compilertest.cs

internalsvisibleto-correctcase-sign2048.dll internalsvisibleto-wrongcase-sign2048.dll internalsvisibleto-runtimetest-sign2048.exe: internalsvisibleto-runtimetest.cs internalsvisibleto-library.cs internalsvisibleto-2048.snk
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase-sign2048.dll -target:library -d:CORRECT_CASE -d:PERMISSIVE -d:SIGN2048 internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase-sign2048.dll -target:library -d:WRONG_CASE -d:PERMISSIVE -d:SIGN2048 internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-runtimetest-sign2048.exe -warn:0 -r:internalsvisibleto-correctcase-sign2048.dll -r:internalsvisibleto-wrongcase-sign2048.dll -d:SIGN2048 internalsvisibleto-runtimetest.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase-sign2048.dll -target:library -d:CORRECT_CASE -d:SIGN2048 internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase-sign2048.dll -target:library -d:WRONG_CASE -d:SIGN2048 internalsvisibleto-library.cs

internalsvisibleto-correctcase-2-sign2048.dll internalsvisibleto-wrongcase-2-sign2048.dll internalsvisibleto-compilertest-sign2048.exe: internalsvisibleto-compilertest.cs internalsvisibleto-library.cs internalsvisibleto-2048.snk
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase-2-sign2048.dll -target:library -d:CORRECT_CASE -d:SIGN2048 internalsvisibleto-library.cs	
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase-2-sign2048.dll -target:library -d:WRONG_CASE -d:SIGN2048 internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-compilertest-sign2048.exe -warn:0 -r:internalsvisibleto-correctcase-2-sign2048.dll -r:internalsvisibleto-wrongcase-2-sign2048.dll -d:SIGN2048 internalsvisibleto-compilertest.cs

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
