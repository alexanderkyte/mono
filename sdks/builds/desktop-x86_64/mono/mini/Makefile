# Makefile.in generated by automake 1.15.1 from Makefile.am.
# mono/mini/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





VPATH = /Users/akyte/mono/mono/mini
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/mono
pkgincludedir = $(includedir)/mono
pkglibdir = $(libdir)/mono
pkglibexecdir = $(libexecdir)/mono
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin17.2.0
host_triplet = x86_64-apple-darwin17.2.0
target_triplet = x86_64-apple-darwin17.2.0
bin_PROGRAMS =  \
	$(am__EXEEXT_1) \
	$(am__EXEEXT_2)
#bin_PROGRAMS =  \
#	$(am__EXEEXT_1) \
#	$(am__EXEEXT_2) \
#	monow$(EXEEXT)
noinst_PROGRAMS = genmdesc$(EXEEXT) \
	mono$(EXEEXT)
#noinst_PROGRAMS = genmdesc$(EXEEXT)
#am__append_1 = libmono-llvm.la
##am__append_2 = $(top_builddir)/mono/mini/libmonoboehm-$(API_VER).la $(boehm_libs)
#am__append_3 = -no-undefined
#am__append_4 = builtin-types.exe

# Skip aoting the tests that aren't compiled 
# on the full aot profiles because they're skipped
# on mobile profiles
#am__append_5 = \
#	Mono.Posix.dll \
#	System.Configuration.dll

subdir = mono/mini
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(libmonoinclude_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(libmonoincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
#am__DEPENDENCIES_1 = mono-dtrace.$(OBJEXT)
libmini_static_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__libmini_static_la_SOURCES_DIST = mini.c mini-runtime.c \
	seq-points.c seq-points.h ir-emit.h method-to-ir.c cfgdump.h \
	cfgdump.c decompose.c mini.h version.h optflags-def.h \
	jit-icalls.h jit-icalls.c trace.c trace.h patch-info.h \
	mini-ops.h mini-arch.h dominators.c cfold.c regalloc.h \
	helpers.c liveness.c ssa.c abcremoval.c abcremoval.h \
	local-propagation.c driver.c debug-mini.c linear-scan.c \
	aot-compiler.h aot-compiler.c aot-runtime.c aot-runtime-wasm.c \
	graph.c mini-codegen.c mini-exceptions.c mini-trampolines.c \
	branch-opts.c mini-generic-sharing.c simd-methods.h tasklets.c \
	tasklets.h simd-intrinsics.c mini-native-types.c mini-unwind.h \
	unwind.c image-writer.h image-writer.c dwarfwriter.h \
	dwarfwriter.c mini-gc.h mini-gc.c debugger-agent.h \
	debugger-agent.c xdebug.c mini-llvm.h mini-llvm-cpp.h \
	llvm-jit.h alias-analysis.c mini-cross-helpers.c arch-stubs.c \
	llvm-runtime.h type-checking.c lldb.h lldb.c memory-access.c \
	mini-profiler.c mini-llvm.c mini-llvm-loaded.c \
	mini-llvm-cpp.cpp llvm-jit.cpp llvm-runtime.cpp interp/hacks.h \
	interp/interp.h interp/interp-internals.h interp/interp.c \
	interp/mintops.h interp/mintops.def interp/mintops.c \
	interp/transform.c interp/interp-stubs.c mini-amd64.c \
	mini-amd64.h exceptions-amd64.c tramp-amd64.c \
	mini-amd64-gsharedvt.c mini-amd64-gsharedvt.h \
	tramp-amd64-gsharedvt.c mini-arm64.c mini-arm64.h \
	exceptions-arm64.c tramp-arm64.c mini-arm64-gsharedvt.c \
	mini-arm64-gsharedvt.h tramp-arm64-gsharedvt.c mini-arm.c \
	mini-arm.h exceptions-arm.c tramp-arm.c mini-arm-gsharedvt.c \
	tramp-arm-gsharedvt.c mini-mips.c mini-mips.h \
	exceptions-mips.c tramp-mips.c mini-ppc.c mini-ppc.h \
	exceptions-ppc.c tramp-ppc.c mini-s390x.c mini-s390x.h \
	support-s390x.h exceptions-s390x.c tramp-s390x.c mini-sparc.c \
	mini-sparc.h exceptions-sparc.c tramp-sparc.c mini-wasm.c \
	mini-wasm.h exceptions-wasm.c tramp-wasm.c mini-x86.c \
	mini-x86.h exceptions-x86.c tramp-x86.c mini-x86-gsharedvt.c \
	tramp-x86-gsharedvt.c mini-darwin.c mini-posix.c \
	mini-windows.c mini-windows.h mini-windows-dllmain.c \
	mini-windows-dlldac.c
am__objects_1 = libmini_static_la-mini.lo \
	libmini_static_la-mini-runtime.lo \
	libmini_static_la-seq-points.lo \
	libmini_static_la-method-to-ir.lo libmini_static_la-cfgdump.lo \
	libmini_static_la-decompose.lo libmini_static_la-jit-icalls.lo \
	libmini_static_la-trace.lo libmini_static_la-dominators.lo \
	libmini_static_la-cfold.lo libmini_static_la-helpers.lo \
	libmini_static_la-liveness.lo libmini_static_la-ssa.lo \
	libmini_static_la-abcremoval.lo \
	libmini_static_la-local-propagation.lo \
	libmini_static_la-driver.lo libmini_static_la-debug-mini.lo \
	libmini_static_la-linear-scan.lo \
	libmini_static_la-aot-compiler.lo \
	libmini_static_la-aot-runtime.lo \
	libmini_static_la-aot-runtime-wasm.lo \
	libmini_static_la-graph.lo libmini_static_la-mini-codegen.lo \
	libmini_static_la-mini-exceptions.lo \
	libmini_static_la-mini-trampolines.lo \
	libmini_static_la-branch-opts.lo \
	libmini_static_la-mini-generic-sharing.lo \
	libmini_static_la-tasklets.lo \
	libmini_static_la-simd-intrinsics.lo \
	libmini_static_la-mini-native-types.lo \
	libmini_static_la-unwind.lo libmini_static_la-image-writer.lo \
	libmini_static_la-dwarfwriter.lo libmini_static_la-mini-gc.lo \
	libmini_static_la-debugger-agent.lo \
	libmini_static_la-xdebug.lo \
	libmini_static_la-alias-analysis.lo \
	libmini_static_la-mini-cross-helpers.lo \
	libmini_static_la-arch-stubs.lo \
	libmini_static_la-type-checking.lo libmini_static_la-lldb.lo \
	libmini_static_la-memory-access.lo \
	libmini_static_la-mini-profiler.lo
#am__objects_2 = libmini_static_la-mini-llvm.lo \
#	libmini_static_la-mini-llvm-loaded.lo \
#	mini-llvm-cpp.lo \
#	llvm-jit.lo
##am__objects_2 = libmini_static_la-mini-llvm-loaded.lo
#am__objects_3 =  \
#	llvm-runtime.lo
#am__objects_3 = llvm-runtime.lo
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_4 =  \
	interp/libmini_static_la-interp.lo \
	interp/libmini_static_la-mintops.lo \
	interp/libmini_static_la-transform.lo
#am__objects_4 = interp/libmini_static_la-interp-stubs.lo
am__objects_5 = libmini_static_la-mini-amd64.lo \
	libmini_static_la-exceptions-amd64.lo \
	libmini_static_la-tramp-amd64.lo \
	libmini_static_la-mini-amd64-gsharedvt.lo \
	libmini_static_la-tramp-amd64-gsharedvt.lo
am__objects_6 = libmini_static_la-mini-arm64.lo \
	libmini_static_la-exceptions-arm64.lo \
	libmini_static_la-tramp-arm64.lo \
	libmini_static_la-mini-arm64-gsharedvt.lo \
	libmini_static_la-tramp-arm64-gsharedvt.lo
am__objects_7 = libmini_static_la-mini-arm.lo \
	libmini_static_la-exceptions-arm.lo \
	libmini_static_la-tramp-arm.lo \
	libmini_static_la-mini-arm-gsharedvt.lo \
	libmini_static_la-tramp-arm-gsharedvt.lo
am__objects_8 = libmini_static_la-mini-mips.lo \
	libmini_static_la-exceptions-mips.lo \
	libmini_static_la-tramp-mips.lo
am__objects_9 = libmini_static_la-mini-ppc.lo \
	libmini_static_la-exceptions-ppc.lo \
	libmini_static_la-tramp-ppc.lo
am__objects_10 = libmini_static_la-mini-s390x.lo \
	libmini_static_la-exceptions-s390x.lo \
	libmini_static_la-tramp-s390x.lo
am__objects_11 = libmini_static_la-mini-sparc.lo \
	libmini_static_la-exceptions-sparc.lo \
	libmini_static_la-tramp-sparc.lo
am__objects_12 = libmini_static_la-mini-wasm.lo \
	libmini_static_la-exceptions-wasm.lo \
	libmini_static_la-tramp-wasm.lo
am__objects_13 = libmini_static_la-mini-x86.lo \
	libmini_static_la-exceptions-x86.lo \
	libmini_static_la-tramp-x86.lo \
	libmini_static_la-mini-x86-gsharedvt.lo \
	libmini_static_la-tramp-x86-gsharedvt.lo
##am__objects_14 = $(am__objects_13)
##am__objects_14 = $(am__objects_12)
##am__objects_14 = $(am__objects_11)
##am__objects_14 = $(am__objects_11)
##am__objects_14 = $(am__objects_10)
##am__objects_14 = $(am__objects_9)
##am__objects_14 = $(am__objects_9)
##am__objects_14 = $(am__objects_8)
##am__objects_14 = $(am__objects_7)
##am__objects_14 = $(am__objects_6)
am__objects_14 = $(am__objects_5)
am__objects_15 = libmini_static_la-mini-darwin.lo
am__objects_16 = libmini_static_la-mini-posix.lo
am__objects_17 = libmini_static_la-mini-windows.lo \
	libmini_static_la-mini-windows-dllmain.lo \
	libmini_static_la-mini-windows-dlldac.lo
##am__objects_18 = $(am__objects_17)
##am__objects_18 =  \
##	$(am__objects_16)
am__objects_18 = $(am__objects_15) $(am__objects_16)
am__objects_19 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_14) $(am__objects_18)
am_libmini_static_la_OBJECTS = $(am__objects_19)
libmini_static_la_OBJECTS = $(am_libmini_static_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libmini_static_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libmini_static_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libmini_static_la_rpath =
libmini_la_LIBADD =
am__libmini_la_SOURCES_DIST = mini.c mini-runtime.c seq-points.c \
	seq-points.h ir-emit.h method-to-ir.c cfgdump.h cfgdump.c \
	decompose.c mini.h version.h optflags-def.h jit-icalls.h \
	jit-icalls.c trace.c trace.h patch-info.h mini-ops.h \
	mini-arch.h dominators.c cfold.c regalloc.h helpers.c \
	liveness.c ssa.c abcremoval.c abcremoval.h local-propagation.c \
	driver.c debug-mini.c linear-scan.c aot-compiler.h \
	aot-compiler.c aot-runtime.c aot-runtime-wasm.c graph.c \
	mini-codegen.c mini-exceptions.c mini-trampolines.c \
	branch-opts.c mini-generic-sharing.c simd-methods.h tasklets.c \
	tasklets.h simd-intrinsics.c mini-native-types.c mini-unwind.h \
	unwind.c image-writer.h image-writer.c dwarfwriter.h \
	dwarfwriter.c mini-gc.h mini-gc.c debugger-agent.h \
	debugger-agent.c xdebug.c mini-llvm.h mini-llvm-cpp.h \
	llvm-jit.h alias-analysis.c mini-cross-helpers.c arch-stubs.c \
	llvm-runtime.h type-checking.c lldb.h lldb.c memory-access.c \
	mini-profiler.c mini-llvm.c mini-llvm-loaded.c \
	mini-llvm-cpp.cpp llvm-jit.cpp llvm-runtime.cpp interp/hacks.h \
	interp/interp.h interp/interp-internals.h interp/interp.c \
	interp/mintops.h interp/mintops.def interp/mintops.c \
	interp/transform.c interp/interp-stubs.c mini-amd64.c \
	mini-amd64.h exceptions-amd64.c tramp-amd64.c \
	mini-amd64-gsharedvt.c mini-amd64-gsharedvt.h \
	tramp-amd64-gsharedvt.c mini-arm64.c mini-arm64.h \
	exceptions-arm64.c tramp-arm64.c mini-arm64-gsharedvt.c \
	mini-arm64-gsharedvt.h tramp-arm64-gsharedvt.c mini-arm.c \
	mini-arm.h exceptions-arm.c tramp-arm.c mini-arm-gsharedvt.c \
	tramp-arm-gsharedvt.c mini-mips.c mini-mips.h \
	exceptions-mips.c tramp-mips.c mini-ppc.c mini-ppc.h \
	exceptions-ppc.c tramp-ppc.c mini-s390x.c mini-s390x.h \
	support-s390x.h exceptions-s390x.c tramp-s390x.c mini-sparc.c \
	mini-sparc.h exceptions-sparc.c tramp-sparc.c mini-wasm.c \
	mini-wasm.h exceptions-wasm.c tramp-wasm.c mini-x86.c \
	mini-x86.h exceptions-x86.c tramp-x86.c mini-x86-gsharedvt.c \
	tramp-x86-gsharedvt.c mini-darwin.c mini-posix.c \
	mini-windows.c mini-windows.h mini-windows-dllmain.c \
	mini-windows-dlldac.c
am__objects_20 = libmini_la-mini.lo libmini_la-mini-runtime.lo \
	libmini_la-seq-points.lo libmini_la-method-to-ir.lo \
	libmini_la-cfgdump.lo libmini_la-decompose.lo \
	libmini_la-jit-icalls.lo libmini_la-trace.lo \
	libmini_la-dominators.lo libmini_la-cfold.lo \
	libmini_la-helpers.lo libmini_la-liveness.lo libmini_la-ssa.lo \
	libmini_la-abcremoval.lo libmini_la-local-propagation.lo \
	libmini_la-driver.lo libmini_la-debug-mini.lo \
	libmini_la-linear-scan.lo libmini_la-aot-compiler.lo \
	libmini_la-aot-runtime.lo libmini_la-aot-runtime-wasm.lo \
	libmini_la-graph.lo libmini_la-mini-codegen.lo \
	libmini_la-mini-exceptions.lo libmini_la-mini-trampolines.lo \
	libmini_la-branch-opts.lo libmini_la-mini-generic-sharing.lo \
	libmini_la-tasklets.lo libmini_la-simd-intrinsics.lo \
	libmini_la-mini-native-types.lo libmini_la-unwind.lo \
	libmini_la-image-writer.lo libmini_la-dwarfwriter.lo \
	libmini_la-mini-gc.lo libmini_la-debugger-agent.lo \
	libmini_la-xdebug.lo libmini_la-alias-analysis.lo \
	libmini_la-mini-cross-helpers.lo libmini_la-arch-stubs.lo \
	libmini_la-type-checking.lo libmini_la-lldb.lo \
	libmini_la-memory-access.lo libmini_la-mini-profiler.lo
#am__objects_21 =  \
#	libmini_la-mini-llvm.lo \
#	libmini_la-mini-llvm-loaded.lo \
#	mini-llvm-cpp.lo \
#	llvm-jit.lo
##am__objects_21 = libmini_la-mini-llvm-loaded.lo
am__objects_22 =  \
	interp/libmini_la-interp.lo \
	interp/libmini_la-mintops.lo \
	interp/libmini_la-transform.lo
#am__objects_22 =  \
#	interp/libmini_la-interp-stubs.lo
am__objects_23 = libmini_la-mini-amd64.lo \
	libmini_la-exceptions-amd64.lo libmini_la-tramp-amd64.lo \
	libmini_la-mini-amd64-gsharedvt.lo \
	libmini_la-tramp-amd64-gsharedvt.lo
am__objects_24 = libmini_la-mini-arm64.lo \
	libmini_la-exceptions-arm64.lo libmini_la-tramp-arm64.lo \
	libmini_la-mini-arm64-gsharedvt.lo \
	libmini_la-tramp-arm64-gsharedvt.lo
am__objects_25 = libmini_la-mini-arm.lo libmini_la-exceptions-arm.lo \
	libmini_la-tramp-arm.lo libmini_la-mini-arm-gsharedvt.lo \
	libmini_la-tramp-arm-gsharedvt.lo
am__objects_26 = libmini_la-mini-mips.lo libmini_la-exceptions-mips.lo \
	libmini_la-tramp-mips.lo
am__objects_27 = libmini_la-mini-ppc.lo libmini_la-exceptions-ppc.lo \
	libmini_la-tramp-ppc.lo
am__objects_28 = libmini_la-mini-s390x.lo \
	libmini_la-exceptions-s390x.lo libmini_la-tramp-s390x.lo
am__objects_29 = libmini_la-mini-sparc.lo \
	libmini_la-exceptions-sparc.lo libmini_la-tramp-sparc.lo
am__objects_30 = libmini_la-mini-wasm.lo libmini_la-exceptions-wasm.lo \
	libmini_la-tramp-wasm.lo
am__objects_31 = libmini_la-mini-x86.lo libmini_la-exceptions-x86.lo \
	libmini_la-tramp-x86.lo libmini_la-mini-x86-gsharedvt.lo \
	libmini_la-tramp-x86-gsharedvt.lo
##am__objects_32 = $(am__objects_31)
##am__objects_32 = $(am__objects_30)
##am__objects_32 = $(am__objects_29)
##am__objects_32 = $(am__objects_29)
##am__objects_32 = $(am__objects_28)
##am__objects_32 = $(am__objects_27)
##am__objects_32 = $(am__objects_27)
##am__objects_32 = $(am__objects_26)
##am__objects_32 =  \
##	$(am__objects_25)
##am__objects_32 = $(am__objects_24)
am__objects_32 = $(am__objects_23)
am__objects_33 = libmini_la-mini-darwin.lo
am__objects_34 = libmini_la-mini-posix.lo
am__objects_35 = libmini_la-mini-windows.lo \
	libmini_la-mini-windows-dllmain.lo \
	libmini_la-mini-windows-dlldac.lo
##am__objects_36 = $(am__objects_35)
##am__objects_36 =  \
##	$(am__objects_34)
am__objects_36 = $(am__objects_33) $(am__objects_34)
am_libmini_la_OBJECTS = $(am__objects_20) $(am__objects_21) \
	$(am__objects_3) $(am__objects_22) $(am__objects_32) \
	$(am__objects_36)
libmini_la_OBJECTS = $(am_libmini_la_OBJECTS)
am_libmini_la_rpath =
#am_libmini_la_rpath =
am__DEPENDENCIES_2 =
am__DEPENDENCIES_3 =  \
	$(monodir)/libgc/libmonogc.la
am__DEPENDENCIES_4 = $(monodir)/mono/metadata/libmonoruntime.la \
	$(monodir)/mono/utils/libmonoutils.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3)
##am__DEPENDENCIES_5 = $(top_builddir)/mono/mini/libmonoboehm-$(API_VER).la \
##	$(am__DEPENDENCIES_4)
#libmono_llvm_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2) \
#	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_5)
am__libmono_llvm_la_SOURCES_DIST = mini-llvm.c mini-llvm-cpp.cpp \
	llvm-jit.cpp
#am_libmono_llvm_la_OBJECTS = mini-llvm.lo \
#	mini-llvm-cpp.lo llvm-jit.lo
libmono_llvm_la_OBJECTS = $(am_libmono_llvm_la_OBJECTS)
libmono_llvm_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libmono_llvm_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libmono_llvm_la_rpath = -rpath $(libdir)
#am__DEPENDENCIES_6 =  \
#	.libs/mono-dtrace.$(OBJEXT)
am__DEPENDENCIES_7 = $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2)
libmonoboehm_2_0_la_DEPENDENCIES = libmini.la $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_7)
am_libmonoboehm_2_0_la_OBJECTS =
libmonoboehm_2_0_la_OBJECTS = $(am_libmonoboehm_2_0_la_OBJECTS)
libmonoboehm_2_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libmonoboehm_2_0_la_CFLAGS) $(CFLAGS) \
	$(libmonoboehm_2_0_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libmonoboehm_2_0_la_rpath = -rpath \
#	$(libdir)
##am_libmonoboehm_2_0_la_rpath =  \
##	-rpath $(libdir)
am__DEPENDENCIES_8 = $(monodir)/mono/metadata/libmonoruntimesgen.la \
	$(monodir)/mono/sgen/libmonosgen.la \
	$(monodir)/mono/utils/libmonoutils.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2)
libmonosgen_2_0_la_DEPENDENCIES = libmini.la $(am__DEPENDENCIES_8) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_7)
am_libmonosgen_2_0_la_OBJECTS =
libmonosgen_2_0_la_OBJECTS = $(am_libmonosgen_2_0_la_OBJECTS)
libmonosgen_2_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libmonosgen_2_0_la_CFLAGS) $(CFLAGS) \
	$(libmonosgen_2_0_la_LDFLAGS) $(LDFLAGS) -o $@
am_libmonosgen_2_0_la_rpath = -rpath \
	$(libdir)
#am_libmonosgen_2_0_la_rpath =  \
#	-rpath $(libdir)
#am__EXEEXT_1 = mono-boehm$(EXEEXT)
am__EXEEXT_2 = mono-sgen$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_genmdesc_OBJECTS = genmdesc-genmdesc.$(OBJEXT) \
	genmdesc-helpers.$(OBJEXT) \
	../metadata/genmdesc-opcodes.$(OBJEXT)
genmdesc_OBJECTS = $(am_genmdesc_OBJECTS)
genmdesc_DEPENDENCIES = $(monodir)/mono/utils/libmonoutils.la \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2)
genmdesc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(genmdesc_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_mono_OBJECTS = mono-main-sgen.$(OBJEXT)
mono_OBJECTS = $(am_mono_OBJECTS)
mono_LDADD = $(LDADD)
mono_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mono_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_mono_boehm_OBJECTS = mono_boehm-main.$(OBJEXT)
mono_boehm_OBJECTS = $(am_mono_boehm_OBJECTS)
am__DEPENDENCIES_9 =  \
	$(monodir)/libgc/libmonogc-static.la
am__DEPENDENCIES_10 =  \
	$(monodir)/mono/metadata/libmonoruntime-static.la \
	$(monodir)/mono/utils/libmonoutils.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_9)
#am__DEPENDENCIES_11 = libmini-static.la \
#	$(am__DEPENDENCIES_10)
#am__DEPENDENCIES_12 = libmonoboehm-2.0.la
am__DEPENDENCIES_12 = $(am__DEPENDENCIES_11)
mono_boehm_DEPENDENCIES = $(am__DEPENDENCIES_12) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
mono_boehm_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mono_boehm_CFLAGS) \
	$(CFLAGS) $(mono_boehm_LDFLAGS) $(LDFLAGS) -o $@
am_mono_sgen_OBJECTS = mono_sgen-main-sgen.$(OBJEXT)
mono_sgen_OBJECTS = $(am_mono_sgen_OBJECTS)
am__DEPENDENCIES_13 =  \
	$(monodir)/mono/metadata/libmonoruntimesgen-static.la \
	$(monodir)/mono/sgen/libmonosgen-static.la \
	$(monodir)/mono/utils/libmonoutils.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2)
am__DEPENDENCIES_14 = libmini-static.la \
	$(am__DEPENDENCIES_13)
#am__DEPENDENCIES_15 = libmonosgen-2.0.la
am__DEPENDENCIES_15 = $(am__DEPENDENCIES_14)
mono_sgen_DEPENDENCIES = $(am__DEPENDENCIES_15) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
mono_sgen_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mono_sgen_CFLAGS) \
	$(CFLAGS) $(mono_sgen_LDFLAGS) $(LDFLAGS) -o $@
am__monow_SOURCES_DIST = main-sgen.c main.c
am__objects_37 = main-sgen.$(OBJEXT)
am__objects_38 = main.$(OBJEXT)
#am_monow_OBJECTS =  \
#	$(am__objects_37)
##am_monow_OBJECTS =  \
##	$(am__objects_38)
monow_OBJECTS = $(am_monow_OBJECTS)
am__DEPENDENCIES_16 = $(am__DEPENDENCIES_15) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_17 = $(am__DEPENDENCIES_12) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
#monow_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_16)
##monow_DEPENDENCIES =  \
##	$(am__DEPENDENCIES_17)
monow_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(monow_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libmini_static_la_SOURCES) $(libmini_la_SOURCES) \
	$(libmono_llvm_la_SOURCES) $(libmonoboehm_2_0_la_SOURCES) \
	$(libmonosgen_2_0_la_SOURCES) $(genmdesc_SOURCES) \
	$(mono_SOURCES) $(mono_boehm_SOURCES) $(mono_sgen_SOURCES) \
	$(monow_SOURCES)
DIST_SOURCES = $(am__libmini_static_la_SOURCES_DIST) \
	$(am__libmini_la_SOURCES_DIST) \
	$(am__libmono_llvm_la_SOURCES_DIST) \
	$(libmonoboehm_2_0_la_SOURCES) $(libmonosgen_2_0_la_SOURCES) \
	$(genmdesc_SOURCES) $(mono_SOURCES) $(mono_boehm_SOURCES) \
	$(mono_sgen_SOURCES) $(am__monow_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(libmonoinclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/akyte/mono/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AOT_BUILD_FLAGS = 
AOT_RUN_FLAGS = 
API_VER = 2.0
AR = ar
AS = as
AUTOCONF = ${SHELL} /Users/akyte/mono/missing autoconf
AUTOHEADER = ${SHELL} /Users/akyte/mono/missing autoheader
AUTOMAKE = ${SHELL} /Users/akyte/mono/missing automake-1.15
AWK = awk
BOEHM_DEFINES = 
BREAKPOINT = G_STMT_START { __asm__ ("int $03"); } G_STMT_END
BTLS_ARCH = 
BTLS_CFLAGS =  
BTLS_CMAKE_ARGS =  -DBTLS_ARCH="x86_64"
BTLS_PLATFORM = x86_64
BTLS_ROOT = /Users/akyte/mono/external/boringssl
BUILD_EXEEXT = 
CC = cc
CCAS = cc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = cc
CFLAGS =  -std=gnu99 -fno-strict-aliasing -fwrapv -DMONO_DLL_EXPORT -g -Wall -Wunused -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes  -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-cast-qual -Wwrite-strings -Wno-switch -Wno-switch-enum -Wno-unused-value -Wno-attributes -Wno-format-zero-length -Qunused-arguments -Wno-unused-function -Wno-tautological-compare -Wno-parentheses-equality -Wno-self-assign -Wno-return-stack-address -Wno-constant-logical-operand -Wno-zero-length-array -Werror-implicit-function-declaration
CFLAGS_FOR_BUILD = 
CMAKE = /usr/local/bin/cmake
CPP = cc -E
CPPFLAGS =  -D_THREAD_SAFE -DGC_MACOSX_THREADS -DUSE_MMAP -DUSE_MUNMAP -g -Wall -Wunused -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes  -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-cast-qual -Wwrite-strings -Wno-switch -Wno-switch-enum -Wno-unused-value -Wno-attributes -Wno-format-zero-length -Qunused-arguments -Wno-unused-function -Wno-tautological-compare -Wno-parentheses-equality -Wno-self-assign -Wno-return-stack-address -Wno-constant-logical-operand -Wno-zero-length-array 
CSC = /Users/akyte/mono/external/roslyn-binaries/Microsoft.Net.Compilers/Microsoft.Net.Compilers.2.6.0/tools/csc.exe
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =   -fvisibility=hidden
CYGPATH_W = echo
DEFAULT_PROFILE = net_4_x
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOLT_BASH = /bin/bash
DSYMUTIL = dsymutil
DTRACE = /usr/sbin/dtrace
DTRACEFLAGS = -64
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GDKX11 = libgdk-x11-2.0.dylib
GETTEXT_MACRO_VERSION = 0.18
GINT_TO_POINTER = ((gpointer)(glong) (v))
GLIB_CFLAGS = -I$(top_srcdir)/mono/eglib -I$(top_builddir)/mono/eglib
GLIB_LIBS = $(top_builddir)/mono/eglib/libeglib.la -lm
GMSGFMT = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgfmt
GMSGFMT_015 = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgfmt
GNUC_NORETURN = __attribute__((__noreturn__))
GNUC_PRETTY = 
GNUC_UNUSED = __attribute__((__unused__))
GPOINTER_TO_INT = ((gint)(long) (ptr))
GPOINTER_TO_UINT = ((guint)(long) (ptr))
GREP = /usr/bin/grep
GSIZE = long
GSIZE_FORMAT = "lu"
GTKX11 = libgtk-x11-2.0.dylib
GUINT_TO_POINTER = ((gpointer)(gulong) (v))
G_GINT32_FORMAT = 
G_GINT64_FORMAT = 
G_GUINT32_FORMAT = 
G_GUINT64_FORMAT = 
G_HAVE_ISO_VARARGS = 0
HAVE_ALLOCA_H = 1
HAVE_MSGFMT = 
HOST_CC = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTL = libintl.dylib
INVARIANT_AOT_OPTIONS = nimt-trampolines=2000,ntrampolines=9000,nrgctx-fetch-trampolines=256,ngsharedvt-trampolines=4000
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBC = libc.dylib
LIBGC_CPPFLAGS = 
LIBGC_LIBS = 
LIBGC_STATIC_LIBS = 
LIBICONV = -liconv
LIBMONO_LA = libmonosgen-2.0.la
LIBOBJS = 
LIBS = -liconv   -lpthread
LIBTOOL = $(top_builddir)/doltlibtool
LIPO = lipo
LLVM_CFLAGS = 
LLVM_CONFIG = 
LLVM_CXXFLAGS = 
LLVM_LDFLAGS = 
LLVM_LIBS = 
LN_S = ln -s
LTCOMPILE = $(top_builddir)/doltcompile $(COMPILE)
LTCXXCOMPILE = $(top_builddir)/doltcompile $(CXXCOMPILE)
LTLIBICONV = -liconv
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /Users/akyte/mono/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /Users/akyte/mono/install-sh -c -d
MONO_CORLIB_VERSION = 1050900001
MONO_DL_NEED_USCORE = 0
MSGFMT = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgfmt
MSGFMT_015 = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgfmt
MSGMERGE = /Library/Frameworks/Mono.framework/Versions/Current/bin//msgmerge
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
ORDER = G_LITTLE_ENDIAN
OS = UNIX
OTOOL = otool
OTOOL64 = :
PACKAGE = mono
PACKAGE_BUGREPORT = http://bugzilla.xamarin.com/enter_bug.cgi?classification=Mono
PACKAGE_NAME = mono
PACKAGE_STRING = mono 5.9.0
PACKAGE_TARNAME = mono
PACKAGE_URL = 
PACKAGE_VERSION = 5.9.0
PATHSEP = /
PATH_SEPARATOR = :
PIDTYPE = int
PKG_CONFIG = /Library/Frameworks/Mono.framework/Versions/Current/bin//pkg-config
PLATFORM_AOT_SUFFIX = .dylib
RANLIB = ranlib -no_warning_for_no_symbols
SEARCHSEP = :
SED = /usr/bin/sed
SET_MAKE = 
SGEN_DEFINES = -DHAVE_SGEN_GC
SHARED_CFLAGS = -fvisibility=hidden
SHELL = /bin/sh
SIZEOF_VOID_P = 8
SQLITE = libsqlite.0.dylib
SQLITE3 = libsqlite3.0.dylib
STRIP = strip
TEST_PROFILE = default
USE_NLS = no
VERSION = 5.9.0
VTUNE_CFLAGS = 
VTUNE_LIBS = 
WERROR_CFLAGS = 
X11 = libX11.dylib
XATTR_LIB = 
XGETTEXT = /Library/Frameworks/Mono.framework/Versions/Current/bin//xgettext
XGETTEXT_015 = /Library/Frameworks/Mono.framework/Versions/Current/bin//xgettext
XGETTEXT_EXTRA_OPTIONS = 
XINERAMA = libXinerama.so.1
XMKMF = 
abs_builddir = /Users/akyte/mono/sdks/builds/desktop-x86_64/mono/mini
abs_srcdir = /Users/akyte/mono/mono/mini
abs_top_builddir = /Users/akyte/mono/sdks/builds/desktop-x86_64
abs_top_srcdir = /Users/akyte/mono
ac_ct_AR = ar
ac_ct_CC = 
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
arch_target = amd64
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin17.2.0
build_alias = 
build_cpu = x86_64
build_os = darwin17.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
docs_dir = 
dvidir = ${docdir}
exec_prefix = ${prefix}
export_ldflags = 
extra_runtime_ldflags = 
host = x86_64-apple-darwin17.2.0
host_alias = x86_64-apple-darwin17.2.0
host_cpu = x86_64
host_os = darwin17.2.0
host_vendor = apple
htmldir = ${docdir}
ikvm_native_dir = 
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/akyte/mono/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libgc_dir = 
libgdiplus_install_loc = libgdiplus.dylib
libgdiplus_loc = 
libmono_cflags = -D_THREAD_SAFE
libmono_ldflags =  -liconv   -lpthread
libsuffix = .dylib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mcs_topdir = /Users/akyte/mono/mcs
mcs_topdir_from_srcdir = $(top_builddir)/mcs
mkdir_p = $(MKDIR_P)
mono_build_root = /Users/akyte/mono/sdks/builds/desktop-x86_64
mono_cfg_dir = /Users/akyte/mono/sdks/builds/desktop-x86_64/runtime/etc
mono_runtime = mono/mini/mono
ninja = no
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/akyte/mono/sdks/out/desktop-x86_64
program_transform_name = s,x,x,
psdir = ${docdir}
reloc_libdir = lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /Users/akyte/mono/mono/mini
subdirs = 
sysconfdir = ${prefix}/etc
target = x86_64-apple-darwin17.2.0
target_alias = 
target_cpu = x86_64
target_os = darwin17.2.0
target_vendor = apple
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = /Users/akyte/mono
count = 100000
mtest = for_loop
monodir = $(top_builddir)
mono = $(if $(MONO_EXECUTABLE),$(MONO_EXECUTABLE),mono)
PLATFORM_PATH_SEPARATOR = :
#PLATFORM_PATH_SEPARATOR = ;
libgc_libs = $(monodir)/libgc/libmonogc.la

# This is needed for automake dependency generation
#libgc_libs = 
libgc_static_libs = $(monodir)/libgc/libmonogc-static.la
#libgc_static_libs = 
boehm_libs = \
	$(monodir)/mono/metadata/libmonoruntime.la	\
	$(monodir)/mono/utils/libmonoutils.la \
	$(GLIB_LIBS) $(LIBICONV) \
	$(libgc_libs)

sgen_libs = \
	$(monodir)/mono/metadata/libmonoruntimesgen.la	\
	$(monodir)/mono/sgen/libmonosgen.la	\
	$(monodir)/mono/utils/libmonoutils.la \
	$(GLIB_LIBS) $(LIBICONV)

boehm_static_libs = \
	$(monodir)/mono/metadata/libmonoruntime-static.la	\
	$(monodir)/mono/utils/libmonoutils.la \
	$(GLIB_LIBS) $(LIBICONV) \
	$(libgc_static_libs)

sgen_static_libs = \
	$(monodir)/mono/metadata/libmonoruntimesgen-static.la	\
	$(monodir)/mono/sgen/libmonosgen-static.la	\
	$(monodir)/mono/utils/libmonoutils.la \
	$(GLIB_LIBS) $(LIBICONV)

MOBILE_RUNTIME_ARG = 

# if the tests are going to run with framework assemblies compiled with
# -d:MOBILE, tell the runtime to remap framework assemblies using the mobile
# runtime info
#MOBILE_RUNTIME_ARG = --runtime=mobile
CLASS = $(mcs_topdir)/class/lib/$(DEFAULT_PROFILE)
RUNTIME_EXECUTABLE = $(if $(BOEHM),$(top_builddir)/mono/mini/mono-boehm,$(top_builddir)/runtime/mono-wrapper)
MINI_RUNTIME = MONO_PATH=$(CLASS) $(RUNTIME_EXECUTABLE) $(MOBILE_RUNTIME_ARG)
TOOLS_RUNTIME = MONO_PATH=$(mcs_topdir)/class/lib/build $(top_builddir)/runtime/mono-wrapper
INTERP_RUNTIME = $(MINI_RUNTIME) --interpreter
RUNTIME_AOTCHECK = MONO_PATH="$(CLASS)$(PLATFORM_PATH_SEPARATOR)." $(RUNTIME_EXECUTABLE)
MCS = CSC_SDK_PATH_DISABLED= $(TOOLS_RUNTIME) $(CSC) -unsafe -nowarn:0162 -nologo -noconfig -r:$(CLASS)/mscorlib.dll -r:$(CLASS)/System.dll -r:$(CLASS)/System.Core.dll
ILASM = $(TOOLS_RUNTIME) $(mcs_topdir)/class/lib/build/ilasm.exe
AM_CFLAGS = \
	-I$(top_srcdir) 	\
	$(GLIB_CFLAGS)		\
	$(LLVM_CFLAGS)		\
	$(PLATFORM_CFLAGS) $(ARCH_CFLAGS) $(SHARED_CFLAGS)

AM_CXXFLAGS = $(LLVM_CXXFLAGS) $(GLIB_CFLAGS)
# The mingw math.h has "extern inline" functions that dont appear in libs, so
# optimisation is required to actually inline them
#PLATFORM_CFLAGS = -O

# hack for automake to have the same source file in a library and a bin
genmdesc_CFLAGS = $(AM_CFLAGS)
monoldflags = $(export_ldflags)
monobinldflags = $(export_ldflags) $(extra_runtime_ldflags)
libmonoldflags = $(monoldflags) \
	-version-info 1:0:0 \
	$(am__append_3)
#libmonoldflags = -avoid-version \
#	$(monoldflags) \
#	$(am__append_3)
#libmonoldflags = -no-undefined -avoid-version \
#	-Wl,--kill-at $(monoldflags) $(am__append_3)
sgen_binaries = mono-sgen
sgen_libraries = libmonosgen-2.0.la
sgen_static_libraries = libmini-static.la $(sgen_static_libs)
#boehm_libraries = libmonoboehm-2.0.la
#boehm_static_libraries = libmini-static.la $(boehm_static_libs)
#boehm_binaries = mono-boehm
#mono_bin_suffix = boehm
mono_bin_suffix = sgen
#libmono_suffix = boehm
libmono_suffix = sgen
shared_libraries = $(boehm_libraries) $(sgen_libraries)
#shared_libraries = $(boehm_libraries) $(sgen_libraries)
lib_LTLIBRARIES = $(shared_libraries) $(am__append_1)
#mini_common_lib = 
mini_common_lib = libmini.la
noinst_LTLIBRARIES = $(mini_common_lib) libmini-static.la
#noinst_LTLIBRARIES = $(mini_common_lib)
#libmono_llvm_la_SOURCES = mini-llvm.c mini-llvm-cpp.cpp llvm-jit.cpp
#libmono_llvm_la_LIBADD = $(GLIB_LIBS) $(LLVM_LIBS) \
#	$(LLVM_LDFLAGS) $(am__append_2)
#libmono_llvm_la_LDFLAGS = -Wl,-undefined -Wl,suppress -Wl,-flat_namespace
mono_boehm_SOURCES = \
	main.c

mono_CFLAGS = $(AM_CFLAGS)
mono_boehm_CFLAGS = $(AM_CFLAGS)
AM_CPPFLAGS = $(LIBGC_CPPFLAGS)
mono_sgen_SOURCES = \
	main-sgen.c

mono_SOURCES = \
	main-sgen.c

mono_sgen_CFLAGS = $(AM_CFLAGS)
LIBMONO_DTRACE_OBJECT = 
#LIBMONO_DTRACE_OBJECT = .libs/mono-dtrace.$(OBJEXT)
MONO_DTRACE_OBJECT = 
##MONO_DTRACE_OBJECT = 
#MONO_DTRACE_OBJECT = mono-dtrace.$(OBJEXT)
#MONO_LIB = libmonoboehm-2.0.la

# Link libmono into mono statically
# This leads to higher performance, especially with TLS
MONO_LIB = $(boehm_static_libraries)
#MONO_SGEN_LIB = libmonosgen-2.0.la
MONO_SGEN_LIB = $(sgen_static_libraries)
LLVMMONOF = $(LLVM_LIBS) $(LLVM_LDFLAGS)
#LLVMMONOF = 
mono_boehm_LDADD = \
	$(MONO_LIB)		\
	$(GLIB_LIBS)		\
	$(LLVMMONOF)		\
	$(LIBICONV)		\
	-lm			\
	$(MONO_DTRACE_OBJECT)

mono_boehm_LDFLAGS = \
	$(static_flags) -export-dynamic $(monobinldflags) $(monobin_platform_ldflags)

mono_sgen_LDADD = \
	$(MONO_SGEN_LIB)	\
	$(GLIB_LIBS)		\
	$(LLVMMONOF)		\
	$(LIBICONV)		\
	-lm			\
	$(MONO_DTRACE_OBJECT)

mono_sgen_LDFLAGS = $(static_flags) -export-dynamic $(monobinldflags) $(monobin_platform_ldflags)
#monow_LDADD = $(mono_sgen_LDADD)

# Create monow.exe, linked for the 'windows' subsystem
##monow_LDADD = $(mono_boehm_LDADD)
#monow_LDFLAGS = $(mono_sgen_LDFLAGS) -mwindows
##monow_LDFLAGS = $(mono_boehm_LDFLAGS) -mwindows
#monow_SOURCES = $(mono_sgen_SOURCES)
##monow_SOURCES = $(mono_boehm_SOURCES)
genmdesc_SOURCES = \
	mini.h		\
	seq-points.h	\
	genmdesc.c	\
	helpers.c	\
	../metadata/opcodes.c


# Don't link this against libmonoruntime to speed up rebuilds
genmdesc_LDADD = \
	$(monodir)/mono/utils/libmonoutils.la -lm	\
	$(GLIB_LIBS)					\
	$(LIBICONV)

wasm_sources = \
	mini-wasm.c		\
	mini-wasm.h		\
	exceptions-wasm.c	\
	tramp-wasm.c

x86_sources = \
	mini-x86.c		\
	mini-x86.h		\
	exceptions-x86.c	\
	tramp-x86.c	\
	mini-x86-gsharedvt.c	\
	tramp-x86-gsharedvt.c

amd64_sources = \
	mini-amd64.c		\
	mini-amd64.h		\
	exceptions-amd64.c	\
	tramp-amd64.c	\
	mini-amd64-gsharedvt.c	\
	mini-amd64-gsharedvt.h	\
	tramp-amd64-gsharedvt.c

ppc_sources = \
	mini-ppc.c		\
	mini-ppc.h		\
	exceptions-ppc.c	\
	tramp-ppc.c

arm_sources = \
	mini-arm.c		\
	mini-arm.h		\
	exceptions-arm.c	\
	tramp-arm.c	\
	mini-arm-gsharedvt.c	\
	tramp-arm-gsharedvt.c

arm64_sources = \
	mini-arm64.c		\
	mini-arm64.h		\
	exceptions-arm64.c	\
	tramp-arm64.c	\
	mini-arm64-gsharedvt.c	\
	mini-arm64-gsharedvt.h	\
	tramp-arm64-gsharedvt.c

mips_sources = \
	mini-mips.c		\
	mini-mips.h		\
	exceptions-mips.c	\
	tramp-mips.c

sparc_sources = \
	mini-sparc.c		\
	mini-sparc.h		\
	exceptions-sparc.c	\
	tramp-sparc.c

s390x_sources = \
	mini-s390x.c		\
	mini-s390x.h		\
	support-s390x.h		\
	exceptions-s390x.c	\
	tramp-s390x.c

darwin_sources = \
	mini-darwin.c

windows_sources = \
	mini-windows.c \
	mini-windows.h \
	mini-windows-dllmain.c \
	mini-windows-dlldac.c

posix_sources = \
	mini-posix.c

#llvm_sources = \
#	mini-llvm.c		\
#	mini-llvm-loaded.c \
#	mini-llvm-cpp.cpp \
#	llvm-jit.cpp

##llvm_sources = \
##	mini-llvm-loaded.c

interp_sources = \
	interp/hacks.h		\
	interp/interp.h	\
	interp/interp-internals.h	\
	interp/interp.c	\
	interp/mintops.h	\
	interp/mintops.def	\
	interp/mintops.c	\
	interp/transform.c

#interp_sources = \
#	interp/interp.h	\
#	interp/interp-stubs.c

#llvm_runtime_sources = \
#	llvm-runtime.cpp

#llvm_runtime_sources = \
#	llvm-runtime.cpp

common_sources = \
	mini.c			\
	mini-runtime.c	\
	seq-points.c	\
	seq-points.h	\
	ir-emit.h		\
	method-to-ir.c		\
	cfgdump.h		\
	cfgdump.c		\
	decompose.c		\
	mini.h			\
	version.h		\
	optflags-def.h		\
	jit-icalls.h 		\
	jit-icalls.c 		\
	trace.c			\
	trace.h			\
	patch-info.h		\
	mini-ops.h		\
	mini-arch.h		\
	dominators.c		\
	cfold.c			\
	regalloc.h		\
	helpers.c		\
	liveness.c		\
	ssa.c			\
	abcremoval.c		\
	abcremoval.h		\
	local-propagation.c	\
	driver.c		\
	debug-mini.c		\
	linear-scan.c		\
	aot-compiler.h		\
	aot-compiler.c		\
	aot-runtime.c		\
	aot-runtime-wasm.c	\
	graph.c			\
	mini-codegen.c		\
	mini-exceptions.c	\
	mini-trampolines.c  	\
	branch-opts.c		\
	mini-generic-sharing.c	\
	simd-methods.h		\
	tasklets.c		\
	tasklets.h		\
	simd-intrinsics.c	\
	mini-native-types.c \
	mini-unwind.h		\
	unwind.c		\
	image-writer.h		\
	image-writer.c		\
	dwarfwriter.h		\
	dwarfwriter.c		\
	mini-gc.h		\
	mini-gc.c		\
	debugger-agent.h 	\
	debugger-agent.c	\
	xdebug.c			\
	mini-llvm.h			\
	mini-llvm-cpp.h	\
	llvm-jit.h		\
	alias-analysis.c	\
	mini-cross-helpers.c \
	arch-stubs.c		\
	llvm-runtime.h	\
	type-checking.c \
	lldb.h			\
	lldb.c	\
	memory-access.c	\
	mini-profiler.c

test_sources = \
	basic-calls.cs 		\
	basic-long.cs 		\
	bench.cs 		\
	builtin-types.cs 	\
	objects.cs 		\
	arrays.cs		\
	basic-float.cs		\
	basic-math.cs		\
	basic.cs		\
	exceptions.cs		\
	devirtualization.cs	\
	iltests.il		\
	test.cs			\
	generics.cs		\
	generics-variant-types.il\
	basic-simd.cs \
	basic-vectors.cs \
	aot-tests.cs \
	gc-test.cs \
	gshared.cs \
	unaligned.cs	\
	MemoryIntrinsics.il	\
	mixed.cs	\
	ratests.cs

regtests_UNIVERSAL = \
	aot-tests.exe \
	basic.exe \
	basic-float.exe \
	basic-long.exe \
	basic-calls.exe \
	builtin-types.exe \
	gshared.exe \
	objects.exe \
	arrays.exe \
	basic-math.exe \
	exceptions.exe \
	iltests.exe \
	devirtualization.exe \
	generics.exe \
	basic-simd.exe \
	unaligned.exe	\
	basic-vectors.exe	\
	ratests.exe

regtests_DISABLED = $(am__append_4)
regtests = $(filter-out $(regtests_DISABLED),$(regtests_UNIVERSAL))
arch_sources = $(amd64_sources)
#arch_sources = $(arm64_sources)
#arch_sources = $(arm_sources)
#arch_sources = $(mips_sources)
#arch_sources = $(ppc_sources)
#arch_sources = $(ppc_sources)
#arch_sources = $(s390x_sources)
#arch_sources = $(sparc_sources)
#arch_sources = $(sparc_sources)
#arch_sources = $(wasm_sources)
#arch_sources = $(x86_sources)
arch_built = cpu-amd64.h
#arch_built = cpu-arm64.h
#arch_built = cpu-arm.h
#arch_built = cpu-mips.h
#arch_built = cpu-ppc64.h
#arch_built = cpu-ppc.h
#arch_built = cpu-s390x.h
#arch_built = cpu-sparc.h
#arch_built = cpu-sparc.h
#arch_built = cpu-wasm.h
#arch_built = cpu-x86.h
arch_define = __x86_64__
#arch_define = __aarch64__
#arch_define = __arm__
#arch_define = __mips__
#arch_define = __ppc64__
#arch_define = __ppc__
#arch_define = __s390__
#arch_define = __sparc__
#arch_define = __sparc__
#arch_define = __wasm__
#arch_define = __i386__
ARCH_FULLAOT_EXCLUDE = 

# pick up arm_dpimacros.h
#ARCH_CFLAGS = -I../arch/arm
os_sources = $(darwin_sources) $(posix_sources)
#os_sources = $(posix_sources)
#os_sources = $(windows_sources)
#monobin_platform_ldflags=-sectcreate __TEXT __info_plist $(top_srcdir)/mono/mini/Info.plist -framework CoreFoundation -framework Foundation
monobin_platform_ldflags = -framework CoreFoundation -framework Foundation
#monobin_platform_ldflags = 
#monobin_platform_ldflags = 
libmini_la_SOURCES = $(common_sources) $(llvm_sources) $(llvm_runtime_sources) $(interp_sources) $(arch_sources) $(os_sources)
libmini_la_CFLAGS = $(mono_CFLAGS)
libmonoboehm_2_0_la_SOURCES = 
libmonoboehm_2_0_la_CFLAGS = $(mono_boehm_CFLAGS)
libmonoboehm_2_0_la_LIBADD = libmini.la $(boehm_libs) $(LIBMONO_DTRACE_OBJECT) $(LLVMMONOF)
libmonoboehm_2_0_la_LDFLAGS = $(libmonoldflags) $(monobin_platform_ldflags)
libmonosgen_2_0_la_SOURCES = 
libmonosgen_2_0_la_CFLAGS = $(mono_sgen_CFLAGS)
libmonosgen_2_0_la_LIBADD = libmini.la $(sgen_libs) $(LIBMONO_DTRACE_OBJECT) $(LLVMMONOF)
libmonosgen_2_0_la_LDFLAGS = $(libmonoldflags) $(monobin_platform_ldflags)

#
# This library is shared between mono and mono-sgen, since the code in mini/ doesn't contain
# compile time dependencies on boehm/sgen.
#
libmini_static_la_SOURCES = $(libmini_la_SOURCES)
libmini_static_la_CFLAGS = $(AM_CFLAGS)
libmini_static_la_LDFLAGS = -static
libmini_static_la_LIBADD = $(MONO_DTRACE_OBJECT)
libmonoincludedir = $(includedir)/mono-$(API_VER)/mono/jit
libmonoinclude_HEADERS = jit.h
CSFLAGS = -unsafe -nowarn:0219,0169,0414,0649,0618
GENMDESC_OPTS = 
GENMDESC_PRG = ./genmdesc $(GENMDESC_OPTS)
#GENMDESC_PRG = perl $(srcdir)/genmdesc.pl $(arch_define) $(srcdir) $(GENMDESC_OPTS)

# we don't always use the perl impl because it's an additional
# build dependency for the poor windows users
# $(arch_define) is the preprocessor symbol that enables all the opcodes
# for the specific platform in mini-ops.h
#GENMDESC_PRG = perl $(srcdir)/genmdesc.pl $(arch_define) $(srcdir) $(GENMDESC_OPTS)
LLVM_AOT_RUNTIME_OPTS = $(if $(LLVM),--llvm,)
GSHAREDVT_RUNTIME_OPTS = $(if $(GSHAREDVT),-O=gsharedvt,)
fullaot_regtests = $(regtests)
fullaot_testing_deps = generics-variant-types.dll TestDriver.dll MemoryIntrinsics.dll
FULLAOT_LIBS_UNIVERSAL = \
	mscorlib.dll \
	System.Core.dll \
	System.dll \
	System.Xml.dll \
	System.Security.dll \
	Mono.Simd.dll \
	Mono.Security.dll \
	System.Numerics.dll \
	System.Numerics.Vectors.dll \
	Mono.Posix.dll \
	System.Configuration.dll

FULLAOT_LIBS_DISABLED = $(am__append_5)
FULLAOT_LIBS = $(filter-out $(FULLAOT_LIBS_DISABLED),$(FULLAOT_LIBS_UNIVERSAL))
FULLAOT_TMP_DIR = $(top_builddir)/mono/mini/fullaot-tmp
llvmonly_regtests = $(fullaot_regtests) gshared.exe

# We need these because automake can't process normal make conditionals
check_local_targets = $(if $(EMIT_NUNIT), rcheck-nunit, rcheck)
pkgconfigdir = $(libdir)/pkgconfig
BUILT_SOURCES = version.h $(arch_built)
CLEANFILES = $(BUILT_SOURCES) *.exe *.dll
EXTRA_DIST = TestDriver.cs \
	TestHelpers.cs \
	genmdesc.pl				\
	$(test_sources) 			\
	$(wasm_sources) cpu-wasm.md 		\
	$(x86_sources) cpu-x86.md 		\
	$(amd64_sources) cpu-amd64.md 		\
	$(ppc_sources) cpu-ppc.md cpu-ppc64.md 	\
	$(arm_sources) cpu-arm.md 		\
	$(arm64_sources) cpu-arm64.md 		\
	$(mips_sources) cpu-mips.md 		\
	$(sparc_sources) cpu-sparc.md 		\
	$(s390x_sources) cpu-s390x.md 		\
	$(windows_sources)			\
	$(darwin_sources) Info.plist		\
	$(posix_sources)					\
	test_op_il_seq_point.sh			\
	test_op_il_seq_point_headerfooter.sh	\
	Makefile.am.in

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign mono/mini/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign mono/mini/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
interp/$(am__dirstamp):
	@$(MKDIR_P) interp
	@: > interp/$(am__dirstamp)
interp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) interp/$(DEPDIR)
	@: > interp/$(DEPDIR)/$(am__dirstamp)
interp/libmini_static_la-interp.lo: interp/$(am__dirstamp) \
	interp/$(DEPDIR)/$(am__dirstamp)
interp/libmini_static_la-mintops.lo: interp/$(am__dirstamp) \
	interp/$(DEPDIR)/$(am__dirstamp)
interp/libmini_static_la-transform.lo: interp/$(am__dirstamp) \
	interp/$(DEPDIR)/$(am__dirstamp)
interp/libmini_static_la-interp-stubs.lo: interp/$(am__dirstamp) \
	interp/$(DEPDIR)/$(am__dirstamp)

libmini-static.la: $(libmini_static_la_OBJECTS) $(libmini_static_la_DEPENDENCIES) $(EXTRA_libmini_static_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libmini_static_la_LINK) $(am_libmini_static_la_rpath) $(libmini_static_la_OBJECTS) $(libmini_static_la_LIBADD) $(LIBS)
interp/libmini_la-interp.lo: interp/$(am__dirstamp) \
	interp/$(DEPDIR)/$(am__dirstamp)
interp/libmini_la-mintops.lo: interp/$(am__dirstamp) \
	interp/$(DEPDIR)/$(am__dirstamp)
interp/libmini_la-transform.lo: interp/$(am__dirstamp) \
	interp/$(DEPDIR)/$(am__dirstamp)
interp/libmini_la-interp-stubs.lo: interp/$(am__dirstamp) \
	interp/$(DEPDIR)/$(am__dirstamp)

libmini.la: $(libmini_la_OBJECTS) $(libmini_la_DEPENDENCIES) $(EXTRA_libmini_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) $(am_libmini_la_rpath) $(libmini_la_OBJECTS) $(libmini_la_LIBADD) $(LIBS)

libmono-llvm.la: $(libmono_llvm_la_OBJECTS) $(libmono_llvm_la_DEPENDENCIES) $(EXTRA_libmono_llvm_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libmono_llvm_la_LINK) $(am_libmono_llvm_la_rpath) $(libmono_llvm_la_OBJECTS) $(libmono_llvm_la_LIBADD) $(LIBS)

libmonoboehm-2.0.la: $(libmonoboehm_2_0_la_OBJECTS) $(libmonoboehm_2_0_la_DEPENDENCIES) $(EXTRA_libmonoboehm_2_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmonoboehm_2_0_la_LINK) $(am_libmonoboehm_2_0_la_rpath) $(libmonoboehm_2_0_la_OBJECTS) $(libmonoboehm_2_0_la_LIBADD) $(LIBS)

libmonosgen-2.0.la: $(libmonosgen_2_0_la_OBJECTS) $(libmonosgen_2_0_la_DEPENDENCIES) $(EXTRA_libmonosgen_2_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmonosgen_2_0_la_LINK) $(am_libmonosgen_2_0_la_rpath) $(libmonosgen_2_0_la_OBJECTS) $(libmonosgen_2_0_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
../metadata/$(am__dirstamp):
	@$(MKDIR_P) ../metadata
	@: > ../metadata/$(am__dirstamp)
../metadata/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../metadata/$(DEPDIR)
	@: > ../metadata/$(DEPDIR)/$(am__dirstamp)
../metadata/genmdesc-opcodes.$(OBJEXT): ../metadata/$(am__dirstamp) \
	../metadata/$(DEPDIR)/$(am__dirstamp)

genmdesc$(EXEEXT): $(genmdesc_OBJECTS) $(genmdesc_DEPENDENCIES) $(EXTRA_genmdesc_DEPENDENCIES) 
	@rm -f genmdesc$(EXEEXT)
	$(AM_V_CCLD)$(genmdesc_LINK) $(genmdesc_OBJECTS) $(genmdesc_LDADD) $(LIBS)

#mono$(EXEEXT): $(mono_OBJECTS) $(mono_DEPENDENCIES) $(EXTRA_mono_DEPENDENCIES) 
#	@rm -f mono$(EXEEXT)
#	$(AM_V_CCLD)$(mono_LINK) $(mono_OBJECTS) $(mono_LDADD) $(LIBS)

mono-boehm$(EXEEXT): $(mono_boehm_OBJECTS) $(mono_boehm_DEPENDENCIES) $(EXTRA_mono_boehm_DEPENDENCIES) 
	@rm -f mono-boehm$(EXEEXT)
	$(AM_V_CCLD)$(mono_boehm_LINK) $(mono_boehm_OBJECTS) $(mono_boehm_LDADD) $(LIBS)

mono-sgen$(EXEEXT): $(mono_sgen_OBJECTS) $(mono_sgen_DEPENDENCIES) $(EXTRA_mono_sgen_DEPENDENCIES) 
	@rm -f mono-sgen$(EXEEXT)
	$(AM_V_CCLD)$(mono_sgen_LINK) $(mono_sgen_OBJECTS) $(mono_sgen_LDADD) $(LIBS)

monow$(EXEEXT): $(monow_OBJECTS) $(monow_DEPENDENCIES) $(EXTRA_monow_DEPENDENCIES) 
	@rm -f monow$(EXEEXT)
	$(AM_V_CCLD)$(monow_LINK) $(monow_OBJECTS) $(monow_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../metadata/*.$(OBJEXT)
	-rm -f interp/*.$(OBJEXT)
	-rm -f interp/*.lo

distclean-compile:
	-rm -f *.tab.c

include ../metadata/$(DEPDIR)/genmdesc-opcodes.Po
include ./$(DEPDIR)/genmdesc-genmdesc.Po
include ./$(DEPDIR)/genmdesc-helpers.Po
include ./$(DEPDIR)/libmini_la-abcremoval.Plo
include ./$(DEPDIR)/libmini_la-alias-analysis.Plo
include ./$(DEPDIR)/libmini_la-aot-compiler.Plo
include ./$(DEPDIR)/libmini_la-aot-runtime-wasm.Plo
include ./$(DEPDIR)/libmini_la-aot-runtime.Plo
include ./$(DEPDIR)/libmini_la-arch-stubs.Plo
include ./$(DEPDIR)/libmini_la-branch-opts.Plo
include ./$(DEPDIR)/libmini_la-cfgdump.Plo
include ./$(DEPDIR)/libmini_la-cfold.Plo
include ./$(DEPDIR)/libmini_la-debug-mini.Plo
include ./$(DEPDIR)/libmini_la-debugger-agent.Plo
include ./$(DEPDIR)/libmini_la-decompose.Plo
include ./$(DEPDIR)/libmini_la-dominators.Plo
include ./$(DEPDIR)/libmini_la-driver.Plo
include ./$(DEPDIR)/libmini_la-dwarfwriter.Plo
include ./$(DEPDIR)/libmini_la-exceptions-amd64.Plo
include ./$(DEPDIR)/libmini_la-exceptions-arm.Plo
include ./$(DEPDIR)/libmini_la-exceptions-arm64.Plo
include ./$(DEPDIR)/libmini_la-exceptions-mips.Plo
include ./$(DEPDIR)/libmini_la-exceptions-ppc.Plo
include ./$(DEPDIR)/libmini_la-exceptions-s390x.Plo
include ./$(DEPDIR)/libmini_la-exceptions-sparc.Plo
include ./$(DEPDIR)/libmini_la-exceptions-wasm.Plo
include ./$(DEPDIR)/libmini_la-exceptions-x86.Plo
include ./$(DEPDIR)/libmini_la-graph.Plo
include ./$(DEPDIR)/libmini_la-helpers.Plo
include ./$(DEPDIR)/libmini_la-image-writer.Plo
include ./$(DEPDIR)/libmini_la-jit-icalls.Plo
include ./$(DEPDIR)/libmini_la-linear-scan.Plo
include ./$(DEPDIR)/libmini_la-liveness.Plo
include ./$(DEPDIR)/libmini_la-lldb.Plo
include ./$(DEPDIR)/libmini_la-local-propagation.Plo
include ./$(DEPDIR)/libmini_la-memory-access.Plo
include ./$(DEPDIR)/libmini_la-method-to-ir.Plo
include ./$(DEPDIR)/libmini_la-mini-amd64-gsharedvt.Plo
include ./$(DEPDIR)/libmini_la-mini-amd64.Plo
include ./$(DEPDIR)/libmini_la-mini-arm-gsharedvt.Plo
include ./$(DEPDIR)/libmini_la-mini-arm.Plo
include ./$(DEPDIR)/libmini_la-mini-arm64-gsharedvt.Plo
include ./$(DEPDIR)/libmini_la-mini-arm64.Plo
include ./$(DEPDIR)/libmini_la-mini-codegen.Plo
include ./$(DEPDIR)/libmini_la-mini-cross-helpers.Plo
include ./$(DEPDIR)/libmini_la-mini-darwin.Plo
include ./$(DEPDIR)/libmini_la-mini-exceptions.Plo
include ./$(DEPDIR)/libmini_la-mini-gc.Plo
include ./$(DEPDIR)/libmini_la-mini-generic-sharing.Plo
include ./$(DEPDIR)/libmini_la-mini-llvm-loaded.Plo
include ./$(DEPDIR)/libmini_la-mini-llvm.Plo
include ./$(DEPDIR)/libmini_la-mini-mips.Plo
include ./$(DEPDIR)/libmini_la-mini-native-types.Plo
include ./$(DEPDIR)/libmini_la-mini-posix.Plo
include ./$(DEPDIR)/libmini_la-mini-ppc.Plo
include ./$(DEPDIR)/libmini_la-mini-profiler.Plo
include ./$(DEPDIR)/libmini_la-mini-runtime.Plo
include ./$(DEPDIR)/libmini_la-mini-s390x.Plo
include ./$(DEPDIR)/libmini_la-mini-sparc.Plo
include ./$(DEPDIR)/libmini_la-mini-trampolines.Plo
include ./$(DEPDIR)/libmini_la-mini-wasm.Plo
include ./$(DEPDIR)/libmini_la-mini-windows-dlldac.Plo
include ./$(DEPDIR)/libmini_la-mini-windows-dllmain.Plo
include ./$(DEPDIR)/libmini_la-mini-windows.Plo
include ./$(DEPDIR)/libmini_la-mini-x86-gsharedvt.Plo
include ./$(DEPDIR)/libmini_la-mini-x86.Plo
include ./$(DEPDIR)/libmini_la-mini.Plo
include ./$(DEPDIR)/libmini_la-seq-points.Plo
include ./$(DEPDIR)/libmini_la-simd-intrinsics.Plo
include ./$(DEPDIR)/libmini_la-ssa.Plo
include ./$(DEPDIR)/libmini_la-tasklets.Plo
include ./$(DEPDIR)/libmini_la-trace.Plo
include ./$(DEPDIR)/libmini_la-tramp-amd64-gsharedvt.Plo
include ./$(DEPDIR)/libmini_la-tramp-amd64.Plo
include ./$(DEPDIR)/libmini_la-tramp-arm-gsharedvt.Plo
include ./$(DEPDIR)/libmini_la-tramp-arm.Plo
include ./$(DEPDIR)/libmini_la-tramp-arm64-gsharedvt.Plo
include ./$(DEPDIR)/libmini_la-tramp-arm64.Plo
include ./$(DEPDIR)/libmini_la-tramp-mips.Plo
include ./$(DEPDIR)/libmini_la-tramp-ppc.Plo
include ./$(DEPDIR)/libmini_la-tramp-s390x.Plo
include ./$(DEPDIR)/libmini_la-tramp-sparc.Plo
include ./$(DEPDIR)/libmini_la-tramp-wasm.Plo
include ./$(DEPDIR)/libmini_la-tramp-x86-gsharedvt.Plo
include ./$(DEPDIR)/libmini_la-tramp-x86.Plo
include ./$(DEPDIR)/libmini_la-type-checking.Plo
include ./$(DEPDIR)/libmini_la-unwind.Plo
include ./$(DEPDIR)/libmini_la-xdebug.Plo
include ./$(DEPDIR)/libmini_static_la-abcremoval.Plo
include ./$(DEPDIR)/libmini_static_la-alias-analysis.Plo
include ./$(DEPDIR)/libmini_static_la-aot-compiler.Plo
include ./$(DEPDIR)/libmini_static_la-aot-runtime-wasm.Plo
include ./$(DEPDIR)/libmini_static_la-aot-runtime.Plo
include ./$(DEPDIR)/libmini_static_la-arch-stubs.Plo
include ./$(DEPDIR)/libmini_static_la-branch-opts.Plo
include ./$(DEPDIR)/libmini_static_la-cfgdump.Plo
include ./$(DEPDIR)/libmini_static_la-cfold.Plo
include ./$(DEPDIR)/libmini_static_la-debug-mini.Plo
include ./$(DEPDIR)/libmini_static_la-debugger-agent.Plo
include ./$(DEPDIR)/libmini_static_la-decompose.Plo
include ./$(DEPDIR)/libmini_static_la-dominators.Plo
include ./$(DEPDIR)/libmini_static_la-driver.Plo
include ./$(DEPDIR)/libmini_static_la-dwarfwriter.Plo
include ./$(DEPDIR)/libmini_static_la-exceptions-amd64.Plo
include ./$(DEPDIR)/libmini_static_la-exceptions-arm.Plo
include ./$(DEPDIR)/libmini_static_la-exceptions-arm64.Plo
include ./$(DEPDIR)/libmini_static_la-exceptions-mips.Plo
include ./$(DEPDIR)/libmini_static_la-exceptions-ppc.Plo
include ./$(DEPDIR)/libmini_static_la-exceptions-s390x.Plo
include ./$(DEPDIR)/libmini_static_la-exceptions-sparc.Plo
include ./$(DEPDIR)/libmini_static_la-exceptions-wasm.Plo
include ./$(DEPDIR)/libmini_static_la-exceptions-x86.Plo
include ./$(DEPDIR)/libmini_static_la-graph.Plo
include ./$(DEPDIR)/libmini_static_la-helpers.Plo
include ./$(DEPDIR)/libmini_static_la-image-writer.Plo
include ./$(DEPDIR)/libmini_static_la-jit-icalls.Plo
include ./$(DEPDIR)/libmini_static_la-linear-scan.Plo
include ./$(DEPDIR)/libmini_static_la-liveness.Plo
include ./$(DEPDIR)/libmini_static_la-lldb.Plo
include ./$(DEPDIR)/libmini_static_la-local-propagation.Plo
include ./$(DEPDIR)/libmini_static_la-memory-access.Plo
include ./$(DEPDIR)/libmini_static_la-method-to-ir.Plo
include ./$(DEPDIR)/libmini_static_la-mini-amd64-gsharedvt.Plo
include ./$(DEPDIR)/libmini_static_la-mini-amd64.Plo
include ./$(DEPDIR)/libmini_static_la-mini-arm-gsharedvt.Plo
include ./$(DEPDIR)/libmini_static_la-mini-arm.Plo
include ./$(DEPDIR)/libmini_static_la-mini-arm64-gsharedvt.Plo
include ./$(DEPDIR)/libmini_static_la-mini-arm64.Plo
include ./$(DEPDIR)/libmini_static_la-mini-codegen.Plo
include ./$(DEPDIR)/libmini_static_la-mini-cross-helpers.Plo
include ./$(DEPDIR)/libmini_static_la-mini-darwin.Plo
include ./$(DEPDIR)/libmini_static_la-mini-exceptions.Plo
include ./$(DEPDIR)/libmini_static_la-mini-gc.Plo
include ./$(DEPDIR)/libmini_static_la-mini-generic-sharing.Plo
include ./$(DEPDIR)/libmini_static_la-mini-llvm-loaded.Plo
include ./$(DEPDIR)/libmini_static_la-mini-llvm.Plo
include ./$(DEPDIR)/libmini_static_la-mini-mips.Plo
include ./$(DEPDIR)/libmini_static_la-mini-native-types.Plo
include ./$(DEPDIR)/libmini_static_la-mini-posix.Plo
include ./$(DEPDIR)/libmini_static_la-mini-ppc.Plo
include ./$(DEPDIR)/libmini_static_la-mini-profiler.Plo
include ./$(DEPDIR)/libmini_static_la-mini-runtime.Plo
include ./$(DEPDIR)/libmini_static_la-mini-s390x.Plo
include ./$(DEPDIR)/libmini_static_la-mini-sparc.Plo
include ./$(DEPDIR)/libmini_static_la-mini-trampolines.Plo
include ./$(DEPDIR)/libmini_static_la-mini-wasm.Plo
include ./$(DEPDIR)/libmini_static_la-mini-windows-dlldac.Plo
include ./$(DEPDIR)/libmini_static_la-mini-windows-dllmain.Plo
include ./$(DEPDIR)/libmini_static_la-mini-windows.Plo
include ./$(DEPDIR)/libmini_static_la-mini-x86-gsharedvt.Plo
include ./$(DEPDIR)/libmini_static_la-mini-x86.Plo
include ./$(DEPDIR)/libmini_static_la-mini.Plo
include ./$(DEPDIR)/libmini_static_la-seq-points.Plo
include ./$(DEPDIR)/libmini_static_la-simd-intrinsics.Plo
include ./$(DEPDIR)/libmini_static_la-ssa.Plo
include ./$(DEPDIR)/libmini_static_la-tasklets.Plo
include ./$(DEPDIR)/libmini_static_la-trace.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-amd64-gsharedvt.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-amd64.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-arm-gsharedvt.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-arm.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-arm64-gsharedvt.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-arm64.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-mips.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-ppc.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-s390x.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-sparc.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-wasm.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-x86-gsharedvt.Plo
include ./$(DEPDIR)/libmini_static_la-tramp-x86.Plo
include ./$(DEPDIR)/libmini_static_la-type-checking.Plo
include ./$(DEPDIR)/libmini_static_la-unwind.Plo
include ./$(DEPDIR)/libmini_static_la-xdebug.Plo
include ./$(DEPDIR)/llvm-jit.Plo
include ./$(DEPDIR)/llvm-runtime.Plo
include ./$(DEPDIR)/main-sgen.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/mini-llvm-cpp.Plo
include ./$(DEPDIR)/mini-llvm.Plo
include ./$(DEPDIR)/mono-main-sgen.Po
include ./$(DEPDIR)/mono_boehm-main.Po
include ./$(DEPDIR)/mono_sgen-main-sgen.Po
include interp/$(DEPDIR)/libmini_la-interp-stubs.Plo
include interp/$(DEPDIR)/libmini_la-interp.Plo
include interp/$(DEPDIR)/libmini_la-mintops.Plo
include interp/$(DEPDIR)/libmini_la-transform.Plo
include interp/$(DEPDIR)/libmini_static_la-interp-stubs.Plo
include interp/$(DEPDIR)/libmini_static_la-interp.Plo
include interp/$(DEPDIR)/libmini_static_la-mintops.Plo
include interp/$(DEPDIR)/libmini_static_la-transform.Plo

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libmini_static_la-mini.lo: mini.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini.Tpo -c -o libmini_static_la-mini.lo `test -f 'mini.c' || echo '$(srcdir)/'`mini.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini.Tpo $(DEPDIR)/libmini_static_la-mini.Plo
#	$(AM_V_CC)source='mini.c' object='libmini_static_la-mini.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini.lo `test -f 'mini.c' || echo '$(srcdir)/'`mini.c

libmini_static_la-mini-runtime.lo: mini-runtime.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-runtime.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-runtime.Tpo -c -o libmini_static_la-mini-runtime.lo `test -f 'mini-runtime.c' || echo '$(srcdir)/'`mini-runtime.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-runtime.Tpo $(DEPDIR)/libmini_static_la-mini-runtime.Plo
#	$(AM_V_CC)source='mini-runtime.c' object='libmini_static_la-mini-runtime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-runtime.lo `test -f 'mini-runtime.c' || echo '$(srcdir)/'`mini-runtime.c

libmini_static_la-seq-points.lo: seq-points.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-seq-points.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-seq-points.Tpo -c -o libmini_static_la-seq-points.lo `test -f 'seq-points.c' || echo '$(srcdir)/'`seq-points.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-seq-points.Tpo $(DEPDIR)/libmini_static_la-seq-points.Plo
#	$(AM_V_CC)source='seq-points.c' object='libmini_static_la-seq-points.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-seq-points.lo `test -f 'seq-points.c' || echo '$(srcdir)/'`seq-points.c

libmini_static_la-method-to-ir.lo: method-to-ir.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-method-to-ir.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-method-to-ir.Tpo -c -o libmini_static_la-method-to-ir.lo `test -f 'method-to-ir.c' || echo '$(srcdir)/'`method-to-ir.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-method-to-ir.Tpo $(DEPDIR)/libmini_static_la-method-to-ir.Plo
#	$(AM_V_CC)source='method-to-ir.c' object='libmini_static_la-method-to-ir.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-method-to-ir.lo `test -f 'method-to-ir.c' || echo '$(srcdir)/'`method-to-ir.c

libmini_static_la-cfgdump.lo: cfgdump.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-cfgdump.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-cfgdump.Tpo -c -o libmini_static_la-cfgdump.lo `test -f 'cfgdump.c' || echo '$(srcdir)/'`cfgdump.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-cfgdump.Tpo $(DEPDIR)/libmini_static_la-cfgdump.Plo
#	$(AM_V_CC)source='cfgdump.c' object='libmini_static_la-cfgdump.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-cfgdump.lo `test -f 'cfgdump.c' || echo '$(srcdir)/'`cfgdump.c

libmini_static_la-decompose.lo: decompose.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-decompose.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-decompose.Tpo -c -o libmini_static_la-decompose.lo `test -f 'decompose.c' || echo '$(srcdir)/'`decompose.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-decompose.Tpo $(DEPDIR)/libmini_static_la-decompose.Plo
#	$(AM_V_CC)source='decompose.c' object='libmini_static_la-decompose.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-decompose.lo `test -f 'decompose.c' || echo '$(srcdir)/'`decompose.c

libmini_static_la-jit-icalls.lo: jit-icalls.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-jit-icalls.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-jit-icalls.Tpo -c -o libmini_static_la-jit-icalls.lo `test -f 'jit-icalls.c' || echo '$(srcdir)/'`jit-icalls.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-jit-icalls.Tpo $(DEPDIR)/libmini_static_la-jit-icalls.Plo
#	$(AM_V_CC)source='jit-icalls.c' object='libmini_static_la-jit-icalls.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-jit-icalls.lo `test -f 'jit-icalls.c' || echo '$(srcdir)/'`jit-icalls.c

libmini_static_la-trace.lo: trace.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-trace.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-trace.Tpo -c -o libmini_static_la-trace.lo `test -f 'trace.c' || echo '$(srcdir)/'`trace.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-trace.Tpo $(DEPDIR)/libmini_static_la-trace.Plo
#	$(AM_V_CC)source='trace.c' object='libmini_static_la-trace.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-trace.lo `test -f 'trace.c' || echo '$(srcdir)/'`trace.c

libmini_static_la-dominators.lo: dominators.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-dominators.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-dominators.Tpo -c -o libmini_static_la-dominators.lo `test -f 'dominators.c' || echo '$(srcdir)/'`dominators.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-dominators.Tpo $(DEPDIR)/libmini_static_la-dominators.Plo
#	$(AM_V_CC)source='dominators.c' object='libmini_static_la-dominators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-dominators.lo `test -f 'dominators.c' || echo '$(srcdir)/'`dominators.c

libmini_static_la-cfold.lo: cfold.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-cfold.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-cfold.Tpo -c -o libmini_static_la-cfold.lo `test -f 'cfold.c' || echo '$(srcdir)/'`cfold.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-cfold.Tpo $(DEPDIR)/libmini_static_la-cfold.Plo
#	$(AM_V_CC)source='cfold.c' object='libmini_static_la-cfold.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-cfold.lo `test -f 'cfold.c' || echo '$(srcdir)/'`cfold.c

libmini_static_la-helpers.lo: helpers.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-helpers.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-helpers.Tpo -c -o libmini_static_la-helpers.lo `test -f 'helpers.c' || echo '$(srcdir)/'`helpers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-helpers.Tpo $(DEPDIR)/libmini_static_la-helpers.Plo
#	$(AM_V_CC)source='helpers.c' object='libmini_static_la-helpers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-helpers.lo `test -f 'helpers.c' || echo '$(srcdir)/'`helpers.c

libmini_static_la-liveness.lo: liveness.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-liveness.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-liveness.Tpo -c -o libmini_static_la-liveness.lo `test -f 'liveness.c' || echo '$(srcdir)/'`liveness.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-liveness.Tpo $(DEPDIR)/libmini_static_la-liveness.Plo
#	$(AM_V_CC)source='liveness.c' object='libmini_static_la-liveness.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-liveness.lo `test -f 'liveness.c' || echo '$(srcdir)/'`liveness.c

libmini_static_la-ssa.lo: ssa.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-ssa.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-ssa.Tpo -c -o libmini_static_la-ssa.lo `test -f 'ssa.c' || echo '$(srcdir)/'`ssa.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-ssa.Tpo $(DEPDIR)/libmini_static_la-ssa.Plo
#	$(AM_V_CC)source='ssa.c' object='libmini_static_la-ssa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-ssa.lo `test -f 'ssa.c' || echo '$(srcdir)/'`ssa.c

libmini_static_la-abcremoval.lo: abcremoval.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-abcremoval.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-abcremoval.Tpo -c -o libmini_static_la-abcremoval.lo `test -f 'abcremoval.c' || echo '$(srcdir)/'`abcremoval.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-abcremoval.Tpo $(DEPDIR)/libmini_static_la-abcremoval.Plo
#	$(AM_V_CC)source='abcremoval.c' object='libmini_static_la-abcremoval.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-abcremoval.lo `test -f 'abcremoval.c' || echo '$(srcdir)/'`abcremoval.c

libmini_static_la-local-propagation.lo: local-propagation.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-local-propagation.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-local-propagation.Tpo -c -o libmini_static_la-local-propagation.lo `test -f 'local-propagation.c' || echo '$(srcdir)/'`local-propagation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-local-propagation.Tpo $(DEPDIR)/libmini_static_la-local-propagation.Plo
#	$(AM_V_CC)source='local-propagation.c' object='libmini_static_la-local-propagation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-local-propagation.lo `test -f 'local-propagation.c' || echo '$(srcdir)/'`local-propagation.c

libmini_static_la-driver.lo: driver.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-driver.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-driver.Tpo -c -o libmini_static_la-driver.lo `test -f 'driver.c' || echo '$(srcdir)/'`driver.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-driver.Tpo $(DEPDIR)/libmini_static_la-driver.Plo
#	$(AM_V_CC)source='driver.c' object='libmini_static_la-driver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-driver.lo `test -f 'driver.c' || echo '$(srcdir)/'`driver.c

libmini_static_la-debug-mini.lo: debug-mini.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-debug-mini.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-debug-mini.Tpo -c -o libmini_static_la-debug-mini.lo `test -f 'debug-mini.c' || echo '$(srcdir)/'`debug-mini.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-debug-mini.Tpo $(DEPDIR)/libmini_static_la-debug-mini.Plo
#	$(AM_V_CC)source='debug-mini.c' object='libmini_static_la-debug-mini.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-debug-mini.lo `test -f 'debug-mini.c' || echo '$(srcdir)/'`debug-mini.c

libmini_static_la-linear-scan.lo: linear-scan.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-linear-scan.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-linear-scan.Tpo -c -o libmini_static_la-linear-scan.lo `test -f 'linear-scan.c' || echo '$(srcdir)/'`linear-scan.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-linear-scan.Tpo $(DEPDIR)/libmini_static_la-linear-scan.Plo
#	$(AM_V_CC)source='linear-scan.c' object='libmini_static_la-linear-scan.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-linear-scan.lo `test -f 'linear-scan.c' || echo '$(srcdir)/'`linear-scan.c

libmini_static_la-aot-compiler.lo: aot-compiler.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-aot-compiler.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-aot-compiler.Tpo -c -o libmini_static_la-aot-compiler.lo `test -f 'aot-compiler.c' || echo '$(srcdir)/'`aot-compiler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-aot-compiler.Tpo $(DEPDIR)/libmini_static_la-aot-compiler.Plo
#	$(AM_V_CC)source='aot-compiler.c' object='libmini_static_la-aot-compiler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-aot-compiler.lo `test -f 'aot-compiler.c' || echo '$(srcdir)/'`aot-compiler.c

libmini_static_la-aot-runtime.lo: aot-runtime.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-aot-runtime.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-aot-runtime.Tpo -c -o libmini_static_la-aot-runtime.lo `test -f 'aot-runtime.c' || echo '$(srcdir)/'`aot-runtime.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-aot-runtime.Tpo $(DEPDIR)/libmini_static_la-aot-runtime.Plo
#	$(AM_V_CC)source='aot-runtime.c' object='libmini_static_la-aot-runtime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-aot-runtime.lo `test -f 'aot-runtime.c' || echo '$(srcdir)/'`aot-runtime.c

libmini_static_la-aot-runtime-wasm.lo: aot-runtime-wasm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-aot-runtime-wasm.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-aot-runtime-wasm.Tpo -c -o libmini_static_la-aot-runtime-wasm.lo `test -f 'aot-runtime-wasm.c' || echo '$(srcdir)/'`aot-runtime-wasm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-aot-runtime-wasm.Tpo $(DEPDIR)/libmini_static_la-aot-runtime-wasm.Plo
#	$(AM_V_CC)source='aot-runtime-wasm.c' object='libmini_static_la-aot-runtime-wasm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-aot-runtime-wasm.lo `test -f 'aot-runtime-wasm.c' || echo '$(srcdir)/'`aot-runtime-wasm.c

libmini_static_la-graph.lo: graph.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-graph.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-graph.Tpo -c -o libmini_static_la-graph.lo `test -f 'graph.c' || echo '$(srcdir)/'`graph.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-graph.Tpo $(DEPDIR)/libmini_static_la-graph.Plo
#	$(AM_V_CC)source='graph.c' object='libmini_static_la-graph.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-graph.lo `test -f 'graph.c' || echo '$(srcdir)/'`graph.c

libmini_static_la-mini-codegen.lo: mini-codegen.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-codegen.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-codegen.Tpo -c -o libmini_static_la-mini-codegen.lo `test -f 'mini-codegen.c' || echo '$(srcdir)/'`mini-codegen.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-codegen.Tpo $(DEPDIR)/libmini_static_la-mini-codegen.Plo
#	$(AM_V_CC)source='mini-codegen.c' object='libmini_static_la-mini-codegen.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-codegen.lo `test -f 'mini-codegen.c' || echo '$(srcdir)/'`mini-codegen.c

libmini_static_la-mini-exceptions.lo: mini-exceptions.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-exceptions.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-exceptions.Tpo -c -o libmini_static_la-mini-exceptions.lo `test -f 'mini-exceptions.c' || echo '$(srcdir)/'`mini-exceptions.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-exceptions.Tpo $(DEPDIR)/libmini_static_la-mini-exceptions.Plo
#	$(AM_V_CC)source='mini-exceptions.c' object='libmini_static_la-mini-exceptions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-exceptions.lo `test -f 'mini-exceptions.c' || echo '$(srcdir)/'`mini-exceptions.c

libmini_static_la-mini-trampolines.lo: mini-trampolines.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-trampolines.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-trampolines.Tpo -c -o libmini_static_la-mini-trampolines.lo `test -f 'mini-trampolines.c' || echo '$(srcdir)/'`mini-trampolines.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-trampolines.Tpo $(DEPDIR)/libmini_static_la-mini-trampolines.Plo
#	$(AM_V_CC)source='mini-trampolines.c' object='libmini_static_la-mini-trampolines.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-trampolines.lo `test -f 'mini-trampolines.c' || echo '$(srcdir)/'`mini-trampolines.c

libmini_static_la-branch-opts.lo: branch-opts.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-branch-opts.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-branch-opts.Tpo -c -o libmini_static_la-branch-opts.lo `test -f 'branch-opts.c' || echo '$(srcdir)/'`branch-opts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-branch-opts.Tpo $(DEPDIR)/libmini_static_la-branch-opts.Plo
#	$(AM_V_CC)source='branch-opts.c' object='libmini_static_la-branch-opts.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-branch-opts.lo `test -f 'branch-opts.c' || echo '$(srcdir)/'`branch-opts.c

libmini_static_la-mini-generic-sharing.lo: mini-generic-sharing.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-generic-sharing.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-generic-sharing.Tpo -c -o libmini_static_la-mini-generic-sharing.lo `test -f 'mini-generic-sharing.c' || echo '$(srcdir)/'`mini-generic-sharing.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-generic-sharing.Tpo $(DEPDIR)/libmini_static_la-mini-generic-sharing.Plo
#	$(AM_V_CC)source='mini-generic-sharing.c' object='libmini_static_la-mini-generic-sharing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-generic-sharing.lo `test -f 'mini-generic-sharing.c' || echo '$(srcdir)/'`mini-generic-sharing.c

libmini_static_la-tasklets.lo: tasklets.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tasklets.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tasklets.Tpo -c -o libmini_static_la-tasklets.lo `test -f 'tasklets.c' || echo '$(srcdir)/'`tasklets.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tasklets.Tpo $(DEPDIR)/libmini_static_la-tasklets.Plo
#	$(AM_V_CC)source='tasklets.c' object='libmini_static_la-tasklets.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tasklets.lo `test -f 'tasklets.c' || echo '$(srcdir)/'`tasklets.c

libmini_static_la-simd-intrinsics.lo: simd-intrinsics.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-simd-intrinsics.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-simd-intrinsics.Tpo -c -o libmini_static_la-simd-intrinsics.lo `test -f 'simd-intrinsics.c' || echo '$(srcdir)/'`simd-intrinsics.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-simd-intrinsics.Tpo $(DEPDIR)/libmini_static_la-simd-intrinsics.Plo
#	$(AM_V_CC)source='simd-intrinsics.c' object='libmini_static_la-simd-intrinsics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-simd-intrinsics.lo `test -f 'simd-intrinsics.c' || echo '$(srcdir)/'`simd-intrinsics.c

libmini_static_la-mini-native-types.lo: mini-native-types.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-native-types.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-native-types.Tpo -c -o libmini_static_la-mini-native-types.lo `test -f 'mini-native-types.c' || echo '$(srcdir)/'`mini-native-types.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-native-types.Tpo $(DEPDIR)/libmini_static_la-mini-native-types.Plo
#	$(AM_V_CC)source='mini-native-types.c' object='libmini_static_la-mini-native-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-native-types.lo `test -f 'mini-native-types.c' || echo '$(srcdir)/'`mini-native-types.c

libmini_static_la-unwind.lo: unwind.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-unwind.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-unwind.Tpo -c -o libmini_static_la-unwind.lo `test -f 'unwind.c' || echo '$(srcdir)/'`unwind.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-unwind.Tpo $(DEPDIR)/libmini_static_la-unwind.Plo
#	$(AM_V_CC)source='unwind.c' object='libmini_static_la-unwind.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-unwind.lo `test -f 'unwind.c' || echo '$(srcdir)/'`unwind.c

libmini_static_la-image-writer.lo: image-writer.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-image-writer.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-image-writer.Tpo -c -o libmini_static_la-image-writer.lo `test -f 'image-writer.c' || echo '$(srcdir)/'`image-writer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-image-writer.Tpo $(DEPDIR)/libmini_static_la-image-writer.Plo
#	$(AM_V_CC)source='image-writer.c' object='libmini_static_la-image-writer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-image-writer.lo `test -f 'image-writer.c' || echo '$(srcdir)/'`image-writer.c

libmini_static_la-dwarfwriter.lo: dwarfwriter.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-dwarfwriter.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-dwarfwriter.Tpo -c -o libmini_static_la-dwarfwriter.lo `test -f 'dwarfwriter.c' || echo '$(srcdir)/'`dwarfwriter.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-dwarfwriter.Tpo $(DEPDIR)/libmini_static_la-dwarfwriter.Plo
#	$(AM_V_CC)source='dwarfwriter.c' object='libmini_static_la-dwarfwriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-dwarfwriter.lo `test -f 'dwarfwriter.c' || echo '$(srcdir)/'`dwarfwriter.c

libmini_static_la-mini-gc.lo: mini-gc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-gc.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-gc.Tpo -c -o libmini_static_la-mini-gc.lo `test -f 'mini-gc.c' || echo '$(srcdir)/'`mini-gc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-gc.Tpo $(DEPDIR)/libmini_static_la-mini-gc.Plo
#	$(AM_V_CC)source='mini-gc.c' object='libmini_static_la-mini-gc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-gc.lo `test -f 'mini-gc.c' || echo '$(srcdir)/'`mini-gc.c

libmini_static_la-debugger-agent.lo: debugger-agent.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-debugger-agent.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-debugger-agent.Tpo -c -o libmini_static_la-debugger-agent.lo `test -f 'debugger-agent.c' || echo '$(srcdir)/'`debugger-agent.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-debugger-agent.Tpo $(DEPDIR)/libmini_static_la-debugger-agent.Plo
#	$(AM_V_CC)source='debugger-agent.c' object='libmini_static_la-debugger-agent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-debugger-agent.lo `test -f 'debugger-agent.c' || echo '$(srcdir)/'`debugger-agent.c

libmini_static_la-xdebug.lo: xdebug.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-xdebug.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-xdebug.Tpo -c -o libmini_static_la-xdebug.lo `test -f 'xdebug.c' || echo '$(srcdir)/'`xdebug.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-xdebug.Tpo $(DEPDIR)/libmini_static_la-xdebug.Plo
#	$(AM_V_CC)source='xdebug.c' object='libmini_static_la-xdebug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-xdebug.lo `test -f 'xdebug.c' || echo '$(srcdir)/'`xdebug.c

libmini_static_la-alias-analysis.lo: alias-analysis.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-alias-analysis.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-alias-analysis.Tpo -c -o libmini_static_la-alias-analysis.lo `test -f 'alias-analysis.c' || echo '$(srcdir)/'`alias-analysis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-alias-analysis.Tpo $(DEPDIR)/libmini_static_la-alias-analysis.Plo
#	$(AM_V_CC)source='alias-analysis.c' object='libmini_static_la-alias-analysis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-alias-analysis.lo `test -f 'alias-analysis.c' || echo '$(srcdir)/'`alias-analysis.c

libmini_static_la-mini-cross-helpers.lo: mini-cross-helpers.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-cross-helpers.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-cross-helpers.Tpo -c -o libmini_static_la-mini-cross-helpers.lo `test -f 'mini-cross-helpers.c' || echo '$(srcdir)/'`mini-cross-helpers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-cross-helpers.Tpo $(DEPDIR)/libmini_static_la-mini-cross-helpers.Plo
#	$(AM_V_CC)source='mini-cross-helpers.c' object='libmini_static_la-mini-cross-helpers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-cross-helpers.lo `test -f 'mini-cross-helpers.c' || echo '$(srcdir)/'`mini-cross-helpers.c

libmini_static_la-arch-stubs.lo: arch-stubs.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-arch-stubs.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-arch-stubs.Tpo -c -o libmini_static_la-arch-stubs.lo `test -f 'arch-stubs.c' || echo '$(srcdir)/'`arch-stubs.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-arch-stubs.Tpo $(DEPDIR)/libmini_static_la-arch-stubs.Plo
#	$(AM_V_CC)source='arch-stubs.c' object='libmini_static_la-arch-stubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-arch-stubs.lo `test -f 'arch-stubs.c' || echo '$(srcdir)/'`arch-stubs.c

libmini_static_la-type-checking.lo: type-checking.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-type-checking.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-type-checking.Tpo -c -o libmini_static_la-type-checking.lo `test -f 'type-checking.c' || echo '$(srcdir)/'`type-checking.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-type-checking.Tpo $(DEPDIR)/libmini_static_la-type-checking.Plo
#	$(AM_V_CC)source='type-checking.c' object='libmini_static_la-type-checking.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-type-checking.lo `test -f 'type-checking.c' || echo '$(srcdir)/'`type-checking.c

libmini_static_la-lldb.lo: lldb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-lldb.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-lldb.Tpo -c -o libmini_static_la-lldb.lo `test -f 'lldb.c' || echo '$(srcdir)/'`lldb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-lldb.Tpo $(DEPDIR)/libmini_static_la-lldb.Plo
#	$(AM_V_CC)source='lldb.c' object='libmini_static_la-lldb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-lldb.lo `test -f 'lldb.c' || echo '$(srcdir)/'`lldb.c

libmini_static_la-memory-access.lo: memory-access.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-memory-access.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-memory-access.Tpo -c -o libmini_static_la-memory-access.lo `test -f 'memory-access.c' || echo '$(srcdir)/'`memory-access.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-memory-access.Tpo $(DEPDIR)/libmini_static_la-memory-access.Plo
#	$(AM_V_CC)source='memory-access.c' object='libmini_static_la-memory-access.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-memory-access.lo `test -f 'memory-access.c' || echo '$(srcdir)/'`memory-access.c

libmini_static_la-mini-profiler.lo: mini-profiler.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-profiler.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-profiler.Tpo -c -o libmini_static_la-mini-profiler.lo `test -f 'mini-profiler.c' || echo '$(srcdir)/'`mini-profiler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-profiler.Tpo $(DEPDIR)/libmini_static_la-mini-profiler.Plo
#	$(AM_V_CC)source='mini-profiler.c' object='libmini_static_la-mini-profiler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-profiler.lo `test -f 'mini-profiler.c' || echo '$(srcdir)/'`mini-profiler.c

libmini_static_la-mini-llvm.lo: mini-llvm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-llvm.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-llvm.Tpo -c -o libmini_static_la-mini-llvm.lo `test -f 'mini-llvm.c' || echo '$(srcdir)/'`mini-llvm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-llvm.Tpo $(DEPDIR)/libmini_static_la-mini-llvm.Plo
#	$(AM_V_CC)source='mini-llvm.c' object='libmini_static_la-mini-llvm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-llvm.lo `test -f 'mini-llvm.c' || echo '$(srcdir)/'`mini-llvm.c

libmini_static_la-mini-llvm-loaded.lo: mini-llvm-loaded.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-llvm-loaded.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-llvm-loaded.Tpo -c -o libmini_static_la-mini-llvm-loaded.lo `test -f 'mini-llvm-loaded.c' || echo '$(srcdir)/'`mini-llvm-loaded.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-llvm-loaded.Tpo $(DEPDIR)/libmini_static_la-mini-llvm-loaded.Plo
#	$(AM_V_CC)source='mini-llvm-loaded.c' object='libmini_static_la-mini-llvm-loaded.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-llvm-loaded.lo `test -f 'mini-llvm-loaded.c' || echo '$(srcdir)/'`mini-llvm-loaded.c

interp/libmini_static_la-interp.lo: interp/interp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT interp/libmini_static_la-interp.lo -MD -MP -MF interp/$(DEPDIR)/libmini_static_la-interp.Tpo -c -o interp/libmini_static_la-interp.lo `test -f 'interp/interp.c' || echo '$(srcdir)/'`interp/interp.c
	$(AM_V_at)$(am__mv) interp/$(DEPDIR)/libmini_static_la-interp.Tpo interp/$(DEPDIR)/libmini_static_la-interp.Plo
#	$(AM_V_CC)source='interp/interp.c' object='interp/libmini_static_la-interp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o interp/libmini_static_la-interp.lo `test -f 'interp/interp.c' || echo '$(srcdir)/'`interp/interp.c

interp/libmini_static_la-mintops.lo: interp/mintops.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT interp/libmini_static_la-mintops.lo -MD -MP -MF interp/$(DEPDIR)/libmini_static_la-mintops.Tpo -c -o interp/libmini_static_la-mintops.lo `test -f 'interp/mintops.c' || echo '$(srcdir)/'`interp/mintops.c
	$(AM_V_at)$(am__mv) interp/$(DEPDIR)/libmini_static_la-mintops.Tpo interp/$(DEPDIR)/libmini_static_la-mintops.Plo
#	$(AM_V_CC)source='interp/mintops.c' object='interp/libmini_static_la-mintops.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o interp/libmini_static_la-mintops.lo `test -f 'interp/mintops.c' || echo '$(srcdir)/'`interp/mintops.c

interp/libmini_static_la-transform.lo: interp/transform.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT interp/libmini_static_la-transform.lo -MD -MP -MF interp/$(DEPDIR)/libmini_static_la-transform.Tpo -c -o interp/libmini_static_la-transform.lo `test -f 'interp/transform.c' || echo '$(srcdir)/'`interp/transform.c
	$(AM_V_at)$(am__mv) interp/$(DEPDIR)/libmini_static_la-transform.Tpo interp/$(DEPDIR)/libmini_static_la-transform.Plo
#	$(AM_V_CC)source='interp/transform.c' object='interp/libmini_static_la-transform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o interp/libmini_static_la-transform.lo `test -f 'interp/transform.c' || echo '$(srcdir)/'`interp/transform.c

interp/libmini_static_la-interp-stubs.lo: interp/interp-stubs.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT interp/libmini_static_la-interp-stubs.lo -MD -MP -MF interp/$(DEPDIR)/libmini_static_la-interp-stubs.Tpo -c -o interp/libmini_static_la-interp-stubs.lo `test -f 'interp/interp-stubs.c' || echo '$(srcdir)/'`interp/interp-stubs.c
	$(AM_V_at)$(am__mv) interp/$(DEPDIR)/libmini_static_la-interp-stubs.Tpo interp/$(DEPDIR)/libmini_static_la-interp-stubs.Plo
#	$(AM_V_CC)source='interp/interp-stubs.c' object='interp/libmini_static_la-interp-stubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o interp/libmini_static_la-interp-stubs.lo `test -f 'interp/interp-stubs.c' || echo '$(srcdir)/'`interp/interp-stubs.c

libmini_static_la-mini-amd64.lo: mini-amd64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-amd64.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-amd64.Tpo -c -o libmini_static_la-mini-amd64.lo `test -f 'mini-amd64.c' || echo '$(srcdir)/'`mini-amd64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-amd64.Tpo $(DEPDIR)/libmini_static_la-mini-amd64.Plo
#	$(AM_V_CC)source='mini-amd64.c' object='libmini_static_la-mini-amd64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-amd64.lo `test -f 'mini-amd64.c' || echo '$(srcdir)/'`mini-amd64.c

libmini_static_la-exceptions-amd64.lo: exceptions-amd64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-exceptions-amd64.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-exceptions-amd64.Tpo -c -o libmini_static_la-exceptions-amd64.lo `test -f 'exceptions-amd64.c' || echo '$(srcdir)/'`exceptions-amd64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-exceptions-amd64.Tpo $(DEPDIR)/libmini_static_la-exceptions-amd64.Plo
#	$(AM_V_CC)source='exceptions-amd64.c' object='libmini_static_la-exceptions-amd64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-exceptions-amd64.lo `test -f 'exceptions-amd64.c' || echo '$(srcdir)/'`exceptions-amd64.c

libmini_static_la-tramp-amd64.lo: tramp-amd64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-amd64.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-amd64.Tpo -c -o libmini_static_la-tramp-amd64.lo `test -f 'tramp-amd64.c' || echo '$(srcdir)/'`tramp-amd64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-amd64.Tpo $(DEPDIR)/libmini_static_la-tramp-amd64.Plo
#	$(AM_V_CC)source='tramp-amd64.c' object='libmini_static_la-tramp-amd64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-amd64.lo `test -f 'tramp-amd64.c' || echo '$(srcdir)/'`tramp-amd64.c

libmini_static_la-mini-amd64-gsharedvt.lo: mini-amd64-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-amd64-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-amd64-gsharedvt.Tpo -c -o libmini_static_la-mini-amd64-gsharedvt.lo `test -f 'mini-amd64-gsharedvt.c' || echo '$(srcdir)/'`mini-amd64-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-amd64-gsharedvt.Tpo $(DEPDIR)/libmini_static_la-mini-amd64-gsharedvt.Plo
#	$(AM_V_CC)source='mini-amd64-gsharedvt.c' object='libmini_static_la-mini-amd64-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-amd64-gsharedvt.lo `test -f 'mini-amd64-gsharedvt.c' || echo '$(srcdir)/'`mini-amd64-gsharedvt.c

libmini_static_la-tramp-amd64-gsharedvt.lo: tramp-amd64-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-amd64-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-amd64-gsharedvt.Tpo -c -o libmini_static_la-tramp-amd64-gsharedvt.lo `test -f 'tramp-amd64-gsharedvt.c' || echo '$(srcdir)/'`tramp-amd64-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-amd64-gsharedvt.Tpo $(DEPDIR)/libmini_static_la-tramp-amd64-gsharedvt.Plo
#	$(AM_V_CC)source='tramp-amd64-gsharedvt.c' object='libmini_static_la-tramp-amd64-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-amd64-gsharedvt.lo `test -f 'tramp-amd64-gsharedvt.c' || echo '$(srcdir)/'`tramp-amd64-gsharedvt.c

libmini_static_la-mini-arm64.lo: mini-arm64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-arm64.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-arm64.Tpo -c -o libmini_static_la-mini-arm64.lo `test -f 'mini-arm64.c' || echo '$(srcdir)/'`mini-arm64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-arm64.Tpo $(DEPDIR)/libmini_static_la-mini-arm64.Plo
#	$(AM_V_CC)source='mini-arm64.c' object='libmini_static_la-mini-arm64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-arm64.lo `test -f 'mini-arm64.c' || echo '$(srcdir)/'`mini-arm64.c

libmini_static_la-exceptions-arm64.lo: exceptions-arm64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-exceptions-arm64.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-exceptions-arm64.Tpo -c -o libmini_static_la-exceptions-arm64.lo `test -f 'exceptions-arm64.c' || echo '$(srcdir)/'`exceptions-arm64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-exceptions-arm64.Tpo $(DEPDIR)/libmini_static_la-exceptions-arm64.Plo
#	$(AM_V_CC)source='exceptions-arm64.c' object='libmini_static_la-exceptions-arm64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-exceptions-arm64.lo `test -f 'exceptions-arm64.c' || echo '$(srcdir)/'`exceptions-arm64.c

libmini_static_la-tramp-arm64.lo: tramp-arm64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-arm64.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-arm64.Tpo -c -o libmini_static_la-tramp-arm64.lo `test -f 'tramp-arm64.c' || echo '$(srcdir)/'`tramp-arm64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-arm64.Tpo $(DEPDIR)/libmini_static_la-tramp-arm64.Plo
#	$(AM_V_CC)source='tramp-arm64.c' object='libmini_static_la-tramp-arm64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-arm64.lo `test -f 'tramp-arm64.c' || echo '$(srcdir)/'`tramp-arm64.c

libmini_static_la-mini-arm64-gsharedvt.lo: mini-arm64-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-arm64-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-arm64-gsharedvt.Tpo -c -o libmini_static_la-mini-arm64-gsharedvt.lo `test -f 'mini-arm64-gsharedvt.c' || echo '$(srcdir)/'`mini-arm64-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-arm64-gsharedvt.Tpo $(DEPDIR)/libmini_static_la-mini-arm64-gsharedvt.Plo
#	$(AM_V_CC)source='mini-arm64-gsharedvt.c' object='libmini_static_la-mini-arm64-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-arm64-gsharedvt.lo `test -f 'mini-arm64-gsharedvt.c' || echo '$(srcdir)/'`mini-arm64-gsharedvt.c

libmini_static_la-tramp-arm64-gsharedvt.lo: tramp-arm64-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-arm64-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-arm64-gsharedvt.Tpo -c -o libmini_static_la-tramp-arm64-gsharedvt.lo `test -f 'tramp-arm64-gsharedvt.c' || echo '$(srcdir)/'`tramp-arm64-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-arm64-gsharedvt.Tpo $(DEPDIR)/libmini_static_la-tramp-arm64-gsharedvt.Plo
#	$(AM_V_CC)source='tramp-arm64-gsharedvt.c' object='libmini_static_la-tramp-arm64-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-arm64-gsharedvt.lo `test -f 'tramp-arm64-gsharedvt.c' || echo '$(srcdir)/'`tramp-arm64-gsharedvt.c

libmini_static_la-mini-arm.lo: mini-arm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-arm.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-arm.Tpo -c -o libmini_static_la-mini-arm.lo `test -f 'mini-arm.c' || echo '$(srcdir)/'`mini-arm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-arm.Tpo $(DEPDIR)/libmini_static_la-mini-arm.Plo
#	$(AM_V_CC)source='mini-arm.c' object='libmini_static_la-mini-arm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-arm.lo `test -f 'mini-arm.c' || echo '$(srcdir)/'`mini-arm.c

libmini_static_la-exceptions-arm.lo: exceptions-arm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-exceptions-arm.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-exceptions-arm.Tpo -c -o libmini_static_la-exceptions-arm.lo `test -f 'exceptions-arm.c' || echo '$(srcdir)/'`exceptions-arm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-exceptions-arm.Tpo $(DEPDIR)/libmini_static_la-exceptions-arm.Plo
#	$(AM_V_CC)source='exceptions-arm.c' object='libmini_static_la-exceptions-arm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-exceptions-arm.lo `test -f 'exceptions-arm.c' || echo '$(srcdir)/'`exceptions-arm.c

libmini_static_la-tramp-arm.lo: tramp-arm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-arm.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-arm.Tpo -c -o libmini_static_la-tramp-arm.lo `test -f 'tramp-arm.c' || echo '$(srcdir)/'`tramp-arm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-arm.Tpo $(DEPDIR)/libmini_static_la-tramp-arm.Plo
#	$(AM_V_CC)source='tramp-arm.c' object='libmini_static_la-tramp-arm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-arm.lo `test -f 'tramp-arm.c' || echo '$(srcdir)/'`tramp-arm.c

libmini_static_la-mini-arm-gsharedvt.lo: mini-arm-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-arm-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-arm-gsharedvt.Tpo -c -o libmini_static_la-mini-arm-gsharedvt.lo `test -f 'mini-arm-gsharedvt.c' || echo '$(srcdir)/'`mini-arm-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-arm-gsharedvt.Tpo $(DEPDIR)/libmini_static_la-mini-arm-gsharedvt.Plo
#	$(AM_V_CC)source='mini-arm-gsharedvt.c' object='libmini_static_la-mini-arm-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-arm-gsharedvt.lo `test -f 'mini-arm-gsharedvt.c' || echo '$(srcdir)/'`mini-arm-gsharedvt.c

libmini_static_la-tramp-arm-gsharedvt.lo: tramp-arm-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-arm-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-arm-gsharedvt.Tpo -c -o libmini_static_la-tramp-arm-gsharedvt.lo `test -f 'tramp-arm-gsharedvt.c' || echo '$(srcdir)/'`tramp-arm-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-arm-gsharedvt.Tpo $(DEPDIR)/libmini_static_la-tramp-arm-gsharedvt.Plo
#	$(AM_V_CC)source='tramp-arm-gsharedvt.c' object='libmini_static_la-tramp-arm-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-arm-gsharedvt.lo `test -f 'tramp-arm-gsharedvt.c' || echo '$(srcdir)/'`tramp-arm-gsharedvt.c

libmini_static_la-mini-mips.lo: mini-mips.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-mips.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-mips.Tpo -c -o libmini_static_la-mini-mips.lo `test -f 'mini-mips.c' || echo '$(srcdir)/'`mini-mips.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-mips.Tpo $(DEPDIR)/libmini_static_la-mini-mips.Plo
#	$(AM_V_CC)source='mini-mips.c' object='libmini_static_la-mini-mips.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-mips.lo `test -f 'mini-mips.c' || echo '$(srcdir)/'`mini-mips.c

libmini_static_la-exceptions-mips.lo: exceptions-mips.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-exceptions-mips.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-exceptions-mips.Tpo -c -o libmini_static_la-exceptions-mips.lo `test -f 'exceptions-mips.c' || echo '$(srcdir)/'`exceptions-mips.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-exceptions-mips.Tpo $(DEPDIR)/libmini_static_la-exceptions-mips.Plo
#	$(AM_V_CC)source='exceptions-mips.c' object='libmini_static_la-exceptions-mips.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-exceptions-mips.lo `test -f 'exceptions-mips.c' || echo '$(srcdir)/'`exceptions-mips.c

libmini_static_la-tramp-mips.lo: tramp-mips.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-mips.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-mips.Tpo -c -o libmini_static_la-tramp-mips.lo `test -f 'tramp-mips.c' || echo '$(srcdir)/'`tramp-mips.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-mips.Tpo $(DEPDIR)/libmini_static_la-tramp-mips.Plo
#	$(AM_V_CC)source='tramp-mips.c' object='libmini_static_la-tramp-mips.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-mips.lo `test -f 'tramp-mips.c' || echo '$(srcdir)/'`tramp-mips.c

libmini_static_la-mini-ppc.lo: mini-ppc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-ppc.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-ppc.Tpo -c -o libmini_static_la-mini-ppc.lo `test -f 'mini-ppc.c' || echo '$(srcdir)/'`mini-ppc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-ppc.Tpo $(DEPDIR)/libmini_static_la-mini-ppc.Plo
#	$(AM_V_CC)source='mini-ppc.c' object='libmini_static_la-mini-ppc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-ppc.lo `test -f 'mini-ppc.c' || echo '$(srcdir)/'`mini-ppc.c

libmini_static_la-exceptions-ppc.lo: exceptions-ppc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-exceptions-ppc.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-exceptions-ppc.Tpo -c -o libmini_static_la-exceptions-ppc.lo `test -f 'exceptions-ppc.c' || echo '$(srcdir)/'`exceptions-ppc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-exceptions-ppc.Tpo $(DEPDIR)/libmini_static_la-exceptions-ppc.Plo
#	$(AM_V_CC)source='exceptions-ppc.c' object='libmini_static_la-exceptions-ppc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-exceptions-ppc.lo `test -f 'exceptions-ppc.c' || echo '$(srcdir)/'`exceptions-ppc.c

libmini_static_la-tramp-ppc.lo: tramp-ppc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-ppc.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-ppc.Tpo -c -o libmini_static_la-tramp-ppc.lo `test -f 'tramp-ppc.c' || echo '$(srcdir)/'`tramp-ppc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-ppc.Tpo $(DEPDIR)/libmini_static_la-tramp-ppc.Plo
#	$(AM_V_CC)source='tramp-ppc.c' object='libmini_static_la-tramp-ppc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-ppc.lo `test -f 'tramp-ppc.c' || echo '$(srcdir)/'`tramp-ppc.c

libmini_static_la-mini-s390x.lo: mini-s390x.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-s390x.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-s390x.Tpo -c -o libmini_static_la-mini-s390x.lo `test -f 'mini-s390x.c' || echo '$(srcdir)/'`mini-s390x.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-s390x.Tpo $(DEPDIR)/libmini_static_la-mini-s390x.Plo
#	$(AM_V_CC)source='mini-s390x.c' object='libmini_static_la-mini-s390x.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-s390x.lo `test -f 'mini-s390x.c' || echo '$(srcdir)/'`mini-s390x.c

libmini_static_la-exceptions-s390x.lo: exceptions-s390x.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-exceptions-s390x.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-exceptions-s390x.Tpo -c -o libmini_static_la-exceptions-s390x.lo `test -f 'exceptions-s390x.c' || echo '$(srcdir)/'`exceptions-s390x.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-exceptions-s390x.Tpo $(DEPDIR)/libmini_static_la-exceptions-s390x.Plo
#	$(AM_V_CC)source='exceptions-s390x.c' object='libmini_static_la-exceptions-s390x.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-exceptions-s390x.lo `test -f 'exceptions-s390x.c' || echo '$(srcdir)/'`exceptions-s390x.c

libmini_static_la-tramp-s390x.lo: tramp-s390x.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-s390x.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-s390x.Tpo -c -o libmini_static_la-tramp-s390x.lo `test -f 'tramp-s390x.c' || echo '$(srcdir)/'`tramp-s390x.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-s390x.Tpo $(DEPDIR)/libmini_static_la-tramp-s390x.Plo
#	$(AM_V_CC)source='tramp-s390x.c' object='libmini_static_la-tramp-s390x.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-s390x.lo `test -f 'tramp-s390x.c' || echo '$(srcdir)/'`tramp-s390x.c

libmini_static_la-mini-sparc.lo: mini-sparc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-sparc.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-sparc.Tpo -c -o libmini_static_la-mini-sparc.lo `test -f 'mini-sparc.c' || echo '$(srcdir)/'`mini-sparc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-sparc.Tpo $(DEPDIR)/libmini_static_la-mini-sparc.Plo
#	$(AM_V_CC)source='mini-sparc.c' object='libmini_static_la-mini-sparc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-sparc.lo `test -f 'mini-sparc.c' || echo '$(srcdir)/'`mini-sparc.c

libmini_static_la-exceptions-sparc.lo: exceptions-sparc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-exceptions-sparc.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-exceptions-sparc.Tpo -c -o libmini_static_la-exceptions-sparc.lo `test -f 'exceptions-sparc.c' || echo '$(srcdir)/'`exceptions-sparc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-exceptions-sparc.Tpo $(DEPDIR)/libmini_static_la-exceptions-sparc.Plo
#	$(AM_V_CC)source='exceptions-sparc.c' object='libmini_static_la-exceptions-sparc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-exceptions-sparc.lo `test -f 'exceptions-sparc.c' || echo '$(srcdir)/'`exceptions-sparc.c

libmini_static_la-tramp-sparc.lo: tramp-sparc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-sparc.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-sparc.Tpo -c -o libmini_static_la-tramp-sparc.lo `test -f 'tramp-sparc.c' || echo '$(srcdir)/'`tramp-sparc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-sparc.Tpo $(DEPDIR)/libmini_static_la-tramp-sparc.Plo
#	$(AM_V_CC)source='tramp-sparc.c' object='libmini_static_la-tramp-sparc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-sparc.lo `test -f 'tramp-sparc.c' || echo '$(srcdir)/'`tramp-sparc.c

libmini_static_la-mini-wasm.lo: mini-wasm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-wasm.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-wasm.Tpo -c -o libmini_static_la-mini-wasm.lo `test -f 'mini-wasm.c' || echo '$(srcdir)/'`mini-wasm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-wasm.Tpo $(DEPDIR)/libmini_static_la-mini-wasm.Plo
#	$(AM_V_CC)source='mini-wasm.c' object='libmini_static_la-mini-wasm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-wasm.lo `test -f 'mini-wasm.c' || echo '$(srcdir)/'`mini-wasm.c

libmini_static_la-exceptions-wasm.lo: exceptions-wasm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-exceptions-wasm.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-exceptions-wasm.Tpo -c -o libmini_static_la-exceptions-wasm.lo `test -f 'exceptions-wasm.c' || echo '$(srcdir)/'`exceptions-wasm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-exceptions-wasm.Tpo $(DEPDIR)/libmini_static_la-exceptions-wasm.Plo
#	$(AM_V_CC)source='exceptions-wasm.c' object='libmini_static_la-exceptions-wasm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-exceptions-wasm.lo `test -f 'exceptions-wasm.c' || echo '$(srcdir)/'`exceptions-wasm.c

libmini_static_la-tramp-wasm.lo: tramp-wasm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-wasm.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-wasm.Tpo -c -o libmini_static_la-tramp-wasm.lo `test -f 'tramp-wasm.c' || echo '$(srcdir)/'`tramp-wasm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-wasm.Tpo $(DEPDIR)/libmini_static_la-tramp-wasm.Plo
#	$(AM_V_CC)source='tramp-wasm.c' object='libmini_static_la-tramp-wasm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-wasm.lo `test -f 'tramp-wasm.c' || echo '$(srcdir)/'`tramp-wasm.c

libmini_static_la-mini-x86.lo: mini-x86.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-x86.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-x86.Tpo -c -o libmini_static_la-mini-x86.lo `test -f 'mini-x86.c' || echo '$(srcdir)/'`mini-x86.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-x86.Tpo $(DEPDIR)/libmini_static_la-mini-x86.Plo
#	$(AM_V_CC)source='mini-x86.c' object='libmini_static_la-mini-x86.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-x86.lo `test -f 'mini-x86.c' || echo '$(srcdir)/'`mini-x86.c

libmini_static_la-exceptions-x86.lo: exceptions-x86.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-exceptions-x86.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-exceptions-x86.Tpo -c -o libmini_static_la-exceptions-x86.lo `test -f 'exceptions-x86.c' || echo '$(srcdir)/'`exceptions-x86.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-exceptions-x86.Tpo $(DEPDIR)/libmini_static_la-exceptions-x86.Plo
#	$(AM_V_CC)source='exceptions-x86.c' object='libmini_static_la-exceptions-x86.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-exceptions-x86.lo `test -f 'exceptions-x86.c' || echo '$(srcdir)/'`exceptions-x86.c

libmini_static_la-tramp-x86.lo: tramp-x86.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-x86.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-x86.Tpo -c -o libmini_static_la-tramp-x86.lo `test -f 'tramp-x86.c' || echo '$(srcdir)/'`tramp-x86.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-x86.Tpo $(DEPDIR)/libmini_static_la-tramp-x86.Plo
#	$(AM_V_CC)source='tramp-x86.c' object='libmini_static_la-tramp-x86.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-x86.lo `test -f 'tramp-x86.c' || echo '$(srcdir)/'`tramp-x86.c

libmini_static_la-mini-x86-gsharedvt.lo: mini-x86-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-x86-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-x86-gsharedvt.Tpo -c -o libmini_static_la-mini-x86-gsharedvt.lo `test -f 'mini-x86-gsharedvt.c' || echo '$(srcdir)/'`mini-x86-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-x86-gsharedvt.Tpo $(DEPDIR)/libmini_static_la-mini-x86-gsharedvt.Plo
#	$(AM_V_CC)source='mini-x86-gsharedvt.c' object='libmini_static_la-mini-x86-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-x86-gsharedvt.lo `test -f 'mini-x86-gsharedvt.c' || echo '$(srcdir)/'`mini-x86-gsharedvt.c

libmini_static_la-tramp-x86-gsharedvt.lo: tramp-x86-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-tramp-x86-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-tramp-x86-gsharedvt.Tpo -c -o libmini_static_la-tramp-x86-gsharedvt.lo `test -f 'tramp-x86-gsharedvt.c' || echo '$(srcdir)/'`tramp-x86-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-tramp-x86-gsharedvt.Tpo $(DEPDIR)/libmini_static_la-tramp-x86-gsharedvt.Plo
#	$(AM_V_CC)source='tramp-x86-gsharedvt.c' object='libmini_static_la-tramp-x86-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-tramp-x86-gsharedvt.lo `test -f 'tramp-x86-gsharedvt.c' || echo '$(srcdir)/'`tramp-x86-gsharedvt.c

libmini_static_la-mini-darwin.lo: mini-darwin.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-darwin.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-darwin.Tpo -c -o libmini_static_la-mini-darwin.lo `test -f 'mini-darwin.c' || echo '$(srcdir)/'`mini-darwin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-darwin.Tpo $(DEPDIR)/libmini_static_la-mini-darwin.Plo
#	$(AM_V_CC)source='mini-darwin.c' object='libmini_static_la-mini-darwin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-darwin.lo `test -f 'mini-darwin.c' || echo '$(srcdir)/'`mini-darwin.c

libmini_static_la-mini-posix.lo: mini-posix.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-posix.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-posix.Tpo -c -o libmini_static_la-mini-posix.lo `test -f 'mini-posix.c' || echo '$(srcdir)/'`mini-posix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-posix.Tpo $(DEPDIR)/libmini_static_la-mini-posix.Plo
#	$(AM_V_CC)source='mini-posix.c' object='libmini_static_la-mini-posix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-posix.lo `test -f 'mini-posix.c' || echo '$(srcdir)/'`mini-posix.c

libmini_static_la-mini-windows.lo: mini-windows.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-windows.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-windows.Tpo -c -o libmini_static_la-mini-windows.lo `test -f 'mini-windows.c' || echo '$(srcdir)/'`mini-windows.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-windows.Tpo $(DEPDIR)/libmini_static_la-mini-windows.Plo
#	$(AM_V_CC)source='mini-windows.c' object='libmini_static_la-mini-windows.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-windows.lo `test -f 'mini-windows.c' || echo '$(srcdir)/'`mini-windows.c

libmini_static_la-mini-windows-dllmain.lo: mini-windows-dllmain.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-windows-dllmain.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-windows-dllmain.Tpo -c -o libmini_static_la-mini-windows-dllmain.lo `test -f 'mini-windows-dllmain.c' || echo '$(srcdir)/'`mini-windows-dllmain.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-windows-dllmain.Tpo $(DEPDIR)/libmini_static_la-mini-windows-dllmain.Plo
#	$(AM_V_CC)source='mini-windows-dllmain.c' object='libmini_static_la-mini-windows-dllmain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-windows-dllmain.lo `test -f 'mini-windows-dllmain.c' || echo '$(srcdir)/'`mini-windows-dllmain.c

libmini_static_la-mini-windows-dlldac.lo: mini-windows-dlldac.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -MT libmini_static_la-mini-windows-dlldac.lo -MD -MP -MF $(DEPDIR)/libmini_static_la-mini-windows-dlldac.Tpo -c -o libmini_static_la-mini-windows-dlldac.lo `test -f 'mini-windows-dlldac.c' || echo '$(srcdir)/'`mini-windows-dlldac.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_static_la-mini-windows-dlldac.Tpo $(DEPDIR)/libmini_static_la-mini-windows-dlldac.Plo
#	$(AM_V_CC)source='mini-windows-dlldac.c' object='libmini_static_la-mini-windows-dlldac.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_static_la_CFLAGS) $(CFLAGS) -c -o libmini_static_la-mini-windows-dlldac.lo `test -f 'mini-windows-dlldac.c' || echo '$(srcdir)/'`mini-windows-dlldac.c

libmini_la-mini.lo: mini.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini.Tpo -c -o libmini_la-mini.lo `test -f 'mini.c' || echo '$(srcdir)/'`mini.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini.Tpo $(DEPDIR)/libmini_la-mini.Plo
#	$(AM_V_CC)source='mini.c' object='libmini_la-mini.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini.lo `test -f 'mini.c' || echo '$(srcdir)/'`mini.c

libmini_la-mini-runtime.lo: mini-runtime.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-runtime.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-runtime.Tpo -c -o libmini_la-mini-runtime.lo `test -f 'mini-runtime.c' || echo '$(srcdir)/'`mini-runtime.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-runtime.Tpo $(DEPDIR)/libmini_la-mini-runtime.Plo
#	$(AM_V_CC)source='mini-runtime.c' object='libmini_la-mini-runtime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-runtime.lo `test -f 'mini-runtime.c' || echo '$(srcdir)/'`mini-runtime.c

libmini_la-seq-points.lo: seq-points.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-seq-points.lo -MD -MP -MF $(DEPDIR)/libmini_la-seq-points.Tpo -c -o libmini_la-seq-points.lo `test -f 'seq-points.c' || echo '$(srcdir)/'`seq-points.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-seq-points.Tpo $(DEPDIR)/libmini_la-seq-points.Plo
#	$(AM_V_CC)source='seq-points.c' object='libmini_la-seq-points.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-seq-points.lo `test -f 'seq-points.c' || echo '$(srcdir)/'`seq-points.c

libmini_la-method-to-ir.lo: method-to-ir.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-method-to-ir.lo -MD -MP -MF $(DEPDIR)/libmini_la-method-to-ir.Tpo -c -o libmini_la-method-to-ir.lo `test -f 'method-to-ir.c' || echo '$(srcdir)/'`method-to-ir.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-method-to-ir.Tpo $(DEPDIR)/libmini_la-method-to-ir.Plo
#	$(AM_V_CC)source='method-to-ir.c' object='libmini_la-method-to-ir.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-method-to-ir.lo `test -f 'method-to-ir.c' || echo '$(srcdir)/'`method-to-ir.c

libmini_la-cfgdump.lo: cfgdump.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-cfgdump.lo -MD -MP -MF $(DEPDIR)/libmini_la-cfgdump.Tpo -c -o libmini_la-cfgdump.lo `test -f 'cfgdump.c' || echo '$(srcdir)/'`cfgdump.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-cfgdump.Tpo $(DEPDIR)/libmini_la-cfgdump.Plo
#	$(AM_V_CC)source='cfgdump.c' object='libmini_la-cfgdump.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-cfgdump.lo `test -f 'cfgdump.c' || echo '$(srcdir)/'`cfgdump.c

libmini_la-decompose.lo: decompose.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-decompose.lo -MD -MP -MF $(DEPDIR)/libmini_la-decompose.Tpo -c -o libmini_la-decompose.lo `test -f 'decompose.c' || echo '$(srcdir)/'`decompose.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-decompose.Tpo $(DEPDIR)/libmini_la-decompose.Plo
#	$(AM_V_CC)source='decompose.c' object='libmini_la-decompose.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-decompose.lo `test -f 'decompose.c' || echo '$(srcdir)/'`decompose.c

libmini_la-jit-icalls.lo: jit-icalls.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-jit-icalls.lo -MD -MP -MF $(DEPDIR)/libmini_la-jit-icalls.Tpo -c -o libmini_la-jit-icalls.lo `test -f 'jit-icalls.c' || echo '$(srcdir)/'`jit-icalls.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-jit-icalls.Tpo $(DEPDIR)/libmini_la-jit-icalls.Plo
#	$(AM_V_CC)source='jit-icalls.c' object='libmini_la-jit-icalls.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-jit-icalls.lo `test -f 'jit-icalls.c' || echo '$(srcdir)/'`jit-icalls.c

libmini_la-trace.lo: trace.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-trace.lo -MD -MP -MF $(DEPDIR)/libmini_la-trace.Tpo -c -o libmini_la-trace.lo `test -f 'trace.c' || echo '$(srcdir)/'`trace.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-trace.Tpo $(DEPDIR)/libmini_la-trace.Plo
#	$(AM_V_CC)source='trace.c' object='libmini_la-trace.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-trace.lo `test -f 'trace.c' || echo '$(srcdir)/'`trace.c

libmini_la-dominators.lo: dominators.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-dominators.lo -MD -MP -MF $(DEPDIR)/libmini_la-dominators.Tpo -c -o libmini_la-dominators.lo `test -f 'dominators.c' || echo '$(srcdir)/'`dominators.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-dominators.Tpo $(DEPDIR)/libmini_la-dominators.Plo
#	$(AM_V_CC)source='dominators.c' object='libmini_la-dominators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-dominators.lo `test -f 'dominators.c' || echo '$(srcdir)/'`dominators.c

libmini_la-cfold.lo: cfold.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-cfold.lo -MD -MP -MF $(DEPDIR)/libmini_la-cfold.Tpo -c -o libmini_la-cfold.lo `test -f 'cfold.c' || echo '$(srcdir)/'`cfold.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-cfold.Tpo $(DEPDIR)/libmini_la-cfold.Plo
#	$(AM_V_CC)source='cfold.c' object='libmini_la-cfold.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-cfold.lo `test -f 'cfold.c' || echo '$(srcdir)/'`cfold.c

libmini_la-helpers.lo: helpers.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-helpers.lo -MD -MP -MF $(DEPDIR)/libmini_la-helpers.Tpo -c -o libmini_la-helpers.lo `test -f 'helpers.c' || echo '$(srcdir)/'`helpers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-helpers.Tpo $(DEPDIR)/libmini_la-helpers.Plo
#	$(AM_V_CC)source='helpers.c' object='libmini_la-helpers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-helpers.lo `test -f 'helpers.c' || echo '$(srcdir)/'`helpers.c

libmini_la-liveness.lo: liveness.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-liveness.lo -MD -MP -MF $(DEPDIR)/libmini_la-liveness.Tpo -c -o libmini_la-liveness.lo `test -f 'liveness.c' || echo '$(srcdir)/'`liveness.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-liveness.Tpo $(DEPDIR)/libmini_la-liveness.Plo
#	$(AM_V_CC)source='liveness.c' object='libmini_la-liveness.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-liveness.lo `test -f 'liveness.c' || echo '$(srcdir)/'`liveness.c

libmini_la-ssa.lo: ssa.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-ssa.lo -MD -MP -MF $(DEPDIR)/libmini_la-ssa.Tpo -c -o libmini_la-ssa.lo `test -f 'ssa.c' || echo '$(srcdir)/'`ssa.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-ssa.Tpo $(DEPDIR)/libmini_la-ssa.Plo
#	$(AM_V_CC)source='ssa.c' object='libmini_la-ssa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-ssa.lo `test -f 'ssa.c' || echo '$(srcdir)/'`ssa.c

libmini_la-abcremoval.lo: abcremoval.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-abcremoval.lo -MD -MP -MF $(DEPDIR)/libmini_la-abcremoval.Tpo -c -o libmini_la-abcremoval.lo `test -f 'abcremoval.c' || echo '$(srcdir)/'`abcremoval.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-abcremoval.Tpo $(DEPDIR)/libmini_la-abcremoval.Plo
#	$(AM_V_CC)source='abcremoval.c' object='libmini_la-abcremoval.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-abcremoval.lo `test -f 'abcremoval.c' || echo '$(srcdir)/'`abcremoval.c

libmini_la-local-propagation.lo: local-propagation.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-local-propagation.lo -MD -MP -MF $(DEPDIR)/libmini_la-local-propagation.Tpo -c -o libmini_la-local-propagation.lo `test -f 'local-propagation.c' || echo '$(srcdir)/'`local-propagation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-local-propagation.Tpo $(DEPDIR)/libmini_la-local-propagation.Plo
#	$(AM_V_CC)source='local-propagation.c' object='libmini_la-local-propagation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-local-propagation.lo `test -f 'local-propagation.c' || echo '$(srcdir)/'`local-propagation.c

libmini_la-driver.lo: driver.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-driver.lo -MD -MP -MF $(DEPDIR)/libmini_la-driver.Tpo -c -o libmini_la-driver.lo `test -f 'driver.c' || echo '$(srcdir)/'`driver.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-driver.Tpo $(DEPDIR)/libmini_la-driver.Plo
#	$(AM_V_CC)source='driver.c' object='libmini_la-driver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-driver.lo `test -f 'driver.c' || echo '$(srcdir)/'`driver.c

libmini_la-debug-mini.lo: debug-mini.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-debug-mini.lo -MD -MP -MF $(DEPDIR)/libmini_la-debug-mini.Tpo -c -o libmini_la-debug-mini.lo `test -f 'debug-mini.c' || echo '$(srcdir)/'`debug-mini.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-debug-mini.Tpo $(DEPDIR)/libmini_la-debug-mini.Plo
#	$(AM_V_CC)source='debug-mini.c' object='libmini_la-debug-mini.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-debug-mini.lo `test -f 'debug-mini.c' || echo '$(srcdir)/'`debug-mini.c

libmini_la-linear-scan.lo: linear-scan.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-linear-scan.lo -MD -MP -MF $(DEPDIR)/libmini_la-linear-scan.Tpo -c -o libmini_la-linear-scan.lo `test -f 'linear-scan.c' || echo '$(srcdir)/'`linear-scan.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-linear-scan.Tpo $(DEPDIR)/libmini_la-linear-scan.Plo
#	$(AM_V_CC)source='linear-scan.c' object='libmini_la-linear-scan.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-linear-scan.lo `test -f 'linear-scan.c' || echo '$(srcdir)/'`linear-scan.c

libmini_la-aot-compiler.lo: aot-compiler.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-aot-compiler.lo -MD -MP -MF $(DEPDIR)/libmini_la-aot-compiler.Tpo -c -o libmini_la-aot-compiler.lo `test -f 'aot-compiler.c' || echo '$(srcdir)/'`aot-compiler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-aot-compiler.Tpo $(DEPDIR)/libmini_la-aot-compiler.Plo
#	$(AM_V_CC)source='aot-compiler.c' object='libmini_la-aot-compiler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-aot-compiler.lo `test -f 'aot-compiler.c' || echo '$(srcdir)/'`aot-compiler.c

libmini_la-aot-runtime.lo: aot-runtime.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-aot-runtime.lo -MD -MP -MF $(DEPDIR)/libmini_la-aot-runtime.Tpo -c -o libmini_la-aot-runtime.lo `test -f 'aot-runtime.c' || echo '$(srcdir)/'`aot-runtime.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-aot-runtime.Tpo $(DEPDIR)/libmini_la-aot-runtime.Plo
#	$(AM_V_CC)source='aot-runtime.c' object='libmini_la-aot-runtime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-aot-runtime.lo `test -f 'aot-runtime.c' || echo '$(srcdir)/'`aot-runtime.c

libmini_la-aot-runtime-wasm.lo: aot-runtime-wasm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-aot-runtime-wasm.lo -MD -MP -MF $(DEPDIR)/libmini_la-aot-runtime-wasm.Tpo -c -o libmini_la-aot-runtime-wasm.lo `test -f 'aot-runtime-wasm.c' || echo '$(srcdir)/'`aot-runtime-wasm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-aot-runtime-wasm.Tpo $(DEPDIR)/libmini_la-aot-runtime-wasm.Plo
#	$(AM_V_CC)source='aot-runtime-wasm.c' object='libmini_la-aot-runtime-wasm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-aot-runtime-wasm.lo `test -f 'aot-runtime-wasm.c' || echo '$(srcdir)/'`aot-runtime-wasm.c

libmini_la-graph.lo: graph.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-graph.lo -MD -MP -MF $(DEPDIR)/libmini_la-graph.Tpo -c -o libmini_la-graph.lo `test -f 'graph.c' || echo '$(srcdir)/'`graph.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-graph.Tpo $(DEPDIR)/libmini_la-graph.Plo
#	$(AM_V_CC)source='graph.c' object='libmini_la-graph.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-graph.lo `test -f 'graph.c' || echo '$(srcdir)/'`graph.c

libmini_la-mini-codegen.lo: mini-codegen.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-codegen.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-codegen.Tpo -c -o libmini_la-mini-codegen.lo `test -f 'mini-codegen.c' || echo '$(srcdir)/'`mini-codegen.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-codegen.Tpo $(DEPDIR)/libmini_la-mini-codegen.Plo
#	$(AM_V_CC)source='mini-codegen.c' object='libmini_la-mini-codegen.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-codegen.lo `test -f 'mini-codegen.c' || echo '$(srcdir)/'`mini-codegen.c

libmini_la-mini-exceptions.lo: mini-exceptions.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-exceptions.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-exceptions.Tpo -c -o libmini_la-mini-exceptions.lo `test -f 'mini-exceptions.c' || echo '$(srcdir)/'`mini-exceptions.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-exceptions.Tpo $(DEPDIR)/libmini_la-mini-exceptions.Plo
#	$(AM_V_CC)source='mini-exceptions.c' object='libmini_la-mini-exceptions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-exceptions.lo `test -f 'mini-exceptions.c' || echo '$(srcdir)/'`mini-exceptions.c

libmini_la-mini-trampolines.lo: mini-trampolines.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-trampolines.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-trampolines.Tpo -c -o libmini_la-mini-trampolines.lo `test -f 'mini-trampolines.c' || echo '$(srcdir)/'`mini-trampolines.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-trampolines.Tpo $(DEPDIR)/libmini_la-mini-trampolines.Plo
#	$(AM_V_CC)source='mini-trampolines.c' object='libmini_la-mini-trampolines.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-trampolines.lo `test -f 'mini-trampolines.c' || echo '$(srcdir)/'`mini-trampolines.c

libmini_la-branch-opts.lo: branch-opts.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-branch-opts.lo -MD -MP -MF $(DEPDIR)/libmini_la-branch-opts.Tpo -c -o libmini_la-branch-opts.lo `test -f 'branch-opts.c' || echo '$(srcdir)/'`branch-opts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-branch-opts.Tpo $(DEPDIR)/libmini_la-branch-opts.Plo
#	$(AM_V_CC)source='branch-opts.c' object='libmini_la-branch-opts.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-branch-opts.lo `test -f 'branch-opts.c' || echo '$(srcdir)/'`branch-opts.c

libmini_la-mini-generic-sharing.lo: mini-generic-sharing.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-generic-sharing.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-generic-sharing.Tpo -c -o libmini_la-mini-generic-sharing.lo `test -f 'mini-generic-sharing.c' || echo '$(srcdir)/'`mini-generic-sharing.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-generic-sharing.Tpo $(DEPDIR)/libmini_la-mini-generic-sharing.Plo
#	$(AM_V_CC)source='mini-generic-sharing.c' object='libmini_la-mini-generic-sharing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-generic-sharing.lo `test -f 'mini-generic-sharing.c' || echo '$(srcdir)/'`mini-generic-sharing.c

libmini_la-tasklets.lo: tasklets.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tasklets.lo -MD -MP -MF $(DEPDIR)/libmini_la-tasklets.Tpo -c -o libmini_la-tasklets.lo `test -f 'tasklets.c' || echo '$(srcdir)/'`tasklets.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tasklets.Tpo $(DEPDIR)/libmini_la-tasklets.Plo
#	$(AM_V_CC)source='tasklets.c' object='libmini_la-tasklets.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tasklets.lo `test -f 'tasklets.c' || echo '$(srcdir)/'`tasklets.c

libmini_la-simd-intrinsics.lo: simd-intrinsics.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-simd-intrinsics.lo -MD -MP -MF $(DEPDIR)/libmini_la-simd-intrinsics.Tpo -c -o libmini_la-simd-intrinsics.lo `test -f 'simd-intrinsics.c' || echo '$(srcdir)/'`simd-intrinsics.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-simd-intrinsics.Tpo $(DEPDIR)/libmini_la-simd-intrinsics.Plo
#	$(AM_V_CC)source='simd-intrinsics.c' object='libmini_la-simd-intrinsics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-simd-intrinsics.lo `test -f 'simd-intrinsics.c' || echo '$(srcdir)/'`simd-intrinsics.c

libmini_la-mini-native-types.lo: mini-native-types.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-native-types.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-native-types.Tpo -c -o libmini_la-mini-native-types.lo `test -f 'mini-native-types.c' || echo '$(srcdir)/'`mini-native-types.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-native-types.Tpo $(DEPDIR)/libmini_la-mini-native-types.Plo
#	$(AM_V_CC)source='mini-native-types.c' object='libmini_la-mini-native-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-native-types.lo `test -f 'mini-native-types.c' || echo '$(srcdir)/'`mini-native-types.c

libmini_la-unwind.lo: unwind.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-unwind.lo -MD -MP -MF $(DEPDIR)/libmini_la-unwind.Tpo -c -o libmini_la-unwind.lo `test -f 'unwind.c' || echo '$(srcdir)/'`unwind.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-unwind.Tpo $(DEPDIR)/libmini_la-unwind.Plo
#	$(AM_V_CC)source='unwind.c' object='libmini_la-unwind.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-unwind.lo `test -f 'unwind.c' || echo '$(srcdir)/'`unwind.c

libmini_la-image-writer.lo: image-writer.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-image-writer.lo -MD -MP -MF $(DEPDIR)/libmini_la-image-writer.Tpo -c -o libmini_la-image-writer.lo `test -f 'image-writer.c' || echo '$(srcdir)/'`image-writer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-image-writer.Tpo $(DEPDIR)/libmini_la-image-writer.Plo
#	$(AM_V_CC)source='image-writer.c' object='libmini_la-image-writer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-image-writer.lo `test -f 'image-writer.c' || echo '$(srcdir)/'`image-writer.c

libmini_la-dwarfwriter.lo: dwarfwriter.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-dwarfwriter.lo -MD -MP -MF $(DEPDIR)/libmini_la-dwarfwriter.Tpo -c -o libmini_la-dwarfwriter.lo `test -f 'dwarfwriter.c' || echo '$(srcdir)/'`dwarfwriter.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-dwarfwriter.Tpo $(DEPDIR)/libmini_la-dwarfwriter.Plo
#	$(AM_V_CC)source='dwarfwriter.c' object='libmini_la-dwarfwriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-dwarfwriter.lo `test -f 'dwarfwriter.c' || echo '$(srcdir)/'`dwarfwriter.c

libmini_la-mini-gc.lo: mini-gc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-gc.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-gc.Tpo -c -o libmini_la-mini-gc.lo `test -f 'mini-gc.c' || echo '$(srcdir)/'`mini-gc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-gc.Tpo $(DEPDIR)/libmini_la-mini-gc.Plo
#	$(AM_V_CC)source='mini-gc.c' object='libmini_la-mini-gc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-gc.lo `test -f 'mini-gc.c' || echo '$(srcdir)/'`mini-gc.c

libmini_la-debugger-agent.lo: debugger-agent.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-debugger-agent.lo -MD -MP -MF $(DEPDIR)/libmini_la-debugger-agent.Tpo -c -o libmini_la-debugger-agent.lo `test -f 'debugger-agent.c' || echo '$(srcdir)/'`debugger-agent.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-debugger-agent.Tpo $(DEPDIR)/libmini_la-debugger-agent.Plo
#	$(AM_V_CC)source='debugger-agent.c' object='libmini_la-debugger-agent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-debugger-agent.lo `test -f 'debugger-agent.c' || echo '$(srcdir)/'`debugger-agent.c

libmini_la-xdebug.lo: xdebug.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-xdebug.lo -MD -MP -MF $(DEPDIR)/libmini_la-xdebug.Tpo -c -o libmini_la-xdebug.lo `test -f 'xdebug.c' || echo '$(srcdir)/'`xdebug.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-xdebug.Tpo $(DEPDIR)/libmini_la-xdebug.Plo
#	$(AM_V_CC)source='xdebug.c' object='libmini_la-xdebug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-xdebug.lo `test -f 'xdebug.c' || echo '$(srcdir)/'`xdebug.c

libmini_la-alias-analysis.lo: alias-analysis.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-alias-analysis.lo -MD -MP -MF $(DEPDIR)/libmini_la-alias-analysis.Tpo -c -o libmini_la-alias-analysis.lo `test -f 'alias-analysis.c' || echo '$(srcdir)/'`alias-analysis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-alias-analysis.Tpo $(DEPDIR)/libmini_la-alias-analysis.Plo
#	$(AM_V_CC)source='alias-analysis.c' object='libmini_la-alias-analysis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-alias-analysis.lo `test -f 'alias-analysis.c' || echo '$(srcdir)/'`alias-analysis.c

libmini_la-mini-cross-helpers.lo: mini-cross-helpers.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-cross-helpers.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-cross-helpers.Tpo -c -o libmini_la-mini-cross-helpers.lo `test -f 'mini-cross-helpers.c' || echo '$(srcdir)/'`mini-cross-helpers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-cross-helpers.Tpo $(DEPDIR)/libmini_la-mini-cross-helpers.Plo
#	$(AM_V_CC)source='mini-cross-helpers.c' object='libmini_la-mini-cross-helpers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-cross-helpers.lo `test -f 'mini-cross-helpers.c' || echo '$(srcdir)/'`mini-cross-helpers.c

libmini_la-arch-stubs.lo: arch-stubs.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-arch-stubs.lo -MD -MP -MF $(DEPDIR)/libmini_la-arch-stubs.Tpo -c -o libmini_la-arch-stubs.lo `test -f 'arch-stubs.c' || echo '$(srcdir)/'`arch-stubs.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-arch-stubs.Tpo $(DEPDIR)/libmini_la-arch-stubs.Plo
#	$(AM_V_CC)source='arch-stubs.c' object='libmini_la-arch-stubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-arch-stubs.lo `test -f 'arch-stubs.c' || echo '$(srcdir)/'`arch-stubs.c

libmini_la-type-checking.lo: type-checking.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-type-checking.lo -MD -MP -MF $(DEPDIR)/libmini_la-type-checking.Tpo -c -o libmini_la-type-checking.lo `test -f 'type-checking.c' || echo '$(srcdir)/'`type-checking.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-type-checking.Tpo $(DEPDIR)/libmini_la-type-checking.Plo
#	$(AM_V_CC)source='type-checking.c' object='libmini_la-type-checking.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-type-checking.lo `test -f 'type-checking.c' || echo '$(srcdir)/'`type-checking.c

libmini_la-lldb.lo: lldb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-lldb.lo -MD -MP -MF $(DEPDIR)/libmini_la-lldb.Tpo -c -o libmini_la-lldb.lo `test -f 'lldb.c' || echo '$(srcdir)/'`lldb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-lldb.Tpo $(DEPDIR)/libmini_la-lldb.Plo
#	$(AM_V_CC)source='lldb.c' object='libmini_la-lldb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-lldb.lo `test -f 'lldb.c' || echo '$(srcdir)/'`lldb.c

libmini_la-memory-access.lo: memory-access.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-memory-access.lo -MD -MP -MF $(DEPDIR)/libmini_la-memory-access.Tpo -c -o libmini_la-memory-access.lo `test -f 'memory-access.c' || echo '$(srcdir)/'`memory-access.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-memory-access.Tpo $(DEPDIR)/libmini_la-memory-access.Plo
#	$(AM_V_CC)source='memory-access.c' object='libmini_la-memory-access.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-memory-access.lo `test -f 'memory-access.c' || echo '$(srcdir)/'`memory-access.c

libmini_la-mini-profiler.lo: mini-profiler.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-profiler.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-profiler.Tpo -c -o libmini_la-mini-profiler.lo `test -f 'mini-profiler.c' || echo '$(srcdir)/'`mini-profiler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-profiler.Tpo $(DEPDIR)/libmini_la-mini-profiler.Plo
#	$(AM_V_CC)source='mini-profiler.c' object='libmini_la-mini-profiler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-profiler.lo `test -f 'mini-profiler.c' || echo '$(srcdir)/'`mini-profiler.c

libmini_la-mini-llvm.lo: mini-llvm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-llvm.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-llvm.Tpo -c -o libmini_la-mini-llvm.lo `test -f 'mini-llvm.c' || echo '$(srcdir)/'`mini-llvm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-llvm.Tpo $(DEPDIR)/libmini_la-mini-llvm.Plo
#	$(AM_V_CC)source='mini-llvm.c' object='libmini_la-mini-llvm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-llvm.lo `test -f 'mini-llvm.c' || echo '$(srcdir)/'`mini-llvm.c

libmini_la-mini-llvm-loaded.lo: mini-llvm-loaded.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-llvm-loaded.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-llvm-loaded.Tpo -c -o libmini_la-mini-llvm-loaded.lo `test -f 'mini-llvm-loaded.c' || echo '$(srcdir)/'`mini-llvm-loaded.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-llvm-loaded.Tpo $(DEPDIR)/libmini_la-mini-llvm-loaded.Plo
#	$(AM_V_CC)source='mini-llvm-loaded.c' object='libmini_la-mini-llvm-loaded.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-llvm-loaded.lo `test -f 'mini-llvm-loaded.c' || echo '$(srcdir)/'`mini-llvm-loaded.c

interp/libmini_la-interp.lo: interp/interp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT interp/libmini_la-interp.lo -MD -MP -MF interp/$(DEPDIR)/libmini_la-interp.Tpo -c -o interp/libmini_la-interp.lo `test -f 'interp/interp.c' || echo '$(srcdir)/'`interp/interp.c
	$(AM_V_at)$(am__mv) interp/$(DEPDIR)/libmini_la-interp.Tpo interp/$(DEPDIR)/libmini_la-interp.Plo
#	$(AM_V_CC)source='interp/interp.c' object='interp/libmini_la-interp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o interp/libmini_la-interp.lo `test -f 'interp/interp.c' || echo '$(srcdir)/'`interp/interp.c

interp/libmini_la-mintops.lo: interp/mintops.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT interp/libmini_la-mintops.lo -MD -MP -MF interp/$(DEPDIR)/libmini_la-mintops.Tpo -c -o interp/libmini_la-mintops.lo `test -f 'interp/mintops.c' || echo '$(srcdir)/'`interp/mintops.c
	$(AM_V_at)$(am__mv) interp/$(DEPDIR)/libmini_la-mintops.Tpo interp/$(DEPDIR)/libmini_la-mintops.Plo
#	$(AM_V_CC)source='interp/mintops.c' object='interp/libmini_la-mintops.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o interp/libmini_la-mintops.lo `test -f 'interp/mintops.c' || echo '$(srcdir)/'`interp/mintops.c

interp/libmini_la-transform.lo: interp/transform.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT interp/libmini_la-transform.lo -MD -MP -MF interp/$(DEPDIR)/libmini_la-transform.Tpo -c -o interp/libmini_la-transform.lo `test -f 'interp/transform.c' || echo '$(srcdir)/'`interp/transform.c
	$(AM_V_at)$(am__mv) interp/$(DEPDIR)/libmini_la-transform.Tpo interp/$(DEPDIR)/libmini_la-transform.Plo
#	$(AM_V_CC)source='interp/transform.c' object='interp/libmini_la-transform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o interp/libmini_la-transform.lo `test -f 'interp/transform.c' || echo '$(srcdir)/'`interp/transform.c

interp/libmini_la-interp-stubs.lo: interp/interp-stubs.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT interp/libmini_la-interp-stubs.lo -MD -MP -MF interp/$(DEPDIR)/libmini_la-interp-stubs.Tpo -c -o interp/libmini_la-interp-stubs.lo `test -f 'interp/interp-stubs.c' || echo '$(srcdir)/'`interp/interp-stubs.c
	$(AM_V_at)$(am__mv) interp/$(DEPDIR)/libmini_la-interp-stubs.Tpo interp/$(DEPDIR)/libmini_la-interp-stubs.Plo
#	$(AM_V_CC)source='interp/interp-stubs.c' object='interp/libmini_la-interp-stubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o interp/libmini_la-interp-stubs.lo `test -f 'interp/interp-stubs.c' || echo '$(srcdir)/'`interp/interp-stubs.c

libmini_la-mini-amd64.lo: mini-amd64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-amd64.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-amd64.Tpo -c -o libmini_la-mini-amd64.lo `test -f 'mini-amd64.c' || echo '$(srcdir)/'`mini-amd64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-amd64.Tpo $(DEPDIR)/libmini_la-mini-amd64.Plo
#	$(AM_V_CC)source='mini-amd64.c' object='libmini_la-mini-amd64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-amd64.lo `test -f 'mini-amd64.c' || echo '$(srcdir)/'`mini-amd64.c

libmini_la-exceptions-amd64.lo: exceptions-amd64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-exceptions-amd64.lo -MD -MP -MF $(DEPDIR)/libmini_la-exceptions-amd64.Tpo -c -o libmini_la-exceptions-amd64.lo `test -f 'exceptions-amd64.c' || echo '$(srcdir)/'`exceptions-amd64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-exceptions-amd64.Tpo $(DEPDIR)/libmini_la-exceptions-amd64.Plo
#	$(AM_V_CC)source='exceptions-amd64.c' object='libmini_la-exceptions-amd64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-exceptions-amd64.lo `test -f 'exceptions-amd64.c' || echo '$(srcdir)/'`exceptions-amd64.c

libmini_la-tramp-amd64.lo: tramp-amd64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-amd64.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-amd64.Tpo -c -o libmini_la-tramp-amd64.lo `test -f 'tramp-amd64.c' || echo '$(srcdir)/'`tramp-amd64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-amd64.Tpo $(DEPDIR)/libmini_la-tramp-amd64.Plo
#	$(AM_V_CC)source='tramp-amd64.c' object='libmini_la-tramp-amd64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-amd64.lo `test -f 'tramp-amd64.c' || echo '$(srcdir)/'`tramp-amd64.c

libmini_la-mini-amd64-gsharedvt.lo: mini-amd64-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-amd64-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-amd64-gsharedvt.Tpo -c -o libmini_la-mini-amd64-gsharedvt.lo `test -f 'mini-amd64-gsharedvt.c' || echo '$(srcdir)/'`mini-amd64-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-amd64-gsharedvt.Tpo $(DEPDIR)/libmini_la-mini-amd64-gsharedvt.Plo
#	$(AM_V_CC)source='mini-amd64-gsharedvt.c' object='libmini_la-mini-amd64-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-amd64-gsharedvt.lo `test -f 'mini-amd64-gsharedvt.c' || echo '$(srcdir)/'`mini-amd64-gsharedvt.c

libmini_la-tramp-amd64-gsharedvt.lo: tramp-amd64-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-amd64-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-amd64-gsharedvt.Tpo -c -o libmini_la-tramp-amd64-gsharedvt.lo `test -f 'tramp-amd64-gsharedvt.c' || echo '$(srcdir)/'`tramp-amd64-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-amd64-gsharedvt.Tpo $(DEPDIR)/libmini_la-tramp-amd64-gsharedvt.Plo
#	$(AM_V_CC)source='tramp-amd64-gsharedvt.c' object='libmini_la-tramp-amd64-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-amd64-gsharedvt.lo `test -f 'tramp-amd64-gsharedvt.c' || echo '$(srcdir)/'`tramp-amd64-gsharedvt.c

libmini_la-mini-arm64.lo: mini-arm64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-arm64.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-arm64.Tpo -c -o libmini_la-mini-arm64.lo `test -f 'mini-arm64.c' || echo '$(srcdir)/'`mini-arm64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-arm64.Tpo $(DEPDIR)/libmini_la-mini-arm64.Plo
#	$(AM_V_CC)source='mini-arm64.c' object='libmini_la-mini-arm64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-arm64.lo `test -f 'mini-arm64.c' || echo '$(srcdir)/'`mini-arm64.c

libmini_la-exceptions-arm64.lo: exceptions-arm64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-exceptions-arm64.lo -MD -MP -MF $(DEPDIR)/libmini_la-exceptions-arm64.Tpo -c -o libmini_la-exceptions-arm64.lo `test -f 'exceptions-arm64.c' || echo '$(srcdir)/'`exceptions-arm64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-exceptions-arm64.Tpo $(DEPDIR)/libmini_la-exceptions-arm64.Plo
#	$(AM_V_CC)source='exceptions-arm64.c' object='libmini_la-exceptions-arm64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-exceptions-arm64.lo `test -f 'exceptions-arm64.c' || echo '$(srcdir)/'`exceptions-arm64.c

libmini_la-tramp-arm64.lo: tramp-arm64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-arm64.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-arm64.Tpo -c -o libmini_la-tramp-arm64.lo `test -f 'tramp-arm64.c' || echo '$(srcdir)/'`tramp-arm64.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-arm64.Tpo $(DEPDIR)/libmini_la-tramp-arm64.Plo
#	$(AM_V_CC)source='tramp-arm64.c' object='libmini_la-tramp-arm64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-arm64.lo `test -f 'tramp-arm64.c' || echo '$(srcdir)/'`tramp-arm64.c

libmini_la-mini-arm64-gsharedvt.lo: mini-arm64-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-arm64-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-arm64-gsharedvt.Tpo -c -o libmini_la-mini-arm64-gsharedvt.lo `test -f 'mini-arm64-gsharedvt.c' || echo '$(srcdir)/'`mini-arm64-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-arm64-gsharedvt.Tpo $(DEPDIR)/libmini_la-mini-arm64-gsharedvt.Plo
#	$(AM_V_CC)source='mini-arm64-gsharedvt.c' object='libmini_la-mini-arm64-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-arm64-gsharedvt.lo `test -f 'mini-arm64-gsharedvt.c' || echo '$(srcdir)/'`mini-arm64-gsharedvt.c

libmini_la-tramp-arm64-gsharedvt.lo: tramp-arm64-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-arm64-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-arm64-gsharedvt.Tpo -c -o libmini_la-tramp-arm64-gsharedvt.lo `test -f 'tramp-arm64-gsharedvt.c' || echo '$(srcdir)/'`tramp-arm64-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-arm64-gsharedvt.Tpo $(DEPDIR)/libmini_la-tramp-arm64-gsharedvt.Plo
#	$(AM_V_CC)source='tramp-arm64-gsharedvt.c' object='libmini_la-tramp-arm64-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-arm64-gsharedvt.lo `test -f 'tramp-arm64-gsharedvt.c' || echo '$(srcdir)/'`tramp-arm64-gsharedvt.c

libmini_la-mini-arm.lo: mini-arm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-arm.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-arm.Tpo -c -o libmini_la-mini-arm.lo `test -f 'mini-arm.c' || echo '$(srcdir)/'`mini-arm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-arm.Tpo $(DEPDIR)/libmini_la-mini-arm.Plo
#	$(AM_V_CC)source='mini-arm.c' object='libmini_la-mini-arm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-arm.lo `test -f 'mini-arm.c' || echo '$(srcdir)/'`mini-arm.c

libmini_la-exceptions-arm.lo: exceptions-arm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-exceptions-arm.lo -MD -MP -MF $(DEPDIR)/libmini_la-exceptions-arm.Tpo -c -o libmini_la-exceptions-arm.lo `test -f 'exceptions-arm.c' || echo '$(srcdir)/'`exceptions-arm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-exceptions-arm.Tpo $(DEPDIR)/libmini_la-exceptions-arm.Plo
#	$(AM_V_CC)source='exceptions-arm.c' object='libmini_la-exceptions-arm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-exceptions-arm.lo `test -f 'exceptions-arm.c' || echo '$(srcdir)/'`exceptions-arm.c

libmini_la-tramp-arm.lo: tramp-arm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-arm.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-arm.Tpo -c -o libmini_la-tramp-arm.lo `test -f 'tramp-arm.c' || echo '$(srcdir)/'`tramp-arm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-arm.Tpo $(DEPDIR)/libmini_la-tramp-arm.Plo
#	$(AM_V_CC)source='tramp-arm.c' object='libmini_la-tramp-arm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-arm.lo `test -f 'tramp-arm.c' || echo '$(srcdir)/'`tramp-arm.c

libmini_la-mini-arm-gsharedvt.lo: mini-arm-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-arm-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-arm-gsharedvt.Tpo -c -o libmini_la-mini-arm-gsharedvt.lo `test -f 'mini-arm-gsharedvt.c' || echo '$(srcdir)/'`mini-arm-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-arm-gsharedvt.Tpo $(DEPDIR)/libmini_la-mini-arm-gsharedvt.Plo
#	$(AM_V_CC)source='mini-arm-gsharedvt.c' object='libmini_la-mini-arm-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-arm-gsharedvt.lo `test -f 'mini-arm-gsharedvt.c' || echo '$(srcdir)/'`mini-arm-gsharedvt.c

libmini_la-tramp-arm-gsharedvt.lo: tramp-arm-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-arm-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-arm-gsharedvt.Tpo -c -o libmini_la-tramp-arm-gsharedvt.lo `test -f 'tramp-arm-gsharedvt.c' || echo '$(srcdir)/'`tramp-arm-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-arm-gsharedvt.Tpo $(DEPDIR)/libmini_la-tramp-arm-gsharedvt.Plo
#	$(AM_V_CC)source='tramp-arm-gsharedvt.c' object='libmini_la-tramp-arm-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-arm-gsharedvt.lo `test -f 'tramp-arm-gsharedvt.c' || echo '$(srcdir)/'`tramp-arm-gsharedvt.c

libmini_la-mini-mips.lo: mini-mips.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-mips.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-mips.Tpo -c -o libmini_la-mini-mips.lo `test -f 'mini-mips.c' || echo '$(srcdir)/'`mini-mips.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-mips.Tpo $(DEPDIR)/libmini_la-mini-mips.Plo
#	$(AM_V_CC)source='mini-mips.c' object='libmini_la-mini-mips.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-mips.lo `test -f 'mini-mips.c' || echo '$(srcdir)/'`mini-mips.c

libmini_la-exceptions-mips.lo: exceptions-mips.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-exceptions-mips.lo -MD -MP -MF $(DEPDIR)/libmini_la-exceptions-mips.Tpo -c -o libmini_la-exceptions-mips.lo `test -f 'exceptions-mips.c' || echo '$(srcdir)/'`exceptions-mips.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-exceptions-mips.Tpo $(DEPDIR)/libmini_la-exceptions-mips.Plo
#	$(AM_V_CC)source='exceptions-mips.c' object='libmini_la-exceptions-mips.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-exceptions-mips.lo `test -f 'exceptions-mips.c' || echo '$(srcdir)/'`exceptions-mips.c

libmini_la-tramp-mips.lo: tramp-mips.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-mips.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-mips.Tpo -c -o libmini_la-tramp-mips.lo `test -f 'tramp-mips.c' || echo '$(srcdir)/'`tramp-mips.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-mips.Tpo $(DEPDIR)/libmini_la-tramp-mips.Plo
#	$(AM_V_CC)source='tramp-mips.c' object='libmini_la-tramp-mips.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-mips.lo `test -f 'tramp-mips.c' || echo '$(srcdir)/'`tramp-mips.c

libmini_la-mini-ppc.lo: mini-ppc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-ppc.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-ppc.Tpo -c -o libmini_la-mini-ppc.lo `test -f 'mini-ppc.c' || echo '$(srcdir)/'`mini-ppc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-ppc.Tpo $(DEPDIR)/libmini_la-mini-ppc.Plo
#	$(AM_V_CC)source='mini-ppc.c' object='libmini_la-mini-ppc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-ppc.lo `test -f 'mini-ppc.c' || echo '$(srcdir)/'`mini-ppc.c

libmini_la-exceptions-ppc.lo: exceptions-ppc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-exceptions-ppc.lo -MD -MP -MF $(DEPDIR)/libmini_la-exceptions-ppc.Tpo -c -o libmini_la-exceptions-ppc.lo `test -f 'exceptions-ppc.c' || echo '$(srcdir)/'`exceptions-ppc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-exceptions-ppc.Tpo $(DEPDIR)/libmini_la-exceptions-ppc.Plo
#	$(AM_V_CC)source='exceptions-ppc.c' object='libmini_la-exceptions-ppc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-exceptions-ppc.lo `test -f 'exceptions-ppc.c' || echo '$(srcdir)/'`exceptions-ppc.c

libmini_la-tramp-ppc.lo: tramp-ppc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-ppc.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-ppc.Tpo -c -o libmini_la-tramp-ppc.lo `test -f 'tramp-ppc.c' || echo '$(srcdir)/'`tramp-ppc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-ppc.Tpo $(DEPDIR)/libmini_la-tramp-ppc.Plo
#	$(AM_V_CC)source='tramp-ppc.c' object='libmini_la-tramp-ppc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-ppc.lo `test -f 'tramp-ppc.c' || echo '$(srcdir)/'`tramp-ppc.c

libmini_la-mini-s390x.lo: mini-s390x.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-s390x.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-s390x.Tpo -c -o libmini_la-mini-s390x.lo `test -f 'mini-s390x.c' || echo '$(srcdir)/'`mini-s390x.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-s390x.Tpo $(DEPDIR)/libmini_la-mini-s390x.Plo
#	$(AM_V_CC)source='mini-s390x.c' object='libmini_la-mini-s390x.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-s390x.lo `test -f 'mini-s390x.c' || echo '$(srcdir)/'`mini-s390x.c

libmini_la-exceptions-s390x.lo: exceptions-s390x.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-exceptions-s390x.lo -MD -MP -MF $(DEPDIR)/libmini_la-exceptions-s390x.Tpo -c -o libmini_la-exceptions-s390x.lo `test -f 'exceptions-s390x.c' || echo '$(srcdir)/'`exceptions-s390x.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-exceptions-s390x.Tpo $(DEPDIR)/libmini_la-exceptions-s390x.Plo
#	$(AM_V_CC)source='exceptions-s390x.c' object='libmini_la-exceptions-s390x.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-exceptions-s390x.lo `test -f 'exceptions-s390x.c' || echo '$(srcdir)/'`exceptions-s390x.c

libmini_la-tramp-s390x.lo: tramp-s390x.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-s390x.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-s390x.Tpo -c -o libmini_la-tramp-s390x.lo `test -f 'tramp-s390x.c' || echo '$(srcdir)/'`tramp-s390x.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-s390x.Tpo $(DEPDIR)/libmini_la-tramp-s390x.Plo
#	$(AM_V_CC)source='tramp-s390x.c' object='libmini_la-tramp-s390x.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-s390x.lo `test -f 'tramp-s390x.c' || echo '$(srcdir)/'`tramp-s390x.c

libmini_la-mini-sparc.lo: mini-sparc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-sparc.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-sparc.Tpo -c -o libmini_la-mini-sparc.lo `test -f 'mini-sparc.c' || echo '$(srcdir)/'`mini-sparc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-sparc.Tpo $(DEPDIR)/libmini_la-mini-sparc.Plo
#	$(AM_V_CC)source='mini-sparc.c' object='libmini_la-mini-sparc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-sparc.lo `test -f 'mini-sparc.c' || echo '$(srcdir)/'`mini-sparc.c

libmini_la-exceptions-sparc.lo: exceptions-sparc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-exceptions-sparc.lo -MD -MP -MF $(DEPDIR)/libmini_la-exceptions-sparc.Tpo -c -o libmini_la-exceptions-sparc.lo `test -f 'exceptions-sparc.c' || echo '$(srcdir)/'`exceptions-sparc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-exceptions-sparc.Tpo $(DEPDIR)/libmini_la-exceptions-sparc.Plo
#	$(AM_V_CC)source='exceptions-sparc.c' object='libmini_la-exceptions-sparc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-exceptions-sparc.lo `test -f 'exceptions-sparc.c' || echo '$(srcdir)/'`exceptions-sparc.c

libmini_la-tramp-sparc.lo: tramp-sparc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-sparc.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-sparc.Tpo -c -o libmini_la-tramp-sparc.lo `test -f 'tramp-sparc.c' || echo '$(srcdir)/'`tramp-sparc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-sparc.Tpo $(DEPDIR)/libmini_la-tramp-sparc.Plo
#	$(AM_V_CC)source='tramp-sparc.c' object='libmini_la-tramp-sparc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-sparc.lo `test -f 'tramp-sparc.c' || echo '$(srcdir)/'`tramp-sparc.c

libmini_la-mini-wasm.lo: mini-wasm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-wasm.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-wasm.Tpo -c -o libmini_la-mini-wasm.lo `test -f 'mini-wasm.c' || echo '$(srcdir)/'`mini-wasm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-wasm.Tpo $(DEPDIR)/libmini_la-mini-wasm.Plo
#	$(AM_V_CC)source='mini-wasm.c' object='libmini_la-mini-wasm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-wasm.lo `test -f 'mini-wasm.c' || echo '$(srcdir)/'`mini-wasm.c

libmini_la-exceptions-wasm.lo: exceptions-wasm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-exceptions-wasm.lo -MD -MP -MF $(DEPDIR)/libmini_la-exceptions-wasm.Tpo -c -o libmini_la-exceptions-wasm.lo `test -f 'exceptions-wasm.c' || echo '$(srcdir)/'`exceptions-wasm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-exceptions-wasm.Tpo $(DEPDIR)/libmini_la-exceptions-wasm.Plo
#	$(AM_V_CC)source='exceptions-wasm.c' object='libmini_la-exceptions-wasm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-exceptions-wasm.lo `test -f 'exceptions-wasm.c' || echo '$(srcdir)/'`exceptions-wasm.c

libmini_la-tramp-wasm.lo: tramp-wasm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-wasm.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-wasm.Tpo -c -o libmini_la-tramp-wasm.lo `test -f 'tramp-wasm.c' || echo '$(srcdir)/'`tramp-wasm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-wasm.Tpo $(DEPDIR)/libmini_la-tramp-wasm.Plo
#	$(AM_V_CC)source='tramp-wasm.c' object='libmini_la-tramp-wasm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-wasm.lo `test -f 'tramp-wasm.c' || echo '$(srcdir)/'`tramp-wasm.c

libmini_la-mini-x86.lo: mini-x86.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-x86.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-x86.Tpo -c -o libmini_la-mini-x86.lo `test -f 'mini-x86.c' || echo '$(srcdir)/'`mini-x86.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-x86.Tpo $(DEPDIR)/libmini_la-mini-x86.Plo
#	$(AM_V_CC)source='mini-x86.c' object='libmini_la-mini-x86.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-x86.lo `test -f 'mini-x86.c' || echo '$(srcdir)/'`mini-x86.c

libmini_la-exceptions-x86.lo: exceptions-x86.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-exceptions-x86.lo -MD -MP -MF $(DEPDIR)/libmini_la-exceptions-x86.Tpo -c -o libmini_la-exceptions-x86.lo `test -f 'exceptions-x86.c' || echo '$(srcdir)/'`exceptions-x86.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-exceptions-x86.Tpo $(DEPDIR)/libmini_la-exceptions-x86.Plo
#	$(AM_V_CC)source='exceptions-x86.c' object='libmini_la-exceptions-x86.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-exceptions-x86.lo `test -f 'exceptions-x86.c' || echo '$(srcdir)/'`exceptions-x86.c

libmini_la-tramp-x86.lo: tramp-x86.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-x86.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-x86.Tpo -c -o libmini_la-tramp-x86.lo `test -f 'tramp-x86.c' || echo '$(srcdir)/'`tramp-x86.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-x86.Tpo $(DEPDIR)/libmini_la-tramp-x86.Plo
#	$(AM_V_CC)source='tramp-x86.c' object='libmini_la-tramp-x86.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-x86.lo `test -f 'tramp-x86.c' || echo '$(srcdir)/'`tramp-x86.c

libmini_la-mini-x86-gsharedvt.lo: mini-x86-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-x86-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-x86-gsharedvt.Tpo -c -o libmini_la-mini-x86-gsharedvt.lo `test -f 'mini-x86-gsharedvt.c' || echo '$(srcdir)/'`mini-x86-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-x86-gsharedvt.Tpo $(DEPDIR)/libmini_la-mini-x86-gsharedvt.Plo
#	$(AM_V_CC)source='mini-x86-gsharedvt.c' object='libmini_la-mini-x86-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-x86-gsharedvt.lo `test -f 'mini-x86-gsharedvt.c' || echo '$(srcdir)/'`mini-x86-gsharedvt.c

libmini_la-tramp-x86-gsharedvt.lo: tramp-x86-gsharedvt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-tramp-x86-gsharedvt.lo -MD -MP -MF $(DEPDIR)/libmini_la-tramp-x86-gsharedvt.Tpo -c -o libmini_la-tramp-x86-gsharedvt.lo `test -f 'tramp-x86-gsharedvt.c' || echo '$(srcdir)/'`tramp-x86-gsharedvt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-tramp-x86-gsharedvt.Tpo $(DEPDIR)/libmini_la-tramp-x86-gsharedvt.Plo
#	$(AM_V_CC)source='tramp-x86-gsharedvt.c' object='libmini_la-tramp-x86-gsharedvt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-tramp-x86-gsharedvt.lo `test -f 'tramp-x86-gsharedvt.c' || echo '$(srcdir)/'`tramp-x86-gsharedvt.c

libmini_la-mini-darwin.lo: mini-darwin.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-darwin.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-darwin.Tpo -c -o libmini_la-mini-darwin.lo `test -f 'mini-darwin.c' || echo '$(srcdir)/'`mini-darwin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-darwin.Tpo $(DEPDIR)/libmini_la-mini-darwin.Plo
#	$(AM_V_CC)source='mini-darwin.c' object='libmini_la-mini-darwin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-darwin.lo `test -f 'mini-darwin.c' || echo '$(srcdir)/'`mini-darwin.c

libmini_la-mini-posix.lo: mini-posix.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-posix.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-posix.Tpo -c -o libmini_la-mini-posix.lo `test -f 'mini-posix.c' || echo '$(srcdir)/'`mini-posix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-posix.Tpo $(DEPDIR)/libmini_la-mini-posix.Plo
#	$(AM_V_CC)source='mini-posix.c' object='libmini_la-mini-posix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-posix.lo `test -f 'mini-posix.c' || echo '$(srcdir)/'`mini-posix.c

libmini_la-mini-windows.lo: mini-windows.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-windows.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-windows.Tpo -c -o libmini_la-mini-windows.lo `test -f 'mini-windows.c' || echo '$(srcdir)/'`mini-windows.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-windows.Tpo $(DEPDIR)/libmini_la-mini-windows.Plo
#	$(AM_V_CC)source='mini-windows.c' object='libmini_la-mini-windows.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-windows.lo `test -f 'mini-windows.c' || echo '$(srcdir)/'`mini-windows.c

libmini_la-mini-windows-dllmain.lo: mini-windows-dllmain.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-windows-dllmain.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-windows-dllmain.Tpo -c -o libmini_la-mini-windows-dllmain.lo `test -f 'mini-windows-dllmain.c' || echo '$(srcdir)/'`mini-windows-dllmain.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-windows-dllmain.Tpo $(DEPDIR)/libmini_la-mini-windows-dllmain.Plo
#	$(AM_V_CC)source='mini-windows-dllmain.c' object='libmini_la-mini-windows-dllmain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-windows-dllmain.lo `test -f 'mini-windows-dllmain.c' || echo '$(srcdir)/'`mini-windows-dllmain.c

libmini_la-mini-windows-dlldac.lo: mini-windows-dlldac.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -MT libmini_la-mini-windows-dlldac.lo -MD -MP -MF $(DEPDIR)/libmini_la-mini-windows-dlldac.Tpo -c -o libmini_la-mini-windows-dlldac.lo `test -f 'mini-windows-dlldac.c' || echo '$(srcdir)/'`mini-windows-dlldac.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmini_la-mini-windows-dlldac.Tpo $(DEPDIR)/libmini_la-mini-windows-dlldac.Plo
#	$(AM_V_CC)source='mini-windows-dlldac.c' object='libmini_la-mini-windows-dlldac.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmini_la_CFLAGS) $(CFLAGS) -c -o libmini_la-mini-windows-dlldac.lo `test -f 'mini-windows-dlldac.c' || echo '$(srcdir)/'`mini-windows-dlldac.c

genmdesc-genmdesc.o: genmdesc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT genmdesc-genmdesc.o -MD -MP -MF $(DEPDIR)/genmdesc-genmdesc.Tpo -c -o genmdesc-genmdesc.o `test -f 'genmdesc.c' || echo '$(srcdir)/'`genmdesc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/genmdesc-genmdesc.Tpo $(DEPDIR)/genmdesc-genmdesc.Po
#	$(AM_V_CC)source='genmdesc.c' object='genmdesc-genmdesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o genmdesc-genmdesc.o `test -f 'genmdesc.c' || echo '$(srcdir)/'`genmdesc.c

genmdesc-genmdesc.obj: genmdesc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT genmdesc-genmdesc.obj -MD -MP -MF $(DEPDIR)/genmdesc-genmdesc.Tpo -c -o genmdesc-genmdesc.obj `if test -f 'genmdesc.c'; then $(CYGPATH_W) 'genmdesc.c'; else $(CYGPATH_W) '$(srcdir)/genmdesc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/genmdesc-genmdesc.Tpo $(DEPDIR)/genmdesc-genmdesc.Po
#	$(AM_V_CC)source='genmdesc.c' object='genmdesc-genmdesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o genmdesc-genmdesc.obj `if test -f 'genmdesc.c'; then $(CYGPATH_W) 'genmdesc.c'; else $(CYGPATH_W) '$(srcdir)/genmdesc.c'; fi`

genmdesc-helpers.o: helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT genmdesc-helpers.o -MD -MP -MF $(DEPDIR)/genmdesc-helpers.Tpo -c -o genmdesc-helpers.o `test -f 'helpers.c' || echo '$(srcdir)/'`helpers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/genmdesc-helpers.Tpo $(DEPDIR)/genmdesc-helpers.Po
#	$(AM_V_CC)source='helpers.c' object='genmdesc-helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o genmdesc-helpers.o `test -f 'helpers.c' || echo '$(srcdir)/'`helpers.c

genmdesc-helpers.obj: helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT genmdesc-helpers.obj -MD -MP -MF $(DEPDIR)/genmdesc-helpers.Tpo -c -o genmdesc-helpers.obj `if test -f 'helpers.c'; then $(CYGPATH_W) 'helpers.c'; else $(CYGPATH_W) '$(srcdir)/helpers.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/genmdesc-helpers.Tpo $(DEPDIR)/genmdesc-helpers.Po
#	$(AM_V_CC)source='helpers.c' object='genmdesc-helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o genmdesc-helpers.obj `if test -f 'helpers.c'; then $(CYGPATH_W) 'helpers.c'; else $(CYGPATH_W) '$(srcdir)/helpers.c'; fi`

../metadata/genmdesc-opcodes.o: ../metadata/opcodes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT ../metadata/genmdesc-opcodes.o -MD -MP -MF ../metadata/$(DEPDIR)/genmdesc-opcodes.Tpo -c -o ../metadata/genmdesc-opcodes.o `test -f '../metadata/opcodes.c' || echo '$(srcdir)/'`../metadata/opcodes.c
	$(AM_V_at)$(am__mv) ../metadata/$(DEPDIR)/genmdesc-opcodes.Tpo ../metadata/$(DEPDIR)/genmdesc-opcodes.Po
#	$(AM_V_CC)source='../metadata/opcodes.c' object='../metadata/genmdesc-opcodes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o ../metadata/genmdesc-opcodes.o `test -f '../metadata/opcodes.c' || echo '$(srcdir)/'`../metadata/opcodes.c

../metadata/genmdesc-opcodes.obj: ../metadata/opcodes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT ../metadata/genmdesc-opcodes.obj -MD -MP -MF ../metadata/$(DEPDIR)/genmdesc-opcodes.Tpo -c -o ../metadata/genmdesc-opcodes.obj `if test -f '../metadata/opcodes.c'; then $(CYGPATH_W) '../metadata/opcodes.c'; else $(CYGPATH_W) '$(srcdir)/../metadata/opcodes.c'; fi`
	$(AM_V_at)$(am__mv) ../metadata/$(DEPDIR)/genmdesc-opcodes.Tpo ../metadata/$(DEPDIR)/genmdesc-opcodes.Po
#	$(AM_V_CC)source='../metadata/opcodes.c' object='../metadata/genmdesc-opcodes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o ../metadata/genmdesc-opcodes.obj `if test -f '../metadata/opcodes.c'; then $(CYGPATH_W) '../metadata/opcodes.c'; else $(CYGPATH_W) '$(srcdir)/../metadata/opcodes.c'; fi`

mono-main-sgen.o: main-sgen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_CFLAGS) $(CFLAGS) -MT mono-main-sgen.o -MD -MP -MF $(DEPDIR)/mono-main-sgen.Tpo -c -o mono-main-sgen.o `test -f 'main-sgen.c' || echo '$(srcdir)/'`main-sgen.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mono-main-sgen.Tpo $(DEPDIR)/mono-main-sgen.Po
#	$(AM_V_CC)source='main-sgen.c' object='mono-main-sgen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_CFLAGS) $(CFLAGS) -c -o mono-main-sgen.o `test -f 'main-sgen.c' || echo '$(srcdir)/'`main-sgen.c

mono-main-sgen.obj: main-sgen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_CFLAGS) $(CFLAGS) -MT mono-main-sgen.obj -MD -MP -MF $(DEPDIR)/mono-main-sgen.Tpo -c -o mono-main-sgen.obj `if test -f 'main-sgen.c'; then $(CYGPATH_W) 'main-sgen.c'; else $(CYGPATH_W) '$(srcdir)/main-sgen.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mono-main-sgen.Tpo $(DEPDIR)/mono-main-sgen.Po
#	$(AM_V_CC)source='main-sgen.c' object='mono-main-sgen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_CFLAGS) $(CFLAGS) -c -o mono-main-sgen.obj `if test -f 'main-sgen.c'; then $(CYGPATH_W) 'main-sgen.c'; else $(CYGPATH_W) '$(srcdir)/main-sgen.c'; fi`

mono_boehm-main.o: main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_boehm_CFLAGS) $(CFLAGS) -MT mono_boehm-main.o -MD -MP -MF $(DEPDIR)/mono_boehm-main.Tpo -c -o mono_boehm-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mono_boehm-main.Tpo $(DEPDIR)/mono_boehm-main.Po
#	$(AM_V_CC)source='main.c' object='mono_boehm-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_boehm_CFLAGS) $(CFLAGS) -c -o mono_boehm-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

mono_boehm-main.obj: main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_boehm_CFLAGS) $(CFLAGS) -MT mono_boehm-main.obj -MD -MP -MF $(DEPDIR)/mono_boehm-main.Tpo -c -o mono_boehm-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mono_boehm-main.Tpo $(DEPDIR)/mono_boehm-main.Po
#	$(AM_V_CC)source='main.c' object='mono_boehm-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_boehm_CFLAGS) $(CFLAGS) -c -o mono_boehm-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

mono_sgen-main-sgen.o: main-sgen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_sgen_CFLAGS) $(CFLAGS) -MT mono_sgen-main-sgen.o -MD -MP -MF $(DEPDIR)/mono_sgen-main-sgen.Tpo -c -o mono_sgen-main-sgen.o `test -f 'main-sgen.c' || echo '$(srcdir)/'`main-sgen.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mono_sgen-main-sgen.Tpo $(DEPDIR)/mono_sgen-main-sgen.Po
#	$(AM_V_CC)source='main-sgen.c' object='mono_sgen-main-sgen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_sgen_CFLAGS) $(CFLAGS) -c -o mono_sgen-main-sgen.o `test -f 'main-sgen.c' || echo '$(srcdir)/'`main-sgen.c

mono_sgen-main-sgen.obj: main-sgen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_sgen_CFLAGS) $(CFLAGS) -MT mono_sgen-main-sgen.obj -MD -MP -MF $(DEPDIR)/mono_sgen-main-sgen.Tpo -c -o mono_sgen-main-sgen.obj `if test -f 'main-sgen.c'; then $(CYGPATH_W) 'main-sgen.c'; else $(CYGPATH_W) '$(srcdir)/main-sgen.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mono_sgen-main-sgen.Tpo $(DEPDIR)/mono_sgen-main-sgen.Po
#	$(AM_V_CC)source='main-sgen.c' object='mono_sgen-main-sgen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mono_sgen_CFLAGS) $(CFLAGS) -c -o mono_sgen-main-sgen.obj `if test -f 'main-sgen.c'; then $(CYGPATH_W) 'main-sgen.c'; else $(CYGPATH_W) '$(srcdir)/main-sgen.c'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf interp/.libs interp/_libs
install-libmonoincludeHEADERS: $(libmonoinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libmonoinclude_HEADERS)'; test -n "$(libmonoincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libmonoincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libmonoincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libmonoincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libmonoincludedir)" || exit $$?; \
	done

uninstall-libmonoincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmonoinclude_HEADERS)'; test -n "$(libmonoincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libmonoincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libmonoincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../metadata/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../metadata/$(am__dirstamp)
	-rm -f interp/$(DEPDIR)/$(am__dirstamp)
	-rm -f interp/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
#install-exec-hook:
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ../metadata/$(DEPDIR) ./$(DEPDIR) interp/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libmonoincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ../metadata/$(DEPDIR) ./$(DEPDIR) interp/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libmonoincludeHEADERS

.MAKE: all check check-am install install-am install-exec-am \
	install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am check-local clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libmonoincludeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES uninstall-libmonoincludeHEADERS

.PRECIOUS: Makefile


#export HOST_CC

mono: mono-$(mono_bin_suffix)
	ln -sf $< $@

mono.exe: mono-$(mono_bin_suffix).exe
	ln -sf $< $@

install-exec-hook:
	(cd $(DESTDIR)$(bindir) && ln -sf mono-$(mono_bin_suffix) mono)
	(cd $(DESTDIR)$(libdir); shopt -s nullglob 2>/dev/null; for i in libmono$(libmono_suffix)*; do ln -sf $$i `echo $$i | sed s/$(libmono_suffix)//` ; done)

# We build this after libmono was built so it contains the date when the final
# link was done
##buildver-boehm.h: libmini-static.la $(monodir)/mono/metadata/libmonoruntime.la
#buildver-boehm.h: libmini-static.la $(monodir)/mono/metadata/libmonoruntime-static.la
#	@echo "const char *build_date = \"`date`\";" > buildver-boehm.h
#mono_boehm-main.$(OBJEXT): buildver-boehm.h

#buildver-sgen.h: libmini-static.la $(monodir)/mono/metadata/libmonoruntimesgen.la $(monodir)/mono/sgen/libmonosgen.la
buildver-sgen.h: libmini-static.la $(monodir)/mono/metadata/libmonoruntimesgen-static.la $(monodir)/mono/sgen/libmonosgen-static.la
	@echo "const char *build_date = \"`date`\";" > buildver-sgen.h
mono_sgen-main-sgen.$(OBJEXT): buildver-sgen.h
main-sgen.$(OBJEXT): buildver-sgen.h

# if SUPPORT_SGEN
# 
# mono_LDADD = $(mono_sgen_LDADD)
# mono_LDFLAGS = $(mono_sgen_LDFLAGS)
# 
# endif

#mono-dtrace.$(OBJEXT): $(top_srcdir)/data/mono.d mini.lo $(monodir)/mono/metadata/libmonoruntime-static.la
#	DTRACE="$(DTRACE)" DTRACEFLAGS="$(DTRACEFLAGS)" AR="$(AR)" $(SHELL) $(top_srcdir)/data/dtrace-prelink.sh \
#	$@ $(top_srcdir)/data/mono.d $(monodir)/mono/metadata/libmonoruntime-static.la mini.lo

#.libs/mono-dtrace.$(OBJEXT): $(top_srcdir)/data/mono.d mini.lo $(monodir)/mono/metadata/libmonoruntime.la
#	DTRACE="$(DTRACE)" DTRACEFLAGS="$(DTRACEFLAGS)" AR="$(AR)" $(SHELL) $(top_srcdir)/data/dtrace-prelink.sh \
#	--pic $@ $(top_srcdir)/data/mono.d $(monodir)/mono/metadata/libmonoruntime.la mini.lo

basic-simd.exe: basic-simd.cs TestDriver.dll
	$(MCS) -out:$@ $(CSFLAGS) $< -r:TestDriver.dll -r:$(CLASS)/Mono.Simd.dll

basic-vectors.exe: basic-vectors.cs TestDriver.dll
	$(MCS) -out:$@ $(CSFLAGS) $< -r:TestDriver.dll -r:$(CLASS)/System.Numerics.dll -r:$(CLASS)/System.Numerics.Vectors.dll

builtin-types.exe: builtin-types.cs TestDriver.dll
	$(MCS) -out:$@ $(CSFLAGS) -define:ARCH_$(shell echo $$((8 * $(SIZEOF_VOID_P)))) $< -r:TestDriver.dll

nacl.exe: nacl.cs TestDriver.dll
	$(MCS) -out:$@ $(CSFLAGS) $< -r:TestDriver.dll -r:$(CLASS)/Mono.Simd.dll

generics.exe: generics.cs TestDriver.dll generics-variant-types.dll
	$(MCS) -out:$@ $(CSFLAGS) $< -r:TestDriver.dll -r:generics-variant-types.dll -r:$(CLASS)/System.Core.dll

unaligned.exe: unaligned.cs TestDriver.dll MemoryIntrinsics.dll
	$(MCS) -out:$@ $(CSFLAGS) $< -r:TestDriver.dll -r:MemoryIntrinsics.dll

%.exe: %.cs TestDriver.dll
	$(MCS) -out:$@ $(CSFLAGS) $< -r:TestDriver.dll

%.exe: %.il
	$(ILASM) -output=$@ $<

TestDriver.dll: $(srcdir)/TestDriver.cs $(srcdir)/TestHelpers.cs
	$(MCS) -out:$@ -target:library $^

generics-variant-types.dll: generics-variant-types.il
	$(ILASM) -dll -output=$@ $<

MemoryIntrinsics.dll: MemoryIntrinsics.il
	$(ILASM) -dll -output=$@ $<

cpu-wasm.h: cpu-wasm.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-wasm.h wasm_desc $(srcdir)/cpu-wasm.md

cpu-x86.h: cpu-x86.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-x86.h x86_desc $(srcdir)/cpu-x86.md

cpu-amd64.h: cpu-amd64.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-amd64.h amd64_desc $(srcdir)/cpu-amd64.md

cpu-ppc.h: cpu-ppc.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-ppc.h ppcg4 $(srcdir)/cpu-ppc.md

cpu-ppc64.h: cpu-ppc64.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-ppc64.h ppc64_cpu_desc $(srcdir)/cpu-ppc64.md

cpu-arm.h: cpu-arm.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-arm.h arm_cpu_desc $(srcdir)/cpu-arm.md

cpu-arm64.h: cpu-arm64.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-arm64.h arm64_cpu_desc $(srcdir)/cpu-arm64.md

cpu-sparc.h: cpu-sparc.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-sparc.h sparc_desc $(srcdir)/cpu-sparc.md

cpu-s390x.h: cpu-s390x.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-s390x.h s390x_cpu_desc $(srcdir)/cpu-s390x.md

cpu-mips.h: cpu-mips.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) cpu-mips.h mips_desc $(srcdir)/cpu-mips.md

testi: mono test.exe
	$(MINI_RUNTIME) -v -v --ncompile 1 --compile Test:$(mtest) test.exe

# ensure the tests are actually correct
checktests: $(regtests)
	for i in $(regtests); do $(MINI_RUNTIME) $$i; done

rcheck-nunit: mono $(regtests)
	$(MINI_RUNTIME) --regression $(regtests) > regressiontests.out 2>&1; cat regressiontests.out; \
	if grep -q "100% pass" regressiontests.out; then successbool=True; failurescount=0; else successbool=False; failurescount=1; fi; \
	echo "<?xml version='1.0' encoding='utf-8'?>\
		<test-results failures='$$failurescount' total='1' not-run='0' name='regression-tests.dummy' date='$$(date +%F)' time='$$(date +%T)'>\
			<test-suite name='regression-tests.dummy' success='$$successbool' time='0'>\
				<results><test-case name='MonoTests.regressions.100percentsuccess' executed='True' success='$$successbool' time='0'>" > TestResult-regression.xml; \
					if [ "$$successbool" = "False" ]; then echo "<failure><message><![CDATA[$$(cat regressiontests.out)]]></message><stack-trace></stack-trace></failure>" >> TestResult-regression.xml; fi; \
				echo "</test-case></results>\
			</test-suite>\
		</test-results>" >> TestResult-regression.xml; exit $$failurescount

rcheck: mono $(regtests)
	$(MINI_RUNTIME) --regression $(regtests)

richeck: mono $(regtests)
	$(INTERP_RUNTIME) --regression $(regtests)

mixedcheck: mono mixed.exe
	$(MINI_RUNTIME) --interp=jit=JitClass mixed.exe

#check-seq-points:
check-seq-points: mono $(regtests)
	rm -f TestResult-op_il_seq_point.xml
	for i in $(regtests); do $(srcdir)/test_op_il_seq_point.sh $$i || ($(srcdir)/test_op_il_seq_point_headerfooter.sh; exit 1) || exit 1; done
	for i in $(regtests); do $(srcdir)/test_op_il_seq_point.sh $$i --aot || ($(srcdir)/test_op_il_seq_point_headerfooter.sh; exit 1) || exit 1; done
	$(srcdir)/test_op_il_seq_point_headerfooter.sh

gctest: mono gc-test.exe
	MONO_DEBUG_OPTIONS=clear-nursery-at-gc $(MINI_RUNTIME) --regression gc-test.exe

aotcheck: mono $(regtests)
	rm -rf *.exe.so *.exe.dylib *.exe.dylib.dSYM
	$(MINI_RUNTIME) $(LLVM_AOT_RUNTIME_OPTS) --aot $(regtests) || exit 1
	for i in $(regtests); do $(RUNTIME_AOTCHECK) --regression $$i || exit 1; done
	rm -rf *.exe.so *.exe.dylib *.exe.dylib.dSYM

llvmaotcheck:
	$(MAKE) aotcheck LLVM=1

gsharedvtcheck:
	$(MAKE) fullaotcheck GSHAREDVT=1

# This currently only works on amd64/arm
fullaotcheck: $(mono) $(fullaot_regtests) $(fullaot_testing_deps)
	rm -rf $(FULLAOT_TMP_DIR)
	mkdir $(FULLAOT_TMP_DIR)
	$(MAKE) fullaot-libs AOT_FLAGS="full,$(MONO_FULLAOT_ADDITIONAL_ARGS)$(INVARIANT_AOT_OPTIONS)" GSHAREDVT=$(GSHAREDVT)
	cp $(regtests) $(fullaot_regtests) $(fullaot_testing_deps) $(FULLAOT_TMP_DIR)/
	MONO_PATH=$(FULLAOT_TMP_DIR) $(top_builddir)/runtime/mono-wrapper $(MOBILE_RUNTIME_ARG) $(LLVM_AOT_RUNTIME_OPTS) $(GSHAREDVT_RUNTIME_OPTS) --aot="full,$(MONO_FULLAOT_ADDITIONAL_ARGS)$(INVARIANT_AOT_OPTIONS)" $(FULLAOT_TMP_DIR)/{*.dll,*.exe} || exit 1
	ln -s $(if $(MONO_EXECUTABLE),$(MONO_EXECUTABLE),$$PWD/mono) $(FULLAOT_TMP_DIR)/
	for i in $(fullaot_regtests); do echo $$i; MONO_PATH=$(FULLAOT_TMP_DIR) $(top_builddir)/runtime/mono-wrapper $(MOBILE_RUNTIME_ARG) --full-aot $(FULLAOT_TMP_DIR)/$$i --exclude '!FULLAOT' $(ARCH_FULLAOT_EXCLUDE) || exit 1; done

# This can run in parallel
fullaot-libs: $(patsubst %,fullaot-tmp/%.dylib,$(FULLAOT_LIBS))

fullaot-tmp/%.dylib: $(CLASS)/%
	cp $(CLASS)/$* fullaot-tmp/
	mkdir fullaot-tmp/$*-tmp
	MONO_PATH="fullaot-tmp/$(PLATFORM_PATH_SEPARATOR)$(CLASS)" $(top_builddir)/runtime/mono-wrapper $(MOBILE_RUNTIME_ARG) $(if $(GSHAREDVT),-O=gsharedvt) --aot=$(AOT_FLAGS),temp-path=fullaot-tmp/$*-tmp fullaot-tmp/$*
	rm -rf fullaot-tmp/$*-tmp

llvmfullaotcheck:
	$(MAKE) fullaotcheck LLVM=1

llvmonlycheck: mono $(llvmonly_regtests)
	rm -rf fullaot-tmp
	mkdir fullaot-tmp
	$(MAKE) fullaot-libs AOT_FLAGS="llvmonly,$(MONO_FULLAOT_ADDITIONAL_ARGS)$(INVARIANT_AOT_OPTIONS)"
	cp $(llvmonly_regtests) $(fullaot_testing_deps) fullaot-tmp/
	MONO_PATH=fullaot-tmp $(top_builddir)/runtime/mono-wrapper  $(MOBILE_RUNTIME_ARG) --aot=llvmonly fullaot-tmp/{*.dll,*.exe} || exit 1
	ln -s $$PWD/mono fullaot-tmp/
	for i in $(llvmonly_regtests); do echo $$i; MONO_PATH=fullaot-tmp $(top_builddir)/runtime/mono-wrapper $(MOBILE_RUNTIME_ARG) --llvmonly fullaot-tmp/$$i --exclude '!BITCODE' || exit 1; done

gccheck: gc-test.exe
	MONO_GC_PARAMS=stack-mark=precise MONO_GC_DEBUG=clear-at-gc ./mono-sgen gc-test.exe	

bench: mono test.exe
	time env $(MINI_RUNTIME) --ncompile $(count) --compile Test:$(mtest) test.exe

mbench: test.exe
	time $(monodir)/mono/jit/mono --ncompile $(count) --compile Test:$(mtest) test.exe

stat1: mono bench.exe
	$(MINI_RUNTIME) --verbose --statfile stats.pl --regression bench.exe
	perl viewstat.pl stats.pl

stat2: mono basic.exe
	$(MINI_RUNTIME) --verbose --statfile stats.pl --regression basic.exe
	perl viewstat.pl -e stats.pl

stat3: mono bench.exe
	$(MINI_RUNTIME) --statfile stats.pl --ncompile 1000 --compile Tests:test_0_many_nested_loops bench.exe 
	perl viewstat.pl stats.pl

docu: mini.sgm
	docbook2txt mini.sgm

check-local: $(check_local_targets)

clean-local:
	rm -f mono a.out gmon.out *.o buildver-boehm.h buildver-sgen.h test.exe regressionexitcode.out TestResult-op_il_seq_point.xml*

version.h: Makefile
	if test -d $(top_srcdir)/.git; then \
		(cd $(top_srcdir); \
			LANG=C; export LANG; \
			if test -z "$$ghprbPullId"; then \
				branch=`git branch | grep '^\*' | sed 's/(detached from .*/explicit/' | cut -d ' ' -f 2`; \
			else \
				branch="pull-request-$$ghprbPullId"; \
			fi; \
			version=`git log --no-color --first-parent -n1 --pretty=format:%h`; \
			echo "#define FULL_VERSION \"$$branch/$$version\""; \
		); \
	else \
		echo "#define FULL_VERSION \"tarball\""; \
	fi > version.h

# Utility target for patching libtool to speed up linking
patch-libtool:
	sed -e 's,if (for obj in $$oldobjs,if (for obj in "",g' < ../../libtool > 2; mv 2 ../../libtool
	chmod a+x ../../libtool

# Utility target for patching libtool to get rid of the 'ranlib: file <file> has no symbols" warnings
patch-osx-libtool:
	sed -e 's/old_archive_cmds=.*/old_archive_cmds="libtool -no_warning_for_no_symbols -static -o \\$$oldlib \\$$oldobjs"/g' < ../../libtool > 2; mv 2 ../../libtool
	chmod a+x ../../libtool

# Utility target to patch automake to generate the same format silent output as the old mono silent build did
patch-automake:
	src="@echo \"  '. \$$name . ' ' x (8 - length (\$$name)) . '\""; dst="@echo \"'. \$$name . ' ' x (7 - length (\$$name)) .'\""; sed -e "s/$$src/$$dst/g" < $$EXE > 2 && cp 2 $$EXE && rm -f 2

tags:
	etags -o TAGS `find .. -name "*.h" -o -name "*.c"`

Makefile.am: Makefile.am.in
	cp $< $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
